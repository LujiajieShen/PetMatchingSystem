import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardJsonSerializer3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Throwable throwable6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider5, throwable6, (java.lang.Object) stdKeySerializer7, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) "", jsonGenerator6, serializerProvider7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper6 = null;
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper6, javaType7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = wildcardJsonSerializer2.isUnwrappingSerializer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = wildcardJsonSerializer4.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        java.lang.Throwable throwable3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider2, throwable3, (java.lang.Object) wildcardJsonSerializer5, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer12, jsonGenerator17, serializerProvider18, typeSerializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = wildcardJsonSerializer4.isUnwrappingSerializer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Throwable throwable12 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider11, throwable12, (java.lang.Object) 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) 0.0d, jsonGenerator20, serializerProvider21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = wildcardJsonSerializer3.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = objJsonSerializer3.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) (byte) 1, jsonGenerator5, serializerProvider6, typeSerializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.replaceDelegatee(objJsonSerializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer27 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) 10.0d, jsonGenerator25, serializerProvider26, typeSerializer27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        boolean boolean7 = stdKeySerializer4.isEmpty(serializerProvider5, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer9.getDelegatee();
        java.lang.Class<?> wildcardClass13 = stdKeySerializer9.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer4.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer4, jsonGenerator16, serializerProvider17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Throwable throwable12 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider11, throwable12, (java.lang.Object) "", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        java.lang.Throwable throwable8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider7, throwable8, (java.lang.Object) objJsonSerializer15, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer14.getDelegatee();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer9.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer4.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) serializerProvider8, jsonGenerator23, serializerProvider24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(jsonNode22);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) wildcardClass9, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer26 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) jsonNode23, jsonGenerator24, serializerProvider25, typeSerializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        java.lang.Throwable throwable3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        boolean boolean7 = stdKeySerializer4.isEmpty(serializerProvider5, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer4.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass13 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode14 = stdKeySerializer4.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer4.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider2, throwable3, (java.lang.Object) wildcardClass17, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode19);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        java.lang.Throwable throwable2 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider1, throwable2, (java.lang.Object) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        java.lang.Object obj4 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType(obj4, jsonGenerator5, serializerProvider6, typeSerializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer45.unwrappingSerializer(nameTransformer61);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = objJsonSerializer44.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer4.unwrappingSerializer(nameTransformer6);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer9.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer9.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = stdKeySerializer9.isEmpty((java.lang.Object) wildcardClass48);
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer4.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator53 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer4, jsonGenerator53, serializerProvider54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jsonNode52);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper8 = null;
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper8, javaType9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        boolean boolean68 = stdKeySerializer63.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass69 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer43.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass69);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        java.lang.Class<java.lang.Object> objClass13 = stdKeySerializer8.handledType();
        boolean boolean15 = stdKeySerializer8.isEmpty((java.lang.Object) 0);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = objJsonSerializer7.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objClass13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = objJsonSerializer12.isEmpty((java.lang.Object) stdKeySerializer13);
        java.lang.Class<?> wildcardClass38 = objJsonSerializer12.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objJsonSerializer12, jsonGenerator39, serializerProvider40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Throwable throwable46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider45, throwable46, (java.lang.Object) true, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode62);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer3.serializeWithType((java.lang.Object) ' ', jsonGenerator5, serializerProvider6, typeSerializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        java.lang.Class<java.lang.Object> objClass14 = stdKeySerializer9.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass14, jsonGenerator15, serializerProvider16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objClass14);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator44 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) 10.0d, jsonGenerator44, serializerProvider45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper11 = null;
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper11, javaType12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        boolean boolean7 = stdKeySerializer4.isEmpty(serializerProvider5, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer4.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer11.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = objJsonSerializer10.isEmpty((java.lang.Object) stdKeySerializer11);
        java.lang.Class<?> wildcardClass36 = objJsonSerializer10.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardClass36, jsonGenerator37, serializerProvider38, typeSerializer39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Throwable throwable50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = stdKeySerializer51.isEmpty((java.lang.Object) jsonNode66);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider49, throwable50, (java.lang.Object) stdKeySerializer51, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = wildcardJsonSerializer1.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Throwable throwable34 = null;
        java.lang.Object obj35 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider33, throwable34, obj35, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper8 = null;
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper8, javaType9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        boolean boolean11 = stdKeySerializer4.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer4.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objJsonSerializer13, jsonGenerator14, serializerProvider15, typeSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer36.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer17.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass45, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass64, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer51.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer74 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = stdKeySerializer69.unwrappingSerializer(nameTransformer74);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass78 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer69.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer81 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer86.getDelegatee();
        java.lang.Class<?> wildcardClass90 = stdKeySerializer86.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer81.getSchema(serializerProvider85, (java.lang.reflect.Type) wildcardClass90);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer69.getSchema(serializerProvider80, (java.lang.reflect.Type) wildcardClass90);
        boolean boolean93 = stdKeySerializer51.isEmpty((java.lang.Object) wildcardClass90);
        java.lang.Class<java.lang.Object> objClass94 = stdKeySerializer51.handledType();
        boolean boolean95 = stdKeySerializer17.isEmpty(serializerProvider50, (java.lang.Object) objClass94);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator96 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider97 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objClass94, jsonGenerator96, serializerProvider97, typeSerializer98);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(objJsonSerializer75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        java.lang.Throwable throwable5 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider4, throwable5, (java.lang.Object) "hi!", 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer2 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer2.isEmpty(serializerProvider3, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer2.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = stdKeySerializer2.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer9.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer9.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = objJsonSerializer8.isEmpty((java.lang.Object) stdKeySerializer9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = stdKeySerializer35.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer53.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer65.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer53.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = stdKeySerializer35.isEmpty((java.lang.Object) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer9.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator80 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) false, jsonGenerator80, serializerProvider81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(jsonNode79);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Throwable throwable19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer20.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider18, throwable19, (java.lang.Object) stdKeySerializer20, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer10.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) serializerProvider34, jsonGenerator38, serializerProvider39, typeSerializer40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Throwable throwable17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer23.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer18.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass32, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider16, throwable17, (java.lang.Object) serializerProvider22, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode36);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        java.lang.Throwable throwable13 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider12, throwable13, (java.lang.Object) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper16 = null;
        com.fasterxml.jackson.databind.JavaType javaType17 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper16, javaType17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        boolean boolean38 = stdKeySerializer33.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer33.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator41 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer33, jsonGenerator41, serializerProvider42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer8.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer27.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass36, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer8.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass36, false);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) false, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode40);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Throwable throwable62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        java.lang.Class<java.lang.Object> objClass72 = stdKeySerializer67.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer63.getSchema(serializerProvider66, (java.lang.reflect.Type) objClass72, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider61, throwable62, (java.lang.Object) jsonNode74, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objClass72);
        org.junit.Assert.assertNotNull(jsonNode74);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        boolean boolean23 = stdKeySerializer18.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer18.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objJsonSerializer25, jsonGenerator26, serializerProvider27, typeSerializer28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = stdKeySerializer48.unwrappingSerializer(nameTransformer64);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer66.unwrappingSerializer(nameTransformer71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer74.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer83.getDelegatee();
        java.lang.Class<?> wildcardClass87 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer78.getSchema(serializerProvider82, (java.lang.reflect.Type) wildcardClass87);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer66.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = stdKeySerializer48.isEmpty((java.lang.Object) wildcardClass87);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer91 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer92 = stdKeySerializer48.unwrappingSerializer(nameTransformer91);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.replaceDelegatee(objJsonSerializer92);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer92);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper19 = null;
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper19, javaType20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        java.lang.Class<java.lang.Object> objClass53 = stdKeySerializer48.handledType();
        boolean boolean55 = stdKeySerializer48.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer48.unwrappingSerializer(nameTransformer56);
        java.lang.Class<java.lang.Object> objClass58 = stdKeySerializer48.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator59 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer61 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer47.serializeWithType((java.lang.Object) objClass58, jsonGenerator59, serializerProvider60, typeSerializer61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(objClass58);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = stdKeySerializer78.unwrappingSerializer(nameTransformer83);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass87 = stdKeySerializer86.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer78.getSchema(serializerProvider85, (java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<java.lang.Object> objClass89 = stdKeySerializer78.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator90 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.serialize((java.lang.Object) stdKeySerializer78, jsonGenerator90, serializerProvider91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(objClass89);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper46 = null;
        com.fasterxml.jackson.databind.JavaType javaType47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper46, javaType47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer32.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer32.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = stdKeySerializer32.isEmpty((java.lang.Object) wildcardClass71);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer32.unwrappingSerializer(nameTransformer75);
        boolean boolean77 = stdKeySerializer32.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer80 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer6.serializeWithType((java.lang.Object) stdKeySerializer32, jsonGenerator78, serializerProvider79, typeSerializer80);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper17 = null;
        com.fasterxml.jackson.databind.JavaType javaType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper17, javaType18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = objJsonSerializer6.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer65.getDelegatee();
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer65.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer61.getSchema(serializerProvider64, (java.lang.reflect.Type) objClass70, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator73 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) jsonNode72, jsonGenerator73, serializerProvider74, typeSerializer75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertNotNull(jsonNode72);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer34.unwrappingSerializer(nameTransformer36);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer7.unwrappingSerializer(nameTransformer78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        java.lang.Throwable throwable81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.wrapAndThrow(serializerProvider80, throwable81, (java.lang.Object) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        java.lang.Class<?> wildcardClass24 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer38.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = stdKeySerializer38.isEmpty((java.lang.Object) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer12.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass77, false);
        boolean boolean83 = objJsonSerializer3.isEmpty(serializerProvider4, (java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        boolean boolean87 = stdKeySerializer84.isEmpty(serializerProvider85, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer89 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer90 = stdKeySerializer84.unwrappingSerializer(nameTransformer89);
        java.lang.Class<?> wildcardClass91 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator92 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer12.serialize((java.lang.Object) wildcardClass91, jsonGenerator92, serializerProvider93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNotNull(objJsonSerializer90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Throwable throwable29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        boolean boolean37 = objJsonSerializer36.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = objJsonSerializer36.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider28, throwable29, (java.lang.Object) objJsonSerializer36, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Throwable throwable26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer27.handledType();
        boolean boolean34 = stdKeySerializer27.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer27.unwrappingSerializer(nameTransformer35);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider25, throwable26, (java.lang.Object) objJsonSerializer36, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = objJsonSerializer51.isEmpty((java.lang.Object) stdKeySerializer52);
        java.lang.Class<?> wildcardClass77 = objJsonSerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = objJsonSerializer3.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer3.serializeWithType((java.lang.Object) 10, jsonGenerator6, serializerProvider7, typeSerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardJsonSerializer8, jsonGenerator9, serializerProvider10, typeSerializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Throwable throwable17 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider16, throwable17, (java.lang.Object) (short) 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        java.lang.Throwable throwable15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer16.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer16.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider14, throwable15, (java.lang.Object) wildcardJsonSerializer34, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper35 = null;
        com.fasterxml.jackson.databind.JavaType javaType36 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper35, javaType36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Throwable throwable12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        java.lang.Class<java.lang.Object> objClass21 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        boolean boolean28 = stdKeySerializer23.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        boolean boolean35 = stdKeySerializer30.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass36 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer23.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass36, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer13.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass36, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider11, throwable12, (java.lang.Object) jsonNode40, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objClass10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objClass21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode40);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper4 = null;
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper4, javaType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        java.lang.Throwable throwable49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        boolean boolean55 = stdKeySerializer50.isEmpty((java.lang.Object) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider48, throwable49, (java.lang.Object) stdKeySerializer50, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer8, jsonGenerator19, serializerProvider20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Throwable throwable62 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer44.wrapAndThrow(serializerProvider61, throwable62, (java.lang.Object) (byte) 100, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = stdKeySerializer62.isEmpty(serializerProvider73, (java.lang.Object) jsonNode84);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator86 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) jsonNode84, jsonGenerator86, serializerProvider87, typeSerializer88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) serializerProvider11, jsonGenerator26, serializerProvider27, typeSerializer28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode25);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer8.getDelegatee();
        java.lang.Class<?> wildcardClass12 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode13 = stdKeySerializer3.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        boolean boolean20 = stdKeySerializer15.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass21 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer3.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) jsonNode22, jsonGenerator23, serializerProvider24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(jsonNode13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer39.unwrappingSerializer(nameTransformer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer39.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = stdKeySerializer19.isEmpty(serializerProvider30, (java.lang.Object) stdKeySerializer31);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator57 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer59 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer31, jsonGenerator57, serializerProvider58, typeSerializer59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<java.lang.Object> objClass72 = stdKeySerializer61.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator73 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass72, jsonGenerator73, serializerProvider74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(objClass72);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        java.lang.Throwable throwable14 = null;
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider13, throwable14, obj15, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper40 = null;
        com.fasterxml.jackson.databind.JavaType javaType41 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper40, javaType41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        java.lang.Throwable throwable53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        boolean boolean71 = stdKeySerializer66.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass72 = stdKeySerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer54.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer74 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = stdKeySerializer54.unwrappingSerializer(nameTransformer74);
        boolean boolean76 = objJsonSerializer75.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer41.wrapAndThrow(serializerProvider52, throwable53, (java.lang.Object) objJsonSerializer75, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(objJsonSerializer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer18.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer31.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        boolean boolean52 = stdKeySerializer49.isEmpty(serializerProvider50, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer49.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer66.getDelegatee();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer49.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = stdKeySerializer31.isEmpty((java.lang.Object) wildcardClass70);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer18.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator75 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) serializerProvider30, jsonGenerator75, serializerProvider76, typeSerializer77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jsonNode74);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        boolean boolean9 = stdKeySerializer4.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        boolean boolean15 = stdKeySerializer10.isUnwrappingSerializer();
        boolean boolean16 = stdKeySerializer4.isEmpty((java.lang.Object) boolean15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer37.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        boolean boolean58 = stdKeySerializer55.isEmpty(serializerProvider56, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer55.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer55.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = stdKeySerializer37.isEmpty((java.lang.Object) wildcardClass76);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer80 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = stdKeySerializer37.unwrappingSerializer(nameTransformer80);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        boolean boolean86 = stdKeySerializer83.isEmpty(serializerProvider84, (java.lang.Object) (short) 1);
        boolean boolean88 = stdKeySerializer83.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass89 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer37.getSchema(serializerProvider82, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer18.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass89, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer4.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator94 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider95 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer4, jsonGenerator94, serializerProvider95, typeSerializer96);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(jsonNode93);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        java.lang.Class<?> wildcardClass16 = jsonNode15.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = objJsonSerializer9.getDelegatee();
        java.lang.Object obj11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer9.serializeWithType(obj11, jsonGenerator12, serializerProvider13, typeSerializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<java.lang.Object> objClass30 = stdKeySerializer26.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardJsonSerializer31, jsonGenerator32, serializerProvider33, typeSerializer34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objClass30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean35 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer33);
        java.lang.Class<java.lang.Object> objClass36 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        java.lang.Throwable throwable38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer39.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider37, throwable38, (java.lang.Object) wildcardJsonSerializer43, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objClass36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Throwable throwable46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        boolean boolean54 = objJsonSerializer53.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        boolean boolean58 = stdKeySerializer55.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer84.getDelegatee();
        java.lang.Class<?> wildcardClass88 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer79.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer67.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = objJsonSerializer66.isEmpty((java.lang.Object) stdKeySerializer67);
        java.lang.Class<?> wildcardClass92 = objJsonSerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass92, true);
        boolean boolean95 = objJsonSerializer53.isEmpty((java.lang.Object) jsonNode94);
        boolean boolean96 = objJsonSerializer53.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider45, throwable46, (java.lang.Object) boolean96, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Throwable throwable6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        boolean boolean10 = stdKeySerializer7.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer19.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer19.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = objJsonSerializer18.isEmpty((java.lang.Object) stdKeySerializer19);
        java.lang.Class<?> wildcardClass44 = objJsonSerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        java.lang.Class<java.lang.Object> objClass53 = stdKeySerializer48.handledType();
        boolean boolean55 = stdKeySerializer48.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer48.unwrappingSerializer(nameTransformer56);
        boolean boolean58 = stdKeySerializer7.isEmpty(serializerProvider47, (java.lang.Object) stdKeySerializer48);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider5, throwable6, (java.lang.Object) serializerProvider47, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) wildcardClass29, jsonGenerator30, serializerProvider31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper28 = null;
        com.fasterxml.jackson.databind.JavaType javaType29 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper28, javaType29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = stdKeySerializer6.usesObjectId();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer6.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer6, jsonGenerator19, serializerProvider20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objClass18);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        java.lang.Throwable throwable5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer24.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer24.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass45);
        boolean boolean48 = stdKeySerializer6.isEmpty((java.lang.Object) wildcardClass45);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer6.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer6.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer6.unwrappingSerializer(nameTransformer52);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider4, throwable5, (java.lang.Object) nameTransformer52, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator62 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer64 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) 10, jsonGenerator62, serializerProvider63, typeSerializer64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = stdKeySerializer18.isEmpty((java.lang.Object) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer62.unwrappingSerializer(nameTransformer68);
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer62.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        boolean boolean77 = stdKeySerializer72.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer72.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer62.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass85, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer18.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer0.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass85, true);
        java.lang.Object obj93 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator94 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize(obj93, jsonGenerator94, serializerProvider95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer10.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = objJsonSerializer13.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer9.serializeWithType((java.lang.Object) objJsonSerializer13, jsonGenerator15, serializerProvider16, typeSerializer17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper6 = null;
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper6, javaType7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) (short) 0, jsonGenerator47, serializerProvider48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) 0, jsonGenerator14, serializerProvider15, typeSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = wildcardJsonSerializer4.usesObjectId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass68 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer44.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass68, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(jsonNode70);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer21.isEmpty((java.lang.Object) jsonNode36);
        boolean boolean38 = stdKeySerializer0.isEmpty(serializerProvider20, (java.lang.Object) boolean37);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer39.unwrappingSerializer(nameTransformer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer39.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer56.getDelegatee();
        boolean boolean60 = stdKeySerializer39.isEmpty(serializerProvider55, (java.lang.Object) stdKeySerializer56);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator61 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer39, jsonGenerator61, serializerProvider62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer10.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer10.isEmpty((java.lang.Object) wildcardClass49);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer10.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass62 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer10.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass62);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = objJsonSerializer9.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer27.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass79, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass84 = wildcardJsonSerializer83.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        java.lang.Throwable throwable84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        boolean boolean88 = stdKeySerializer85.isEmpty(serializerProvider86, (java.lang.Object) (short) 1);
        boolean boolean90 = stdKeySerializer85.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass91 = stdKeySerializer85.getClass();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider83, throwable84, (java.lang.Object) stdKeySerializer85, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = stdKeySerializer8.usesObjectId();
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer8.handledType();
        boolean boolean21 = stdKeySerializer8.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) stdKeySerializer8, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer4.unwrappingSerializer(nameTransformer6);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = objJsonSerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = objJsonSerializer7.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        java.lang.Class<java.lang.Object> objClass16 = stdKeySerializer11.handledType();
        boolean boolean18 = stdKeySerializer11.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer11.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        boolean boolean29 = objJsonSerializer28.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        boolean boolean33 = stdKeySerializer30.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = objJsonSerializer41.isEmpty((java.lang.Object) stdKeySerializer42);
        java.lang.Class<?> wildcardClass67 = objJsonSerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass67, true);
        boolean boolean70 = objJsonSerializer28.isEmpty((java.lang.Object) jsonNode69);
        boolean boolean71 = objJsonSerializer20.isEmpty(serializerProvider21, (java.lang.Object) boolean70);
        boolean boolean72 = objJsonSerializer10.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator73 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) boolean72, jsonGenerator73, serializerProvider74, typeSerializer75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer22.handledType();
        boolean boolean29 = stdKeySerializer22.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer22.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        boolean boolean33 = objJsonSerializer20.isEmpty((java.lang.Object) wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper7 = null;
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper7, javaType8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) '4', jsonGenerator25, serializerProvider26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) ' ', jsonGenerator6, serializerProvider7, typeSerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = objJsonSerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer9.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer16.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = stdKeySerializer35.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer53.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer65.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer53.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = stdKeySerializer35.isEmpty((java.lang.Object) wildcardClass74);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer35.unwrappingSerializer(nameTransformer78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer81 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        boolean boolean84 = stdKeySerializer81.isEmpty(serializerProvider82, (java.lang.Object) (short) 1);
        boolean boolean86 = stdKeySerializer81.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass87 = stdKeySerializer81.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer35.getSchema(serializerProvider80, (java.lang.reflect.Type) wildcardClass87);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer16.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass87, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer9.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass87, false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator93 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider94 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer95 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer6.serializeWithType((java.lang.Object) jsonNode92, jsonGenerator93, serializerProvider94, typeSerializer95);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = wildcardJsonSerializer25.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        boolean boolean30 = stdKeySerializer25.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        boolean boolean37 = stdKeySerializer32.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass38 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer25.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass38, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer42.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = stdKeySerializer42.isEmpty((java.lang.Object) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer25.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass86 = jsonNode85.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass86, true);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer90 = stdKeySerializer0.replaceDelegatee(objJsonSerializer89);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(jsonNode88);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer8.unwrappingSerializer(nameTransformer24);
        java.lang.Class<java.lang.Object> objClass26 = stdKeySerializer8.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) objClass26, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objClass26);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean6 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        java.lang.Class<?> wildcardClass11 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) wildcardClass11, jsonGenerator12, serializerProvider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper2 = null;
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper2, javaType3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer28.handledType();
        boolean boolean35 = stdKeySerializer28.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer28.unwrappingSerializer(nameTransformer36);
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer28.handledType();
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass73, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = stdKeySerializer40.isEmpty(serializerProvider51, (java.lang.Object) stdKeySerializer52);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer28.serialize((java.lang.Object) serializerProvider51, jsonGenerator78, serializerProvider79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(objClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean6 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer16.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer46.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = stdKeySerializer16.isEmpty((java.lang.Object) wildcardClass55);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer16.unwrappingSerializer(nameTransformer59);
        boolean boolean61 = stdKeySerializer16.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer16.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        boolean boolean73 = stdKeySerializer70.isEmpty(serializerProvider71, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        java.lang.Class<?> wildcardClass79 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer70.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass79, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer65.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass79, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        boolean boolean88 = stdKeySerializer85.isEmpty(serializerProvider86, (java.lang.Object) (short) 1);
        boolean boolean90 = stdKeySerializer85.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass91 = stdKeySerializer85.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer65.getSchema(serializerProvider84, (java.lang.reflect.Type) wildcardClass91);
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer16.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer7.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass91);
        boolean boolean96 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass91);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer33.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61, false);
        java.lang.Class<java.lang.Object> objClass66 = stdKeySerializer33.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer33.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(objClass66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer0.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper47 = null;
        com.fasterxml.jackson.databind.JavaType javaType48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper47, javaType48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Throwable throwable6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass16, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer19.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer19.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer19.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = stdKeySerializer19.isEmpty((java.lang.Object) wildcardClass58);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer19.unwrappingSerializer(nameTransformer62);
        boolean boolean64 = stdKeySerializer7.isEmpty((java.lang.Object) stdKeySerializer19);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer7.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider5, throwable6, (java.lang.Object) stdKeySerializer7, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer1 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        boolean boolean4 = stdKeySerializer1.isEmpty(serializerProvider2, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer1.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer7.isEmpty((java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer24.getDelegatee();
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer24.handledType();
        boolean boolean31 = stdKeySerializer24.isEmpty((java.lang.Object) 0);
        boolean boolean32 = stdKeySerializer7.isEmpty((java.lang.Object) boolean31);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer38.getDelegatee();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer33.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass42, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer45.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer63.unwrappingSerializer(nameTransformer68);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer71.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer80.getDelegatee();
        java.lang.Class<?> wildcardClass84 = stdKeySerializer80.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer75.getSchema(serializerProvider79, (java.lang.reflect.Type) wildcardClass84);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer63.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = stdKeySerializer45.isEmpty((java.lang.Object) wildcardClass84);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer88 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = stdKeySerializer45.unwrappingSerializer(nameTransformer88);
        boolean boolean90 = stdKeySerializer33.isEmpty((java.lang.Object) stdKeySerializer45);
        boolean boolean91 = stdKeySerializer7.isEmpty((java.lang.Object) stdKeySerializer45);
        boolean boolean92 = stdKeySerializer1.isEmpty(serializerProvider6, (java.lang.Object) stdKeySerializer45);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer93 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer94 = stdKeySerializer1.unwrappingSerializer(nameTransformer93);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator95 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) nameTransformer93, jsonGenerator95, serializerProvider96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer94);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean8 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = objJsonSerializer6.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardJsonSerializer9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        boolean boolean24 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) 1L, jsonGenerator26, serializerProvider27, typeSerializer28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = wildcardJsonSerializer6.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper3 = null;
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper3, javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        java.lang.Throwable throwable5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer23.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer6.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        java.lang.Class<java.lang.Object> objClass39 = stdKeySerializer34.handledType();
        boolean boolean41 = stdKeySerializer34.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer34.unwrappingSerializer(nameTransformer42);
        java.lang.Class<java.lang.Object> objClass44 = stdKeySerializer34.handledType();
        boolean boolean45 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer34);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider4, throwable5, (java.lang.Object) stdKeySerializer6, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(objClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean51 = stdKeySerializer46.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass52 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer0.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        java.lang.Class<?> wildcardClass82 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer73.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass82);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer61.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = objJsonSerializer60.isEmpty((java.lang.Object) stdKeySerializer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer86 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer87 = objJsonSerializer60.unwrappingSerializer(nameTransformer86);
        boolean boolean88 = objJsonSerializer87.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator89 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider90 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objJsonSerializer87, jsonGenerator89, serializerProvider90, typeSerializer91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper61 = null;
        com.fasterxml.jackson.databind.JavaType javaType62 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer44.acceptJsonFormatVisitor(jsonFormatVisitorWrapper61, javaType62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = stdKeySerializer50.usesObjectId();
        java.lang.Class<java.lang.Object> objClass62 = stdKeySerializer50.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer0.getSchema(serializerProvider49, (java.lang.reflect.Type) objClass62, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objClass62);
        org.junit.Assert.assertNotNull(jsonNode64);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer20.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer25.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer43.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = stdKeySerializer25.isEmpty((java.lang.Object) wildcardClass64);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer20.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass64);
        boolean boolean69 = stdKeySerializer20.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator70 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer20, jsonGenerator70, serializerProvider71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer22.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer17.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer11.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer38.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = stdKeySerializer38.isEmpty((java.lang.Object) wildcardClass77);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer81 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = stdKeySerializer38.unwrappingSerializer(nameTransformer81);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        boolean boolean87 = stdKeySerializer84.isEmpty(serializerProvider85, (java.lang.Object) (short) 1);
        boolean boolean89 = stdKeySerializer84.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass90 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer38.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass90);
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer11.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass90, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator94 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider95 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) jsonNode93, jsonGenerator94, serializerProvider95, typeSerializer96);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertNotNull(jsonNode93);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer23.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = stdKeySerializer23.isEmpty((java.lang.Object) wildcardClass62);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer23.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer23.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer0.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        boolean boolean30 = objJsonSerializer29.isUnwrappingSerializer();
        boolean boolean31 = objJsonSerializer21.isEmpty(serializerProvider22, (java.lang.Object) boolean30);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        boolean boolean34 = objJsonSerializer33.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer10.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer10.isEmpty((java.lang.Object) wildcardClass49);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer10.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass62 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer10.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = stdKeySerializer0.isEmpty(serializerProvider9, (java.lang.Object) serializerProvider55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        boolean boolean80 = stdKeySerializer77.isEmpty(serializerProvider78, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer82.getDelegatee();
        java.lang.Class<?> wildcardClass86 = stdKeySerializer82.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer77.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass86, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass86, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer66.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass86);
        boolean boolean92 = stdKeySerializer66.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass93 = stdKeySerializer66.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer0.getSchema(serializerProvider65, (java.lang.reflect.Type) objClass93);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objClass93);
        org.junit.Assert.assertNotNull(jsonNode94);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper84 = null;
        com.fasterxml.jackson.databind.JavaType javaType85 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper84, javaType85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper49 = null;
        com.fasterxml.jackson.databind.JavaType javaType50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper49, javaType50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper6 = null;
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper6, javaType7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        java.lang.Object obj11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize(obj11, jsonGenerator12, serializerProvider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer8.usesObjectId();
        boolean boolean13 = stdKeySerializer8.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer15.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass24 = stdKeySerializer23.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer15.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer15.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer15.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = stdKeySerializer15.isEmpty((java.lang.Object) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        boolean boolean62 = stdKeySerializer59.isEmpty(serializerProvider60, (java.lang.Object) (short) 1);
        boolean boolean64 = stdKeySerializer59.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer59.unwrappingSerializer(nameTransformer65);
        java.lang.Class<java.lang.Object> objClass67 = stdKeySerializer59.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        boolean boolean79 = stdKeySerializer76.isEmpty(serializerProvider77, (java.lang.Object) (short) 1);
        boolean boolean81 = stdKeySerializer76.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass82 = stdKeySerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer69.getSchema(serializerProvider75, (java.lang.reflect.Type) wildcardClass82, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer59.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass82, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer15.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass82);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer8.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass82, false);
        boolean boolean90 = objJsonSerializer6.isEmpty((java.lang.Object) serializerProvider14);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(objClass67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        java.lang.Throwable throwable36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        java.lang.Class<java.lang.Object> objClass42 = stdKeySerializer37.handledType();
        boolean boolean44 = stdKeySerializer37.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer37.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        boolean boolean55 = objJsonSerializer54.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer56.getDelegatee();
        boolean boolean59 = stdKeySerializer56.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = stdKeySerializer68.unwrappingSerializer(nameTransformer73);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider75, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer85.getDelegatee();
        java.lang.Class<?> wildcardClass89 = stdKeySerializer85.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer80.getSchema(serializerProvider84, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer68.getSchema(serializerProvider79, (java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = objJsonSerializer67.isEmpty((java.lang.Object) stdKeySerializer68);
        java.lang.Class<?> wildcardClass93 = objJsonSerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer56.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass93, true);
        boolean boolean96 = objJsonSerializer54.isEmpty((java.lang.Object) jsonNode95);
        boolean boolean97 = objJsonSerializer46.isEmpty(serializerProvider47, (java.lang.Object) boolean96);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider35, throwable36, (java.lang.Object) boolean96, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        java.lang.Throwable throwable8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer9.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer16.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = stdKeySerializer35.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer53.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer65.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer53.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = stdKeySerializer35.isEmpty((java.lang.Object) wildcardClass74);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer35.unwrappingSerializer(nameTransformer78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer81 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        boolean boolean84 = stdKeySerializer81.isEmpty(serializerProvider82, (java.lang.Object) (short) 1);
        boolean boolean86 = stdKeySerializer81.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass87 = stdKeySerializer81.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer35.getSchema(serializerProvider80, (java.lang.reflect.Type) wildcardClass87);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer16.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass87, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer9.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass87, false);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider7, throwable8, (java.lang.Object) false, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        boolean boolean21 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) stdKeySerializer17);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        boolean boolean27 = stdKeySerializer22.isEmpty((java.lang.Object) (-1L));
        boolean boolean28 = stdKeySerializer0.isEmpty((java.lang.Object) boolean27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        boolean boolean33 = stdKeySerializer30.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = objJsonSerializer41.isEmpty((java.lang.Object) stdKeySerializer42);
        java.lang.Class<?> wildcardClass67 = objJsonSerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer0.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass71 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer84 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer85 = stdKeySerializer0.unwrappingSerializer(nameTransformer84);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer86.getDelegatee();
        boolean boolean88 = stdKeySerializer86.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = objJsonSerializer85.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer86);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = wildcardJsonSerializer8.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        java.lang.Class<?> wildcardClass8 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer11.getDelegatee();
        boolean boolean14 = stdKeySerializer11.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = objJsonSerializer22.isEmpty((java.lang.Object) stdKeySerializer23);
        java.lang.Class<?> wildcardClass48 = objJsonSerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass48, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        java.lang.Class<java.lang.Object> objClass57 = stdKeySerializer52.handledType();
        boolean boolean59 = stdKeySerializer52.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer52.unwrappingSerializer(nameTransformer60);
        boolean boolean62 = stdKeySerializer11.isEmpty(serializerProvider51, (java.lang.Object) stdKeySerializer52);
        java.lang.Class<java.lang.Object> objClass63 = stdKeySerializer11.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator64 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objClass63, jsonGenerator64, serializerProvider65, typeSerializer66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objClass63);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer25.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer43.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = stdKeySerializer25.isEmpty((java.lang.Object) wildcardClass64);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer25.unwrappingSerializer(nameTransformer68);
        boolean boolean70 = stdKeySerializer25.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer25.unwrappingSerializer(nameTransformer71);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = objJsonSerializer72.unwrappingSerializer(nameTransformer73);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = stdKeySerializer0.replaceDelegatee(objJsonSerializer74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        boolean boolean6 = stdKeySerializer3.isEmpty(serializerProvider4, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer14.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer9.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer3.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass23);
        boolean boolean29 = stdKeySerializer3.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) boolean29, jsonGenerator30, serializerProvider31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Throwable throwable27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer28.unwrappingSerializer(nameTransformer44);
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer28.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer28.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider26, throwable27, (java.lang.Object) wildcardJsonSerializer47, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        boolean boolean90 = stdKeySerializer0.usesObjectId();
        java.lang.Class<?> wildcardClass91 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        boolean boolean62 = stdKeySerializer59.isEmpty(serializerProvider60, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = stdKeySerializer59.unwrappingSerializer(nameTransformer64);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer66.unwrappingSerializer(nameTransformer71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer74.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer83.getDelegatee();
        java.lang.Class<?> wildcardClass87 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer78.getSchema(serializerProvider82, (java.lang.reflect.Type) wildcardClass87);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer66.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = objJsonSerializer65.isEmpty((java.lang.Object) stdKeySerializer66);
        java.lang.Class<?> wildcardClass91 = objJsonSerializer65.getClass();
        boolean boolean92 = stdKeySerializer0.isEmpty(serializerProvider58, (java.lang.Object) wildcardClass91);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer93 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer93);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean49 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        java.lang.Object obj51 = null;
        boolean boolean52 = stdKeySerializer0.isEmpty(serializerProvider50, obj51);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper33 = null;
        com.fasterxml.jackson.databind.JavaType javaType34 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper33, javaType34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer84 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer85 = stdKeySerializer0.unwrappingSerializer(nameTransformer84);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        boolean boolean90 = stdKeySerializer87.isEmpty(serializerProvider88, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer91 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer87.unwrappingSerializer(nameTransformer92);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider94 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer95 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass96 = stdKeySerializer95.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode97 = stdKeySerializer87.getSchema(serializerProvider94, (java.lang.reflect.Type) wildcardClass96);
        boolean boolean98 = objJsonSerializer85.isEmpty(serializerProvider86, (java.lang.Object) stdKeySerializer87);
        boolean boolean99 = stdKeySerializer87.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer91);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(jsonNode97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer19.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer19.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer19.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = stdKeySerializer19.isEmpty((java.lang.Object) wildcardClass58);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer19.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass71 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer19.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass71, false);
        boolean boolean75 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        java.lang.Throwable throwable77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = stdKeySerializer78.unwrappingSerializer(nameTransformer83);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass87 = stdKeySerializer86.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer78.getSchema(serializerProvider85, (java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = stdKeySerializer78.usesObjectId();
        java.lang.Class<java.lang.Object> objClass90 = stdKeySerializer78.handledType();
        boolean boolean91 = stdKeySerializer78.isUnwrappingSerializer();
        boolean boolean93 = stdKeySerializer78.isEmpty((java.lang.Object) 1.0d);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider76, throwable77, (java.lang.Object) boolean93, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        java.lang.Throwable throwable36 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider35, throwable36, (java.lang.Object) 0.0f, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper3 = null;
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper3, javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        boolean boolean21 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) stdKeySerializer17);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer22.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator50 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer17.serialize((java.lang.Object) stdKeySerializer22, jsonGenerator50, serializerProvider51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        java.lang.Class<?> wildcardClass67 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer58.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer47.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer0.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator75 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) "", jsonGenerator75, serializerProvider76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer84 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer85 = stdKeySerializer0.unwrappingSerializer(nameTransformer84);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer86.getDelegatee();
        java.lang.Class<java.lang.Object> objClass91 = stdKeySerializer86.handledType();
        boolean boolean93 = stdKeySerializer86.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = stdKeySerializer86.unwrappingSerializer(nameTransformer94);
        boolean boolean96 = objJsonSerializer85.isEmpty((java.lang.Object) stdKeySerializer86);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(objClass91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass54, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer61.unwrappingSerializer(nameTransformer67);
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer61.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        boolean boolean74 = stdKeySerializer71.isEmpty(serializerProvider72, (java.lang.Object) (short) 1);
        boolean boolean76 = stdKeySerializer71.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        boolean boolean83 = stdKeySerializer78.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass84 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer71.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass84, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer61.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass84, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer89 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer89.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer91 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer92 = stdKeySerializer89.unwrappingSerializer(nameTransformer91);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer93 = objJsonSerializer92.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = objJsonSerializer92.unwrappingSerializer(nameTransformer94);
        boolean boolean96 = stdKeySerializer61.isEmpty((java.lang.Object) nameTransformer94);
        java.lang.Class<java.lang.Object> objClass97 = stdKeySerializer61.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode98 = stdKeySerializer7.getSchema(serializerProvider60, (java.lang.reflect.Type) objClass97);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer99 = stdKeySerializer7.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(objClass69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(objJsonSerializer92);
        org.junit.Assert.assertNull(wildcardJsonSerializer93);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(objClass97);
        org.junit.Assert.assertNotNull(jsonNode98);
        org.junit.Assert.assertNull(wildcardJsonSerializer99);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer7.unwrappingSerializer(nameTransformer78);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer7.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        boolean boolean18 = objJsonSerializer17.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        boolean boolean22 = stdKeySerializer19.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer24.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = objJsonSerializer30.isEmpty((java.lang.Object) stdKeySerializer31);
        java.lang.Class<?> wildcardClass56 = objJsonSerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass56, true);
        boolean boolean59 = objJsonSerializer17.isEmpty((java.lang.Object) jsonNode58);
        boolean boolean60 = objJsonSerializer9.isEmpty(serializerProvider10, (java.lang.Object) boolean59);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer65.getDelegatee();
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer65.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer61.getSchema(serializerProvider64, (java.lang.reflect.Type) objClass70, true);
        boolean boolean73 = stdKeySerializer61.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = objJsonSerializer9.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode14 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) objClass12, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        java.lang.Throwable throwable16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider15, throwable16, (java.lang.Object) stdKeySerializer17, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertNotNull(jsonNode14);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = objJsonSerializer51.isEmpty((java.lang.Object) stdKeySerializer52);
        java.lang.Class<?> wildcardClass77 = objJsonSerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer80.getDelegatee();
        java.lang.Class<java.lang.Object> objClass84 = stdKeySerializer80.handledType();
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer80.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer0.getSchema(serializerProvider79, (java.lang.reflect.Type) objClass85, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        java.lang.Throwable throwable89 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer90 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider91 = null;
        boolean boolean93 = stdKeySerializer90.isEmpty(serializerProvider91, (java.lang.Object) (short) 1);
        boolean boolean94 = stdKeySerializer90.usesObjectId();
        boolean boolean95 = stdKeySerializer90.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider88, throwable89, (java.lang.Object) stdKeySerializer90, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNotNull(objClass84);
        org.junit.Assert.assertNotNull(objClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) 10, jsonGenerator12, serializerProvider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer7.unwrappingSerializer(nameTransformer9);
        boolean boolean11 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer44.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        java.lang.Class<java.lang.Object> objClass72 = stdKeySerializer67.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer63.getSchema(serializerProvider66, (java.lang.reflect.Type) objClass72, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator75 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer62.serializeWithType((java.lang.Object) objClass72, jsonGenerator75, serializerProvider76, typeSerializer77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objClass72);
        org.junit.Assert.assertNotNull(jsonNode74);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        java.lang.Class<java.lang.Object> objClass4 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        java.lang.Class<java.lang.Object> objClass48 = stdKeySerializer5.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer57.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        java.lang.Class<?> wildcardClass78 = stdKeySerializer74.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer69.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass78);
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer57.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = objJsonSerializer56.isEmpty((java.lang.Object) stdKeySerializer57);
        java.lang.Class<?> wildcardClass82 = objJsonSerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer5.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass82);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer85.getDelegatee();
        java.lang.Class<java.lang.Object> objClass89 = stdKeySerializer85.handledType();
        java.lang.Class<java.lang.Object> objClass90 = stdKeySerializer85.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer5.getSchema(serializerProvider84, (java.lang.reflect.Type) objClass90, false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator93 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) false, jsonGenerator93, serializerProvider94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objClass4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objClass48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNotNull(objClass89);
        org.junit.Assert.assertNotNull(objClass90);
        org.junit.Assert.assertNotNull(jsonNode92);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass62 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<java.lang.Object> objClass64 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) objClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        java.lang.Throwable throwable67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer72.getDelegatee();
        java.lang.Class<java.lang.Object> objClass77 = stdKeySerializer72.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer68.getSchema(serializerProvider71, (java.lang.reflect.Type) objClass77, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider66, throwable67, (java.lang.Object) true, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(objClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(objClass77);
        org.junit.Assert.assertNotNull(jsonNode79);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Object obj6 = null;
        boolean boolean7 = stdKeySerializer0.isEmpty(serializerProvider5, obj6);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer33.getDelegatee();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = objJsonSerializer15.isEmpty((java.lang.Object) stdKeySerializer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer42.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = stdKeySerializer42.isEmpty((java.lang.Object) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer16.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass81, false);
        boolean boolean87 = stdKeySerializer0.isEmpty(serializerProvider8, (java.lang.Object) stdKeySerializer16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator89 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider90 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer16.serializeWithType((java.lang.Object) (short) -1, jsonGenerator89, serializerProvider90, typeSerializer91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Throwable throwable12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer13.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = stdKeySerializer13.isEmpty((java.lang.Object) wildcardClass52);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer13.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        boolean boolean62 = stdKeySerializer59.isEmpty(serializerProvider60, (java.lang.Object) (short) 1);
        boolean boolean64 = stdKeySerializer59.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass65 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer13.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<java.lang.Object> objClass67 = stdKeySerializer13.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider11, throwable12, (java.lang.Object) objClass67, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNotNull(objClass67);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        java.lang.Class<java.lang.Object> objClass11 = stdKeySerializer6.handledType();
        boolean boolean13 = stdKeySerializer6.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer6, jsonGenerator15, serializerProvider16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objClass11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = objJsonSerializer10.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        boolean boolean15 = stdKeySerializer13.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer13.isEmpty(serializerProvider16, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        java.lang.Class<java.lang.Object> objClass25 = stdKeySerializer20.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer13.getSchema(serializerProvider19, (java.lang.reflect.Type) objClass25, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator28 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer30 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer10.serializeWithType((java.lang.Object) stdKeySerializer13, jsonGenerator28, serializerProvider29, typeSerializer30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        java.lang.Throwable throwable47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider46, throwable47, (java.lang.Object) 10.0d, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        java.lang.Class<?> wildcardClass90 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass6 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertNotNull(objClass6);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer35.unwrappingSerializer(nameTransformer37);
        java.lang.Class<java.lang.Object> objClass39 = stdKeySerializer35.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer0.getSchema(serializerProvider34, (java.lang.reflect.Type) objClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Throwable throwable42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        boolean boolean46 = stdKeySerializer43.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        boolean boolean58 = stdKeySerializer55.isEmpty(serializerProvider56, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer55.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer55.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = objJsonSerializer54.isEmpty((java.lang.Object) stdKeySerializer55);
        java.lang.Class<?> wildcardClass80 = objJsonSerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass80, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider41, throwable42, (java.lang.Object) true, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(jsonNode82);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Throwable throwable50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider49, throwable50, (java.lang.Object) 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer11.usesObjectId();
        boolean boolean16 = stdKeySerializer11.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer11.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer11.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass18, jsonGenerator19, serializerProvider20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objClass10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<java.lang.Object> objClass56 = stdKeySerializer45.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator57 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass56, jsonGenerator57, serializerProvider58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(objClass56);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        boolean boolean9 = objJsonSerializer7.isEmpty((java.lang.Object) 1L);
        boolean boolean10 = objJsonSerializer7.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer92 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass93 = stdKeySerializer92.getClass();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator94 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider95 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardClass93, jsonGenerator94, serializerProvider95, typeSerializer96);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        boolean boolean63 = stdKeySerializer58.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass71 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer58.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass71, false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator74 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer12.serialize((java.lang.Object) false, jsonGenerator74, serializerProvider75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode73);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean49 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper51 = null;
        com.fasterxml.jackson.databind.JavaType javaType52 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper51, javaType52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = objJsonSerializer10.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer20);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer20.unwrappingSerializer(nameTransformer45);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = objJsonSerializer12.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = wildcardJsonSerializer48.usesObjectId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean35 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        boolean boolean43 = objJsonSerializer42.isUnwrappingSerializer();
        boolean boolean44 = objJsonSerializer42.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer0.replaceDelegatee(objJsonSerializer42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Object obj6 = null;
        boolean boolean7 = stdKeySerializer0.isEmpty(serializerProvider5, obj6);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer33.getDelegatee();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = objJsonSerializer15.isEmpty((java.lang.Object) stdKeySerializer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer42.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = stdKeySerializer42.isEmpty((java.lang.Object) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer16.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass81, false);
        boolean boolean87 = stdKeySerializer0.isEmpty(serializerProvider8, (java.lang.Object) stdKeySerializer16);
        boolean boolean88 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer2 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer2.isEmpty(serializerProvider3, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer2.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer13.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer2.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer29.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer29.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer29.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer29.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        java.lang.Class<?> wildcardClass68 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer59.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass68);
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = stdKeySerializer29.isEmpty((java.lang.Object) wildcardClass68);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer29.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        boolean boolean78 = stdKeySerializer75.isEmpty(serializerProvider76, (java.lang.Object) (short) 1);
        boolean boolean80 = stdKeySerializer75.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass81 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer29.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer2.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass81, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer2.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        boolean boolean90 = stdKeySerializer87.isEmpty(serializerProvider88, (java.lang.Object) (short) 1);
        boolean boolean92 = stdKeySerializer87.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer93 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer94 = stdKeySerializer87.unwrappingSerializer(nameTransformer93);
        java.lang.Class<java.lang.Object> objClass95 = stdKeySerializer87.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode96 = stdKeySerializer2.getSchema(serializerProvider86, (java.lang.reflect.Type) objClass95);
        com.fasterxml.jackson.databind.JsonNode jsonNode98 = stdKeySerializer0.getSchema(serializerProvider1, (java.lang.reflect.Type) objClass95, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer99 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer94);
        org.junit.Assert.assertNotNull(objClass95);
        org.junit.Assert.assertNotNull(jsonNode96);
        org.junit.Assert.assertNotNull(jsonNode98);
        org.junit.Assert.assertNull(wildcardJsonSerializer99);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Throwable throwable20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider19, throwable20, (java.lang.Object) false, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Throwable throwable20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider19, throwable20, (java.lang.Object) 0.0f, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer44.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = objJsonSerializer62.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = objJsonSerializer62.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = objJsonSerializer40.isEmpty((java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        boolean boolean78 = stdKeySerializer75.isEmpty(serializerProvider76, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer80 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = stdKeySerializer75.unwrappingSerializer(nameTransformer80);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass84 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer75.getSchema(serializerProvider82, (java.lang.reflect.Type) wildcardClass84);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer75.getSchema(serializerProvider86, (java.lang.reflect.Type) wildcardClass88, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer41.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass88, true);
        boolean boolean94 = stdKeySerializer0.isEmpty(serializerProvider33, (java.lang.Object) serializerProvider66);
        java.lang.Class<java.lang.Object> objClass95 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass96 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer97 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(objClass95);
        org.junit.Assert.assertNotNull(objClass96);
        org.junit.Assert.assertNull(wildcardJsonSerializer97);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer44.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass67 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass67, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer44.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper73 = null;
        com.fasterxml.jackson.databind.JavaType javaType74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper73, javaType74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Throwable throwable26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        boolean boolean32 = stdKeySerializer27.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer33.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61, false);
        boolean boolean66 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass61);
        boolean boolean67 = stdKeySerializer27.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer27.unwrappingSerializer(nameTransformer68);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider25, throwable26, (java.lang.Object) stdKeySerializer27, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        java.lang.Throwable throwable4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        boolean boolean10 = stdKeySerializer5.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider3, throwable4, (java.lang.Object) boolean10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        boolean boolean47 = stdKeySerializer45.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        java.lang.Throwable throwable63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        boolean boolean67 = stdKeySerializer64.isEmpty(serializerProvider65, (java.lang.Object) (short) 1);
        boolean boolean68 = stdKeySerializer64.usesObjectId();
        boolean boolean69 = stdKeySerializer64.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer64.getDelegatee();
        java.lang.Class<java.lang.Object> objClass71 = stdKeySerializer64.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider62, throwable63, (java.lang.Object) stdKeySerializer64, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objClass71);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer38.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = stdKeySerializer38.isEmpty((java.lang.Object) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer12.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass77, false);
        boolean boolean83 = objJsonSerializer3.isEmpty(serializerProvider4, (java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        boolean boolean87 = stdKeySerializer84.isEmpty(serializerProvider85, (java.lang.Object) (short) 1);
        boolean boolean89 = stdKeySerializer84.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = stdKeySerializer84.unwrappingSerializer(nameTransformer90);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator92 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer12.serialize((java.lang.Object) nameTransformer90, jsonGenerator92, serializerProvider93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        java.lang.Object obj78 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator79 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.serializeWithType(obj78, jsonGenerator79, serializerProvider80, typeSerializer81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Throwable throwable29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider28, throwable29, (java.lang.Object) jsonNode41, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer59.getDelegatee();
        java.lang.Class<java.lang.Object> objClass64 = stdKeySerializer59.handledType();
        boolean boolean66 = stdKeySerializer59.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer59.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(objClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) boolean22, jsonGenerator23, serializerProvider24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper44 = null;
        com.fasterxml.jackson.databind.JavaType javaType45 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper44, javaType45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer17.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer22.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = stdKeySerializer22.isEmpty((java.lang.Object) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer17.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider67, (java.lang.Object) stdKeySerializer68);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        java.lang.Throwable throwable76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        boolean boolean80 = stdKeySerializer77.isEmpty(serializerProvider78, (java.lang.Object) (short) 1);
        boolean boolean82 = stdKeySerializer77.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = stdKeySerializer77.unwrappingSerializer(nameTransformer83);
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer77.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider75, throwable76, (java.lang.Object) objClass85, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(objClass85);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = objJsonSerializer19.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer22.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = stdKeySerializer22.isEmpty((java.lang.Object) wildcardClass61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer22.unwrappingSerializer(nameTransformer65);
        boolean boolean67 = stdKeySerializer22.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer22.unwrappingSerializer(nameTransformer68);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = objJsonSerializer69.unwrappingSerializer(nameTransformer70);
        boolean boolean72 = objJsonSerializer69.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = objJsonSerializer21.replaceDelegatee(objJsonSerializer69);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        java.lang.Object obj22 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer20.serializeWithType(obj22, jsonGenerator23, serializerProvider24, typeSerializer25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper13 = null;
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper13, javaType14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer8.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer26.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = stdKeySerializer8.isEmpty((java.lang.Object) wildcardClass47);
        java.lang.Class<java.lang.Object> objClass51 = stdKeySerializer8.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer53.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = objJsonSerializer59.isEmpty((java.lang.Object) stdKeySerializer60);
        java.lang.Class<?> wildcardClass85 = objJsonSerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer8.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer8.unwrappingSerializer(nameTransformer87);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) stdKeySerializer8, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objClass51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        java.lang.Throwable throwable23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer24.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer24.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer24.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer24.unwrappingSerializer(nameTransformer42);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider22, throwable23, (java.lang.Object) objJsonSerializer43, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = wildcardJsonSerializer6.isUnwrappingSerializer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        java.lang.Class<java.lang.Object> objClass26 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objClass26);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        boolean boolean49 = stdKeySerializer7.isEmpty(serializerProvider32, (java.lang.Object) serializerProvider44);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper50 = null;
        com.fasterxml.jackson.databind.JavaType javaType51 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.acceptJsonFormatVisitor(jsonFormatVisitorWrapper50, javaType51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider92 = null;
        boolean boolean94 = stdKeySerializer0.isEmpty(serializerProvider92, (java.lang.Object) 100);
        java.lang.Class<?> wildcardClass95 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer40.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer58.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass67 = stdKeySerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer58.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer75.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer75.getDelegatee();
        java.lang.Class<?> wildcardClass79 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer70.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer58.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass79);
        boolean boolean82 = stdKeySerializer40.isEmpty((java.lang.Object) wildcardClass79);
        java.lang.Class<java.lang.Object> objClass83 = stdKeySerializer40.handledType();
        boolean boolean84 = stdKeySerializer6.isEmpty(serializerProvider39, (java.lang.Object) objClass83);
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer6.handledType();
        boolean boolean86 = objJsonSerializer4.isEmpty(serializerProvider5, (java.lang.Object) objClass85);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer0.handledType();
        boolean boolean53 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        java.lang.Throwable throwable23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        boolean boolean28 = stdKeySerializer24.usesObjectId();
        boolean boolean29 = stdKeySerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer36.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer31.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass45, true);
        boolean boolean50 = stdKeySerializer24.isEmpty(serializerProvider30, (java.lang.Object) stdKeySerializer31);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider22, throwable23, (java.lang.Object) stdKeySerializer24, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean35 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer33);
        boolean boolean36 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer0.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass59, true);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper64 = null;
        com.fasterxml.jackson.databind.JavaType javaType65 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper64, javaType65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNotNull(jsonNode63);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean49 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer54.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer50.getSchema(serializerProvider53, (java.lang.reflect.Type) objClass59, true);
        boolean boolean62 = stdKeySerializer50.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer63.usesObjectId();
        boolean boolean68 = stdKeySerializer63.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer63.getDelegatee();
        boolean boolean70 = stdKeySerializer50.isEmpty((java.lang.Object) wildcardJsonSerializer69);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator71 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) wildcardJsonSerializer69, jsonGenerator71, serializerProvider72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Throwable throwable27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer32.getDelegatee();
        java.lang.Class<java.lang.Object> objClass37 = stdKeySerializer32.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer28.getSchema(serializerProvider31, (java.lang.reflect.Type) objClass37, true);
        boolean boolean40 = stdKeySerializer28.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        boolean boolean45 = stdKeySerializer41.usesObjectId();
        boolean boolean46 = stdKeySerializer41.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer41.getDelegatee();
        boolean boolean48 = stdKeySerializer28.isEmpty((java.lang.Object) wildcardJsonSerializer47);
        boolean boolean49 = stdKeySerializer28.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider26, throwable27, (java.lang.Object) boolean49, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Throwable throwable24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer25.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer43.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = stdKeySerializer25.isEmpty((java.lang.Object) wildcardClass64);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer25.unwrappingSerializer(nameTransformer68);
        boolean boolean70 = stdKeySerializer25.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer25.unwrappingSerializer(nameTransformer71);
        java.lang.Class<?> wildcardClass73 = stdKeySerializer25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider23, throwable24, (java.lang.Object) stdKeySerializer25, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Throwable throwable22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer23.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = stdKeySerializer23.isEmpty((java.lang.Object) wildcardClass62);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer23.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass75 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer23.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass75);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer13.wrapAndThrow(serializerProvider21, throwable22, (java.lang.Object) serializerProvider68, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer36.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer71.getDelegatee();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer71.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer54.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = stdKeySerializer36.isEmpty((java.lang.Object) wildcardClass75);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = stdKeySerializer36.unwrappingSerializer(nameTransformer79);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        boolean boolean87 = stdKeySerializer82.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass88 = stdKeySerializer82.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer36.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer0.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper91 = null;
        com.fasterxml.jackson.databind.JavaType javaType92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper91, javaType92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Object obj5 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator6 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType(obj5, jsonGenerator6, serializerProvider7, typeSerializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper21 = null;
        com.fasterxml.jackson.databind.JavaType javaType22 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer13.acceptJsonFormatVisitor(jsonFormatVisitorWrapper21, javaType22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer12);
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer0.handledType();
        boolean boolean39 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer36.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer71.getDelegatee();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer71.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer54.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = stdKeySerializer36.isEmpty((java.lang.Object) wildcardClass75);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = stdKeySerializer36.unwrappingSerializer(nameTransformer79);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        boolean boolean87 = stdKeySerializer82.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass88 = stdKeySerializer82.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer36.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer0.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider91 = null;
        java.lang.Throwable throwable92 = null;
        java.lang.Object obj93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider91, throwable92, obj93, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer22.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = stdKeySerializer22.isEmpty((java.lang.Object) wildcardClass61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer22.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer22.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer22, jsonGenerator76, serializerProvider77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode75);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = objJsonSerializer44.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer26.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer26.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer61.getDelegatee();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = stdKeySerializer26.isEmpty((java.lang.Object) wildcardClass65);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = stdKeySerializer26.unwrappingSerializer(nameTransformer69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        boolean boolean77 = stdKeySerializer72.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass78 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer26.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass78);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer7.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass78, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass78, false);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper84 = null;
        com.fasterxml.jackson.databind.JavaType javaType85 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper84, javaType85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(jsonNode83);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21, true);
        boolean boolean26 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        boolean boolean74 = stdKeySerializer71.isEmpty(serializerProvider72, (java.lang.Object) (short) 1);
        boolean boolean76 = stdKeySerializer71.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        boolean boolean83 = stdKeySerializer78.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass84 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer71.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass84, false);
        boolean boolean87 = stdKeySerializer27.isEmpty(serializerProvider70, (java.lang.Object) stdKeySerializer71);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = stdKeySerializer5.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer10.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer10.isEmpty((java.lang.Object) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        boolean boolean58 = stdKeySerializer55.isEmpty(serializerProvider56, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer55.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer55.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = stdKeySerializer5.isEmpty(serializerProvider54, (java.lang.Object) stdKeySerializer55);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator80 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer55, jsonGenerator80, serializerProvider81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer15.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass24 = stdKeySerializer23.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer15.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer15.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = objJsonSerializer14.isEmpty((java.lang.Object) stdKeySerializer15);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = objJsonSerializer14.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer42.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        java.lang.Class<java.lang.Object> objClass65 = stdKeySerializer60.handledType();
        boolean boolean67 = stdKeySerializer60.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer60.getDelegatee();
        boolean boolean69 = stdKeySerializer42.isEmpty((java.lang.Object) stdKeySerializer60);
        boolean boolean70 = objJsonSerializer41.isEmpty((java.lang.Object) stdKeySerializer42);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) objJsonSerializer41, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objClass65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer2 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer2.isEmpty(serializerProvider3, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer2.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer13.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer2.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer29.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer29.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer29.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer29.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        java.lang.Class<?> wildcardClass68 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer59.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass68);
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = stdKeySerializer29.isEmpty((java.lang.Object) wildcardClass68);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer29.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        boolean boolean78 = stdKeySerializer75.isEmpty(serializerProvider76, (java.lang.Object) (short) 1);
        boolean boolean80 = stdKeySerializer75.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass81 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer29.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer2.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass81, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer2.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        boolean boolean90 = stdKeySerializer87.isEmpty(serializerProvider88, (java.lang.Object) (short) 1);
        boolean boolean92 = stdKeySerializer87.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer93 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer94 = stdKeySerializer87.unwrappingSerializer(nameTransformer93);
        java.lang.Class<java.lang.Object> objClass95 = stdKeySerializer87.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode96 = stdKeySerializer2.getSchema(serializerProvider86, (java.lang.reflect.Type) objClass95);
        com.fasterxml.jackson.databind.JsonNode jsonNode98 = stdKeySerializer0.getSchema(serializerProvider1, (java.lang.reflect.Type) objClass95, true);
        java.lang.Class<?> wildcardClass99 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer94);
        org.junit.Assert.assertNotNull(objClass95);
        org.junit.Assert.assertNotNull(jsonNode96);
        org.junit.Assert.assertNotNull(jsonNode98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = objJsonSerializer6.unwrappingSerializer(nameTransformer32);
        boolean boolean34 = objJsonSerializer6.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer46.getDelegatee();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer41.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass50, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer36.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass50, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass62 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer36.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = objJsonSerializer6.isEmpty(serializerProvider35, (java.lang.Object) jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean6 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper7 = null;
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper7, javaType8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer24.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer24.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass45);
        boolean boolean48 = objJsonSerializer23.isEmpty((java.lang.Object) stdKeySerializer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer50.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = stdKeySerializer68.unwrappingSerializer(nameTransformer73);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider75, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer85.getDelegatee();
        java.lang.Class<?> wildcardClass89 = stdKeySerializer85.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer80.getSchema(serializerProvider84, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer68.getSchema(serializerProvider79, (java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = stdKeySerializer50.isEmpty((java.lang.Object) wildcardClass89);
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer24.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass89, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer95 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer96 = stdKeySerializer24.unwrappingSerializer(nameTransformer95);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = objJsonSerializer96.unwrappingSerializer(nameTransformer97);
        boolean boolean99 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) objJsonSerializer96);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertNotNull(objJsonSerializer96);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean8 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean9 = objJsonSerializer6.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper10 = null;
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper10, javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer35.unwrappingSerializer(nameTransformer37);
        java.lang.Class<java.lang.Object> objClass39 = stdKeySerializer35.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer0.getSchema(serializerProvider34, (java.lang.reflect.Type) objClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Throwable throwable42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        boolean boolean46 = stdKeySerializer43.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        boolean boolean65 = stdKeySerializer60.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass66 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer48.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer70.getDelegatee();
        java.lang.Class<java.lang.Object> objClass75 = stdKeySerializer70.handledType();
        boolean boolean77 = stdKeySerializer70.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer70.unwrappingSerializer(nameTransformer78);
        java.lang.Class<?> wildcardClass80 = objJsonSerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer48.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass80);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass80, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer85.getDelegatee();
        java.lang.Class<java.lang.Object> objClass90 = stdKeySerializer85.handledType();
        boolean boolean92 = stdKeySerializer85.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer93 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer94 = stdKeySerializer85.unwrappingSerializer(nameTransformer93);
        java.lang.Class<java.lang.Object> objClass95 = stdKeySerializer85.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode97 = stdKeySerializer43.getSchema(serializerProvider84, (java.lang.reflect.Type) objClass95, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider41, throwable42, (java.lang.Object) true, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(objClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(objClass75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNotNull(objClass90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer94);
        org.junit.Assert.assertNotNull(objClass95);
        org.junit.Assert.assertNotNull(jsonNode97);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        boolean boolean7 = stdKeySerializer4.isEmpty(serializerProvider5, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer4.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass13 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode14 = stdKeySerializer4.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = stdKeySerializer4.usesObjectId();
        java.lang.Class<java.lang.Object> objClass16 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer17.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = stdKeySerializer4.isEmpty((java.lang.Object) objJsonSerializer24);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = objJsonSerializer24.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator28 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) nameTransformer26, jsonGenerator28, serializerProvider29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objClass16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean26 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        boolean boolean32 = stdKeySerializer27.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer27.unwrappingSerializer(nameTransformer33);
        java.lang.Class<java.lang.Object> objClass35 = stdKeySerializer27.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer27.unwrappingSerializer(nameTransformer36);
        boolean boolean38 = stdKeySerializer27.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer27, jsonGenerator39, serializerProvider40, typeSerializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(objClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer34.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = stdKeySerializer34.isEmpty((java.lang.Object) wildcardClass73);
        java.lang.Class<java.lang.Object> objClass77 = stdKeySerializer34.handledType();
        boolean boolean78 = stdKeySerializer0.isEmpty(serializerProvider33, (java.lang.Object) objClass77);
        java.lang.Class<java.lang.Object> objClass79 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        boolean boolean83 = stdKeySerializer80.isEmpty(serializerProvider81, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = stdKeySerializer80.unwrappingSerializer(nameTransformer85);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer88 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass89 = stdKeySerializer88.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer80.getSchema(serializerProvider87, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider91 = null;
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer80.getSchema(serializerProvider91, (java.lang.reflect.Type) wildcardClass93, true);
        boolean boolean96 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer80);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper97 = null;
        com.fasterxml.jackson.databind.JavaType javaType98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer80.acceptJsonFormatVisitor(jsonFormatVisitorWrapper97, javaType98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objClass79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        boolean boolean7 = stdKeySerializer4.isEmpty(serializerProvider5, (java.lang.Object) (short) 1);
        boolean boolean9 = stdKeySerializer4.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer4.unwrappingSerializer(nameTransformer10);
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        boolean boolean19 = stdKeySerializer14.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass27 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass27, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer4.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass27, true);
        boolean boolean32 = objJsonSerializer3.isEmpty((java.lang.Object) serializerProvider13);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        boolean boolean78 = stdKeySerializer33.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = objJsonSerializer3.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass34);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = stdKeySerializer40.usesObjectId();
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer40.handledType();
        boolean boolean53 = stdKeySerializer40.isUnwrappingSerializer();
        boolean boolean55 = stdKeySerializer40.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer57.unwrappingSerializer(nameTransformer59);
        java.lang.Class<java.lang.Object> objClass61 = stdKeySerializer57.handledType();
        boolean boolean62 = stdKeySerializer40.isEmpty(serializerProvider56, (java.lang.Object) objClass61);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator63 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer40, jsonGenerator63, serializerProvider64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(objClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider92 = null;
        boolean boolean94 = stdKeySerializer0.isEmpty(serializerProvider92, (java.lang.Object) 100);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer95 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer96 = stdKeySerializer0.unwrappingSerializer(nameTransformer95);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = objJsonSerializer96.unwrappingSerializer(nameTransformer97);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer99 = objJsonSerializer98.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer96);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
        org.junit.Assert.assertNull(wildcardJsonSerializer99);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Throwable throwable17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        boolean boolean23 = stdKeySerializer18.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer18.unwrappingSerializer(nameTransformer24);
        java.lang.Class<java.lang.Object> objClass26 = stdKeySerializer18.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        boolean boolean33 = stdKeySerializer28.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        boolean boolean40 = stdKeySerializer35.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass41 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer28.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass41, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer18.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer46.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = objJsonSerializer49.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = objJsonSerializer49.unwrappingSerializer(nameTransformer51);
        boolean boolean53 = stdKeySerializer18.isEmpty((java.lang.Object) nameTransformer51);
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer18.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider16, throwable17, (java.lang.Object) objClass54, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(objClass26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objClass54);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        boolean boolean52 = stdKeySerializer49.isEmpty(serializerProvider50, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer49.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer49.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass62, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer49.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer84.getDelegatee();
        java.lang.Class<?> wildcardClass88 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer79.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer67.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = stdKeySerializer49.isEmpty((java.lang.Object) wildcardClass88);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer49.unwrappingSerializer(nameTransformer92);
        boolean boolean94 = stdKeySerializer49.usesObjectId();
        boolean boolean95 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer49);
        java.lang.Class<?> wildcardClass96 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        java.lang.Throwable throwable15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer16.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer29.getDelegatee();
        java.lang.Class<java.lang.Object> objClass34 = stdKeySerializer29.handledType();
        boolean boolean35 = stdKeySerializer16.isEmpty(serializerProvider28, (java.lang.Object) stdKeySerializer29);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider14, throwable15, (java.lang.Object) serializerProvider28, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer27.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass79, true);
        boolean boolean83 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass84 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = stdKeySerializer0.unwrappingSerializer(nameTransformer85);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objClass84);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Throwable throwable50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        java.lang.Class<java.lang.Object> objClass55 = stdKeySerializer51.handledType();
        java.lang.Class<java.lang.Object> objClass56 = stdKeySerializer51.handledType();
        boolean boolean57 = stdKeySerializer51.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider49, throwable50, (java.lang.Object) boolean57, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objClass55);
        org.junit.Assert.assertNotNull(objClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper19 = null;
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper19, javaType20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(jsonNode18);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer19.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = objJsonSerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = objJsonSerializer22.unwrappingSerializer(nameTransformer24);
        boolean boolean26 = objJsonSerializer22.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator27 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objJsonSerializer22, jsonGenerator27, serializerProvider28, typeSerializer29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Throwable throwable6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer7.unwrappingSerializer(nameTransformer13);
        java.lang.Class<java.lang.Object> objClass15 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer7.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider5, throwable6, (java.lang.Object) objJsonSerializer17, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objClass15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = stdKeySerializer46.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer46.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        java.lang.Class<?> wildcardClass67 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer58.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer46.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator70 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) jsonNode69, jsonGenerator70, serializerProvider71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertNotNull(jsonNode69);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer21.isEmpty((java.lang.Object) jsonNode36);
        boolean boolean38 = stdKeySerializer0.isEmpty(serializerProvider20, (java.lang.Object) boolean37);
        boolean boolean39 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        boolean boolean45 = stdKeySerializer40.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer40.unwrappingSerializer(nameTransformer46);
        java.lang.Class<java.lang.Object> objClass48 = stdKeySerializer40.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator49 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer40, jsonGenerator49, serializerProvider50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(objClass48);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer44.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass67 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass67, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer44.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass73 = jsonNode72.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer10.serializeWithType((java.lang.Object) objJsonSerializer19, jsonGenerator20, serializerProvider21, typeSerializer22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = objJsonSerializer23.unwrappingSerializer(nameTransformer24);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer0.replaceDelegatee(objJsonSerializer25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer44.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass67 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass67, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer44.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        java.lang.reflect.Type type74 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer0.getSchema(serializerProvider73, type74, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer0.unwrappingSerializer(nameTransformer77);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper79 = null;
        com.fasterxml.jackson.databind.JavaType javaType80 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper79, javaType80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer7.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass35, false);
        boolean boolean40 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        java.lang.Throwable throwable7 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider6, throwable7, (java.lang.Object) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer12);
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass39 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer40.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer40.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer61.unwrappingSerializer(nameTransformer67);
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer61.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        boolean boolean74 = stdKeySerializer71.isEmpty(serializerProvider72, (java.lang.Object) (short) 1);
        boolean boolean76 = stdKeySerializer71.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        boolean boolean83 = stdKeySerializer78.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass84 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer71.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass84, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer61.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass84, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer40.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass84, false);
        boolean boolean91 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass84);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objClass38);
        org.junit.Assert.assertNotNull(objClass39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(objClass69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass34);
        boolean boolean40 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer0.unwrappingSerializer(nameTransformer41);
        boolean boolean43 = objJsonSerializer42.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        java.lang.Object obj69 = null;
        boolean boolean70 = objJsonSerializer16.isEmpty(obj69);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        boolean boolean74 = stdKeySerializer71.isEmpty(serializerProvider72, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer71.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = objJsonSerializer16.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        boolean boolean40 = stdKeySerializer35.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        boolean boolean47 = stdKeySerializer42.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass48 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer35.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass48, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer52.unwrappingSerializer(nameTransformer68);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        boolean boolean73 = stdKeySerializer70.isEmpty(serializerProvider71, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer70.unwrappingSerializer(nameTransformer75);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass79 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer70.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer87.getDelegatee();
        java.lang.Class<?> wildcardClass91 = stdKeySerializer87.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer82.getSchema(serializerProvider86, (java.lang.reflect.Type) wildcardClass91);
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer70.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass91);
        boolean boolean94 = stdKeySerializer52.isEmpty((java.lang.Object) wildcardClass91);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer35.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass91);
        com.fasterxml.jackson.databind.JsonNode jsonNode97 = stdKeySerializer7.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass91, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertNotNull(jsonNode97);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer16.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer5.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer32.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer32.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = stdKeySerializer32.isEmpty((java.lang.Object) wildcardClass71);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer32.unwrappingSerializer(nameTransformer75);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        boolean boolean83 = stdKeySerializer78.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass84 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer32.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass84);
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer5.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass84, true);
        boolean boolean88 = objJsonSerializer4.isEmpty((java.lang.Object) jsonNode87);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass16);
        java.lang.Object obj19 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize(obj19, jsonGenerator20, serializerProvider21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(jsonNode18);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        java.lang.Object obj85 = null;
        boolean boolean86 = stdKeySerializer0.isEmpty(serializerProvider84, obj85);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        java.lang.Throwable throwable88 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer89 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider90 = null;
        boolean boolean92 = stdKeySerializer89.isEmpty(serializerProvider90, (java.lang.Object) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider87, throwable88, (java.lang.Object) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Throwable throwable62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer63.unwrappingSerializer(nameTransformer68);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer71.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer63.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass76, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = stdKeySerializer63.unwrappingSerializer(nameTransformer79);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer87.getDelegatee();
        java.lang.Class<?> wildcardClass91 = stdKeySerializer87.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer82.getSchema(serializerProvider86, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer63.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass91, false);
        java.lang.Class<java.lang.Object> objClass96 = stdKeySerializer63.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider61, throwable62, (java.lang.Object) objClass96, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertNotNull(objClass96);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Throwable throwable30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider29, throwable30, (java.lang.Object) stdKeySerializer31, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        boolean boolean11 = stdKeySerializer6.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer6.unwrappingSerializer(nameTransformer12);
        java.lang.Class<java.lang.Object> objClass14 = stdKeySerializer6.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        boolean boolean21 = stdKeySerializer16.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        boolean boolean28 = stdKeySerializer23.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass29 = stdKeySerializer23.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass29, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer6.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer34.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = objJsonSerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = objJsonSerializer37.unwrappingSerializer(nameTransformer39);
        boolean boolean41 = stdKeySerializer6.isEmpty((java.lang.Object) nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = objJsonSerializer49.isEmpty((java.lang.Object) stdKeySerializer50);
        java.lang.Class<?> wildcardClass75 = objJsonSerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer6.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass75, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator79 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer6, jsonGenerator79, serializerProvider80, typeSerializer81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(objClass14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<java.lang.Object> objClass11 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer13.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = stdKeySerializer13.isEmpty((java.lang.Object) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer0.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer58.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer0.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(objClass11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode77);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer7.unwrappingSerializer(nameTransformer78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        java.lang.Throwable throwable81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer84 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer85 = stdKeySerializer82.unwrappingSerializer(nameTransformer84);
        boolean boolean86 = stdKeySerializer82.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        java.lang.Object obj88 = null;
        boolean boolean89 = stdKeySerializer82.isEmpty(serializerProvider87, obj88);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.wrapAndThrow(serializerProvider80, throwable81, (java.lang.Object) serializerProvider87, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNotNull(objJsonSerializer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = objJsonSerializer6.unwrappingSerializer(nameTransformer7);
        java.lang.Class<?> wildcardClass9 = objJsonSerializer8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        boolean boolean11 = stdKeySerializer8.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer20);
        java.lang.Class<?> wildcardClass45 = objJsonSerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass45, true);
        boolean boolean48 = objJsonSerializer6.isEmpty((java.lang.Object) jsonNode47);
        boolean boolean49 = objJsonSerializer6.isUnwrappingSerializer();
        java.lang.Class<?> wildcardClass50 = objJsonSerializer6.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass13 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objClass13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        boolean boolean21 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) stdKeySerializer17);
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objClass22);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Throwable throwable20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        boolean boolean24 = stdKeySerializer21.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = objJsonSerializer32.isEmpty((java.lang.Object) stdKeySerializer33);
        java.lang.Class<?> wildcardClass58 = objJsonSerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer21.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass58, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        java.lang.Class<java.lang.Object> objClass67 = stdKeySerializer62.handledType();
        boolean boolean69 = stdKeySerializer62.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer62.unwrappingSerializer(nameTransformer70);
        boolean boolean72 = stdKeySerializer21.isEmpty(serializerProvider61, (java.lang.Object) stdKeySerializer62);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = stdKeySerializer62.unwrappingSerializer(nameTransformer73);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider19, throwable20, (java.lang.Object) objJsonSerializer74, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer20.unwrappingSerializer(nameTransformer26);
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer20.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        boolean boolean35 = stdKeySerializer30.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        boolean boolean42 = stdKeySerializer37.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass43 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer30.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass43, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer20.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass43, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass73, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer60.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer84.getDelegatee();
        java.lang.Class<?> wildcardClass88 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer79.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass88, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer60.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass88, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer0.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass88, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(jsonNode94);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean51 = stdKeySerializer46.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass52 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer0.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper55 = null;
        com.fasterxml.jackson.databind.JavaType javaType56 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper55, javaType56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = objJsonSerializer10.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer21.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer38.getDelegatee();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer21.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = objJsonSerializer20.isEmpty((java.lang.Object) stdKeySerializer21);
        boolean boolean46 = objJsonSerializer12.isEmpty(serializerProvider13, (java.lang.Object) boolean45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = stdKeySerializer48.unwrappingSerializer(nameTransformer64);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer66.unwrappingSerializer(nameTransformer71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer74.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer83 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer83.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer83.getDelegatee();
        java.lang.Class<?> wildcardClass87 = stdKeySerializer83.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer78.getSchema(serializerProvider82, (java.lang.reflect.Type) wildcardClass87);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer66.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = stdKeySerializer48.isEmpty((java.lang.Object) wildcardClass87);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer91 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer92 = stdKeySerializer48.unwrappingSerializer(nameTransformer91);
        boolean boolean93 = stdKeySerializer48.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = stdKeySerializer48.unwrappingSerializer(nameTransformer94);
        boolean boolean96 = objJsonSerializer95.usesObjectId();
        boolean boolean97 = objJsonSerializer95.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer98 = objJsonSerializer95.getDelegatee();
        boolean boolean99 = objJsonSerializer12.isEmpty(serializerProvider47, (java.lang.Object) wildcardJsonSerializer98);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        java.lang.Throwable throwable60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer61.getDelegatee();
        java.lang.Class<java.lang.Object> objClass65 = stdKeySerializer61.handledType();
        java.lang.Class<java.lang.Object> objClass66 = stdKeySerializer61.handledType();
        boolean boolean67 = stdKeySerializer61.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider59, throwable60, (java.lang.Object) stdKeySerializer61, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objClass65);
        org.junit.Assert.assertNotNull(objClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        java.lang.Throwable throwable11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        java.lang.Class<java.lang.Object> objClass21 = stdKeySerializer16.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider15, (java.lang.reflect.Type) objClass21, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider10, throwable11, (java.lang.Object) objClass21, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Throwable throwable22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = stdKeySerializer23.isEmpty(serializerProvider34, (java.lang.Object) jsonNode45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        java.lang.reflect.Type type48 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer23.getSchema(serializerProvider47, type48, false);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider21, throwable22, (java.lang.Object) serializerProvider47, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(jsonNode50);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer8.getDelegatee();
        boolean boolean11 = stdKeySerializer8.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer20);
        java.lang.Class<?> wildcardClass45 = objJsonSerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer8.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass45, true);
        boolean boolean48 = objJsonSerializer6.isEmpty((java.lang.Object) jsonNode47);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = objJsonSerializer6.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer27.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass79, true);
        boolean boolean83 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass84 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper85 = null;
        com.fasterxml.jackson.databind.JavaType javaType86 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper85, javaType86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objClass84);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer34.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = stdKeySerializer34.isEmpty((java.lang.Object) wildcardClass73);
        java.lang.Class<java.lang.Object> objClass77 = stdKeySerializer34.handledType();
        boolean boolean78 = stdKeySerializer0.isEmpty(serializerProvider33, (java.lang.Object) objClass77);
        java.lang.Class<?> wildcardClass79 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer23.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer18.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer12.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        boolean boolean45 = stdKeySerializer40.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer40.unwrappingSerializer(nameTransformer46);
        java.lang.Class<java.lang.Object> objClass48 = stdKeySerializer40.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer40.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        boolean boolean67 = stdKeySerializer64.isEmpty(serializerProvider65, (java.lang.Object) (short) 1);
        boolean boolean69 = stdKeySerializer64.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass70 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = objJsonSerializer50.isEmpty(serializerProvider51, (java.lang.Object) jsonNode71);
        boolean boolean73 = stdKeySerializer0.isEmpty(serializerProvider39, (java.lang.Object) objJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(objClass48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = stdKeySerializer18.isEmpty((java.lang.Object) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer62.unwrappingSerializer(nameTransformer68);
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer62.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        boolean boolean77 = stdKeySerializer72.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer72.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer62.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass85, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer18.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer0.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass85, true);
        boolean boolean93 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer9.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer9.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = stdKeySerializer9.isEmpty((java.lang.Object) wildcardClass48);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer9.unwrappingSerializer(nameTransformer52);
        boolean boolean54 = stdKeySerializer9.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer9.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer58.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        boolean boolean83 = stdKeySerializer78.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass84 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer58.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass84);
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer9.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass84, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer0.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass84);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer89 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer90 = stdKeySerializer0.unwrappingSerializer(nameTransformer89);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(objJsonSerializer90);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer21.unwrappingSerializer(nameTransformer27);
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        boolean boolean36 = stdKeySerializer31.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        boolean boolean43 = stdKeySerializer38.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass44 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer31.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer21.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer0.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        boolean boolean58 = objJsonSerializer57.usesObjectId();
        boolean boolean59 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer57);
        boolean boolean60 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer41.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = objJsonSerializer53.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = objJsonSerializer55.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer58.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass67 = stdKeySerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer58.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer58.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer74 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = stdKeySerializer58.unwrappingSerializer(nameTransformer74);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer58.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer80 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer55.serializeWithType((java.lang.Object) stdKeySerializer58, jsonGenerator78, serializerProvider79, typeSerializer80);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(objJsonSerializer75);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer0.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        boolean boolean54 = objJsonSerializer53.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        boolean boolean58 = stdKeySerializer55.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer84.getDelegatee();
        java.lang.Class<?> wildcardClass88 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer79.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer67.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = objJsonSerializer66.isEmpty((java.lang.Object) stdKeySerializer67);
        java.lang.Class<?> wildcardClass92 = objJsonSerializer66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass92, true);
        boolean boolean95 = objJsonSerializer53.isEmpty((java.lang.Object) jsonNode94);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator96 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider97 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) boolean95, jsonGenerator96, serializerProvider97, typeSerializer98);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<java.lang.Object> objClass25 = stdKeySerializer5.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer27.handledType();
        boolean boolean34 = stdKeySerializer27.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer27.unwrappingSerializer(nameTransformer35);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer5.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer46.getDelegatee();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer53.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer53.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74);
        boolean boolean78 = stdKeySerializer41.isEmpty(serializerProvider52, (java.lang.Object) stdKeySerializer53);
        java.lang.Class<java.lang.Object> objClass79 = stdKeySerializer41.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator80 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass79, jsonGenerator80, serializerProvider81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(objClass25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objClass79);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        java.lang.Class<java.lang.Object> objClass43 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = objJsonSerializer51.isEmpty((java.lang.Object) stdKeySerializer52);
        java.lang.Class<?> wildcardClass77 = objJsonSerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<java.lang.Object> objClass79 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper80 = null;
        com.fasterxml.jackson.databind.JavaType javaType81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper80, javaType81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objClass43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(objClass79);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper52 = null;
        com.fasterxml.jackson.databind.JavaType javaType53 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper52, javaType53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer15.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass24 = stdKeySerializer23.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer15.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer15.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = objJsonSerializer14.isEmpty((java.lang.Object) stdKeySerializer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer41.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        boolean boolean62 = stdKeySerializer59.isEmpty(serializerProvider60, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = stdKeySerializer59.unwrappingSerializer(nameTransformer64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass68 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer59.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass68);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer76.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer76.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer76.getDelegatee();
        java.lang.Class<?> wildcardClass80 = stdKeySerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer71.getSchema(serializerProvider75, (java.lang.reflect.Type) wildcardClass80);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer59.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = stdKeySerializer41.isEmpty((java.lang.Object) wildcardClass80);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer15.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass80, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer86 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer87 = stdKeySerializer15.unwrappingSerializer(nameTransformer86);
        java.lang.Class<java.lang.Object> objClass88 = stdKeySerializer15.handledType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertNotNull(objJsonSerializer87);
        org.junit.Assert.assertNotNull(objClass88);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer0.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        java.lang.Object obj60 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator61 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize(obj60, jsonGenerator61, serializerProvider62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer0.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        boolean boolean52 = stdKeySerializer49.isEmpty(serializerProvider50, (java.lang.Object) (short) 1);
        boolean boolean54 = stdKeySerializer49.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass55 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = stdKeySerializer37.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer37.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer37, jsonGenerator60, serializerProvider61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        java.lang.Class<?> wildcardClass13 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.unwrappingSerializer(nameTransformer92);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = stdKeySerializer0.unwrappingSerializer(nameTransformer94);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer96 = objJsonSerializer95.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertNull(wildcardJsonSerializer96);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        boolean boolean52 = stdKeySerializer41.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = jsonNode64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer41.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass65);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        boolean boolean6 = stdKeySerializer3.isEmpty(serializerProvider4, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer3.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = objJsonSerializer9.isEmpty((java.lang.Object) stdKeySerializer10);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer10.unwrappingSerializer(nameTransformer35);
        boolean boolean37 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer36);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer7.unwrappingSerializer(nameTransformer13);
        java.lang.Class<java.lang.Object> objClass15 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        boolean boolean29 = stdKeySerializer24.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass30 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass30, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer7.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer35.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = objJsonSerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = objJsonSerializer38.unwrappingSerializer(nameTransformer40);
        boolean boolean42 = stdKeySerializer7.isEmpty((java.lang.Object) nameTransformer40);
        java.lang.Class<?> wildcardClass43 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass43, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(objClass15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode45);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        java.lang.Class<java.lang.Object> objClass23 = stdKeySerializer18.handledType();
        boolean boolean25 = stdKeySerializer18.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer18.getDelegatee();
        boolean boolean27 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer34.getDelegatee();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer29.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        java.lang.Class<java.lang.Object> objClass47 = stdKeySerializer42.handledType();
        boolean boolean48 = stdKeySerializer29.isEmpty(serializerProvider41, (java.lang.Object) stdKeySerializer42);
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer29.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer18.getSchema(serializerProvider28, (java.lang.reflect.Type) objClass49);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objClass23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        boolean boolean21 = objJsonSerializer19.isEmpty((java.lang.Object) 0L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer44.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass67 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass67, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer44.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        java.lang.reflect.Type type74 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer0.getSchema(serializerProvider73, type74, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer0.unwrappingSerializer(nameTransformer77);
        boolean boolean79 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer81 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = stdKeySerializer81.unwrappingSerializer(nameTransformer83);
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer81.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer0.getSchema(serializerProvider80, (java.lang.reflect.Type) objClass85, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(objClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Throwable throwable25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        boolean boolean31 = stdKeySerializer26.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer26.unwrappingSerializer(nameTransformer32);
        java.lang.Class<java.lang.Object> objClass34 = stdKeySerializer26.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider24, throwable25, (java.lang.Object) objClass34, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(objClass34);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper23 = null;
        com.fasterxml.jackson.databind.JavaType javaType24 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper23, javaType24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        java.lang.Throwable throwable8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer9.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer56.unwrappingSerializer(nameTransformer62);
        java.lang.Class<java.lang.Object> objClass64 = stdKeySerializer56.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        boolean boolean71 = stdKeySerializer66.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer66.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer56.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass79, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer12.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer9.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass79, false);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider7, throwable8, (java.lang.Object) false, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objClass10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(objClass64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode86);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean35 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer33);
        boolean boolean36 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer37.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objClass38, jsonGenerator39, serializerProvider40, typeSerializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objClass38);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        boolean boolean52 = stdKeySerializer49.isEmpty(serializerProvider50, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer49.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer49.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass62, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer49.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        boolean boolean70 = stdKeySerializer67.isEmpty(serializerProvider68, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer67.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass76 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer67.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer84.getDelegatee();
        java.lang.Class<?> wildcardClass88 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer79.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass88);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer67.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = stdKeySerializer49.isEmpty((java.lang.Object) wildcardClass88);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer49.unwrappingSerializer(nameTransformer92);
        boolean boolean94 = stdKeySerializer49.usesObjectId();
        boolean boolean95 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer49);
        boolean boolean96 = stdKeySerializer49.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper97 = null;
        com.fasterxml.jackson.databind.JavaType javaType98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer49.acceptJsonFormatVisitor(jsonFormatVisitorWrapper97, javaType98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.unwrappingSerializer(nameTransformer92);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer94 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper95 = null;
        com.fasterxml.jackson.databind.JavaType javaType96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper95, javaType96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNull(wildcardJsonSerializer94);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Throwable throwable17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer18.unwrappingSerializer(nameTransformer20);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider16, throwable17, (java.lang.Object) objJsonSerializer21, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        boolean boolean49 = stdKeySerializer7.isEmpty(serializerProvider32, (java.lang.Object) serializerProvider44);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = stdKeySerializer50.usesObjectId();
        java.lang.Class<java.lang.Object> objClass62 = stdKeySerializer50.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        boolean boolean68 = stdKeySerializer63.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = stdKeySerializer63.unwrappingSerializer(nameTransformer69);
        boolean boolean71 = stdKeySerializer50.isEmpty((java.lang.Object) objJsonSerializer70);
        boolean boolean72 = stdKeySerializer7.isEmpty((java.lang.Object) objJsonSerializer70);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper73 = null;
        com.fasterxml.jackson.databind.JavaType javaType74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.acceptJsonFormatVisitor(jsonFormatVisitorWrapper73, javaType74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objClass62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        boolean boolean90 = stdKeySerializer0.usesObjectId();
        boolean boolean91 = stdKeySerializer0.usesObjectId();
        java.lang.Class<?> wildcardClass92 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper21 = null;
        com.fasterxml.jackson.databind.JavaType javaType22 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper21, javaType22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer0.handledType();
        boolean boolean50 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = stdKeySerializer51.usesObjectId();
        java.lang.Class<java.lang.Object> objClass63 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        boolean boolean67 = stdKeySerializer64.isEmpty(serializerProvider65, (java.lang.Object) (short) 1);
        boolean boolean69 = stdKeySerializer64.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer64.unwrappingSerializer(nameTransformer70);
        boolean boolean72 = stdKeySerializer51.isEmpty((java.lang.Object) objJsonSerializer71);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer0.replaceDelegatee(objJsonSerializer71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objClass63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean50 = stdKeySerializer46.usesObjectId();
        boolean boolean51 = stdKeySerializer46.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer46.getDelegatee();
        java.lang.Class<java.lang.Object> objClass53 = stdKeySerializer46.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer25.getSchema(serializerProvider45, (java.lang.reflect.Type) objClass53, true);
        boolean boolean56 = stdKeySerializer25.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper57 = null;
        com.fasterxml.jackson.databind.JavaType javaType58 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer25.acceptJsonFormatVisitor(jsonFormatVisitorWrapper57, javaType58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer19.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer19.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer19.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = stdKeySerializer19.isEmpty((java.lang.Object) wildcardClass58);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer19.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass71 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer19.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass71, false);
        boolean boolean75 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        boolean boolean81 = stdKeySerializer78.isEmpty(serializerProvider79, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer84 = stdKeySerializer78.unwrappingSerializer(nameTransformer83);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass87 = stdKeySerializer86.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer78.getSchema(serializerProvider85, (java.lang.reflect.Type) wildcardClass87);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider89 = null;
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer78.getSchema(serializerProvider89, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = stdKeySerializer78.unwrappingSerializer(nameTransformer94);
        java.lang.Class<java.lang.Object> objClass96 = stdKeySerializer78.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode98 = stdKeySerializer0.getSchema(serializerProvider77, (java.lang.reflect.Type) objClass96, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(objJsonSerializer84);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertNotNull(objClass96);
        org.junit.Assert.assertNotNull(jsonNode98);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        boolean boolean12 = stdKeySerializer7.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass13 = stdKeySerializer7.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass13, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer17.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass26 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer17.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer17.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer17.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer35.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = stdKeySerializer17.isEmpty((java.lang.Object) wildcardClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer0.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        java.lang.Throwable throwable63 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider62, throwable63, (java.lang.Object) 10L, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper26 = null;
        com.fasterxml.jackson.databind.JavaType javaType27 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper26, javaType27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean51 = stdKeySerializer46.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass52 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer0.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer0.unwrappingSerializer(nameTransformer55);
        java.lang.Class<java.lang.Object> objClass57 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objClass54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(objClass57);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean35 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer33);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper36 = null;
        com.fasterxml.jackson.databind.JavaType javaType37 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper36, javaType37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        java.lang.Throwable throwable13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer32.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer32.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = stdKeySerializer14.isEmpty((java.lang.Object) wildcardClass53);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer14.unwrappingSerializer(nameTransformer57);
        boolean boolean59 = stdKeySerializer14.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer14.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass75 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer62.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass75, false);
        boolean boolean78 = objJsonSerializer61.isEmpty((java.lang.Object) false);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = objJsonSerializer61.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider12, throwable13, (java.lang.Object) objJsonSerializer61, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer34.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = stdKeySerializer34.isEmpty((java.lang.Object) wildcardClass73);
        java.lang.Class<java.lang.Object> objClass77 = stdKeySerializer34.handledType();
        boolean boolean78 = stdKeySerializer0.isEmpty(serializerProvider33, (java.lang.Object) objClass77);
        java.lang.Class<java.lang.Object> objClass79 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        boolean boolean83 = stdKeySerializer80.isEmpty(serializerProvider81, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer80.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = stdKeySerializer80.unwrappingSerializer(nameTransformer85);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer88 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass89 = stdKeySerializer88.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer80.getSchema(serializerProvider87, (java.lang.reflect.Type) wildcardClass89);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider91 = null;
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer80.getSchema(serializerProvider91, (java.lang.reflect.Type) wildcardClass93, true);
        boolean boolean96 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer80);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = stdKeySerializer0.unwrappingSerializer(nameTransformer97);
        boolean boolean99 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objClass79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer47.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer65.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer65.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer82.getDelegatee();
        java.lang.Class<?> wildcardClass86 = stdKeySerializer82.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer77.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass86);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer65.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass86);
        boolean boolean89 = stdKeySerializer47.isEmpty((java.lang.Object) wildcardClass86);
        java.lang.Class<java.lang.Object> objClass90 = stdKeySerializer47.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer0.getSchema(serializerProvider46, (java.lang.reflect.Type) objClass90, false);
        java.lang.Class<java.lang.Object> objClass93 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objClass90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(objClass93);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = stdKeySerializer12.isEmpty(serializerProvider23, (java.lang.Object) jsonNode34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51, true);
        boolean boolean56 = stdKeySerializer12.isEmpty(serializerProvider36, (java.lang.Object) stdKeySerializer37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        boolean boolean62 = stdKeySerializer58.usesObjectId();
        boolean boolean63 = stdKeySerializer58.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer58.getDelegatee();
        java.lang.Class<java.lang.Object> objClass65 = stdKeySerializer58.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer37.getSchema(serializerProvider57, (java.lang.reflect.Type) objClass65, true);
        boolean boolean68 = stdKeySerializer37.isUnwrappingSerializer();
        boolean boolean69 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objClass65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        boolean boolean58 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Throwable throwable24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer25.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer44.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass53, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer25.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass53, false);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider23, throwable24, (java.lang.Object) stdKeySerializer25, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(jsonNode57);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer69.unwrappingSerializer(nameTransformer71);
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) nameTransformer71);
        boolean boolean74 = objJsonSerializer6.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        java.lang.Object obj85 = null;
        boolean boolean86 = stdKeySerializer0.isEmpty(serializerProvider84, obj85);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        boolean boolean90 = stdKeySerializer87.isEmpty(serializerProvider88, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer91 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer87.unwrappingSerializer(nameTransformer92);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = objJsonSerializer93.unwrappingSerializer(nameTransformer94);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator96 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objJsonSerializer93, jsonGenerator96, serializerProvider97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer91);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        java.lang.Throwable throwable29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass63);
        boolean boolean67 = stdKeySerializer30.isEmpty(serializerProvider41, (java.lang.Object) stdKeySerializer42);
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer30.handledType();
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer30.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider28, throwable29, (java.lang.Object) objClass69, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertNotNull(objClass69);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean51 = stdKeySerializer46.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass52 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer0.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer0.handledType();
        boolean boolean55 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer56.unwrappingSerializer(nameTransformer72);
        java.lang.Class<java.lang.Object> objClass74 = stdKeySerializer56.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer56.getDelegatee();
        java.lang.Class<java.lang.Object> objClass76 = stdKeySerializer56.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator77 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer79 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) stdKeySerializer56, jsonGenerator77, serializerProvider78, typeSerializer79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(objClass74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(objClass76);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        boolean boolean59 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer0.unwrappingSerializer(nameTransformer60);
        java.lang.Class<java.lang.Object> objClass62 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(objClass62);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = stdKeySerializer18.isEmpty((java.lang.Object) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer62.unwrappingSerializer(nameTransformer68);
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer62.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        boolean boolean77 = stdKeySerializer72.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer72.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer62.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass85, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer18.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer0.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass85, true);
        boolean boolean93 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper94 = null;
        com.fasterxml.jackson.databind.JavaType javaType95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper94, javaType95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        java.lang.Throwable throwable85 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer86 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer86.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer88 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer89 = stdKeySerializer86.unwrappingSerializer(nameTransformer88);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = objJsonSerializer89.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer91 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer92 = objJsonSerializer89.unwrappingSerializer(nameTransformer91);
        boolean boolean93 = objJsonSerializer89.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider84, throwable85, (java.lang.Object) objJsonSerializer89, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(objJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(objJsonSerializer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer22.handledType();
        boolean boolean29 = stdKeySerializer22.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer22.unwrappingSerializer(nameTransformer30);
        java.lang.Class<?> wildcardClass32 = objJsonSerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer0.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        boolean boolean39 = stdKeySerializer34.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer34.unwrappingSerializer(nameTransformer40);
        java.lang.Class<java.lang.Object> objClass42 = stdKeySerializer34.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer34.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = objJsonSerializer44.unwrappingSerializer(nameTransformer45);
        boolean boolean47 = objJsonSerializer46.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer0.replaceDelegatee(objJsonSerializer46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objClass42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = stdKeySerializer20.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = objJsonSerializer19.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer11.getDelegatee();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer26.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean43 = stdKeySerializer6.isEmpty(serializerProvider17, (java.lang.Object) stdKeySerializer18);
        java.lang.Class<java.lang.Object> objClass44 = stdKeySerializer6.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator45 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass44, jsonGenerator45, serializerProvider46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objClass44);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass75 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer49.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass75, true);
        boolean boolean79 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.unwrappingSerializer(nameTransformer92);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer95 = stdKeySerializer0.unwrappingSerializer(nameTransformer94);
        boolean boolean96 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(objJsonSerializer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        boolean boolean72 = stdKeySerializer69.isUnwrappingSerializer();
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer69);
        java.lang.Class<?> wildcardClass74 = stdKeySerializer69.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer24.handledType();
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer24.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer21.getSchema(serializerProvider23, (java.lang.reflect.Type) objClass29);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer33 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objClass29, jsonGenerator31, serializerProvider32, typeSerializer33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass57 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass57, false);
        boolean boolean60 = stdKeySerializer0.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer44.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = objJsonSerializer62.unwrappingSerializer(nameTransformer63);
        java.lang.Class<?> wildcardClass65 = objJsonSerializer62.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper16 = null;
        com.fasterxml.jackson.databind.JavaType javaType17 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper16, javaType17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        boolean boolean13 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass47);
        boolean boolean51 = stdKeySerializer14.isEmpty(serializerProvider25, (java.lang.Object) stdKeySerializer26);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer14.handledType();
        java.lang.Class<java.lang.Object> objClass53 = stdKeySerializer14.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator54 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objClass53, jsonGenerator54, serializerProvider55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertNotNull(objClass53);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        boolean boolean35 = stdKeySerializer33.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer33.isEmpty(serializerProvider36, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer33.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer0.isEmpty((java.lang.Object) serializerProvider39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Throwable throwable54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        boolean boolean57 = stdKeySerializer55.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer55.isEmpty(serializerProvider58, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        java.lang.Class<java.lang.Object> objClass67 = stdKeySerializer62.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer55.getSchema(serializerProvider61, (java.lang.reflect.Type) objClass67, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider53, throwable54, (java.lang.Object) stdKeySerializer55, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        boolean boolean24 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer0.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        boolean boolean32 = stdKeySerializer27.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        boolean boolean39 = stdKeySerializer34.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass40 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass40, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer27.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator50 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer52 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer26.serializeWithType((java.lang.Object) stdKeySerializer27, jsonGenerator50, serializerProvider51, typeSerializer52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper20 = null;
        com.fasterxml.jackson.databind.JavaType javaType21 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper20, javaType21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer30.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = stdKeySerializer30.isEmpty((java.lang.Object) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer13.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) serializerProvider29);
        boolean boolean75 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer87 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer87.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer87.getDelegatee();
        java.lang.Class<?> wildcardClass91 = stdKeySerializer87.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer82.getSchema(serializerProvider86, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer77.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass91, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode97 = stdKeySerializer0.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass91, false);
        java.lang.Class<?> wildcardClass98 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(jsonNode93);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertNotNull(jsonNode97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        boolean boolean26 = stdKeySerializer0.usesObjectId();
        boolean boolean27 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21, true);
        boolean boolean26 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        boolean boolean72 = stdKeySerializer27.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = stdKeySerializer27.unwrappingSerializer(nameTransformer73);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = objJsonSerializer74.unwrappingSerializer(nameTransformer75);
        boolean boolean77 = objJsonSerializer74.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = objJsonSerializer74.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator79 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) objJsonSerializer74, jsonGenerator79, serializerProvider80, typeSerializer81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21, true);
        boolean boolean26 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) stdKeySerializer7);
        boolean boolean27 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer0.handledType();
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertNotNull(objClass29);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardJsonSerializer8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer0.unwrappingSerializer(nameTransformer47);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer20.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer20.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer20.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) stdKeySerializer12);
        java.lang.Class<java.lang.Object> objClass38 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper39 = null;
        com.fasterxml.jackson.databind.JavaType javaType40 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper39, javaType40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objClass38);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        boolean boolean29 = stdKeySerializer24.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer24.unwrappingSerializer(nameTransformer30);
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer24.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer24.unwrappingSerializer(nameTransformer33);
        java.lang.Class<?> wildcardClass35 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer0.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass35);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = wildcardJsonSerializer5.getDelegatee();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        java.lang.Throwable throwable9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<java.lang.Object> objClass21 = stdKeySerializer10.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer23.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer41.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass50 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer41.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer41.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = stdKeySerializer23.isEmpty((java.lang.Object) wildcardClass62);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer10.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass62);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider8, throwable9, (java.lang.Object) stdKeySerializer10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objClass21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jsonNode66);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass7 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer9.getSchema(serializerProvider12, (java.lang.reflect.Type) objClass18, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer22.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = stdKeySerializer22.isEmpty((java.lang.Object) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        boolean boolean69 = stdKeySerializer66.isEmpty(serializerProvider67, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer66.unwrappingSerializer(nameTransformer71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer74.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = stdKeySerializer66.usesObjectId();
        java.lang.Class<java.lang.Object> objClass78 = stdKeySerializer66.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = stdKeySerializer79.unwrappingSerializer(nameTransformer85);
        boolean boolean87 = stdKeySerializer66.isEmpty((java.lang.Object) objJsonSerializer86);
        java.lang.Class<?> wildcardClass88 = objJsonSerializer86.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer22.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass88, false);
        java.lang.Class<java.lang.Object> objClass91 = stdKeySerializer22.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer9.getSchema(serializerProvider21, (java.lang.reflect.Type) objClass91);
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer0.getSchema(serializerProvider8, (java.lang.reflect.Type) objClass91, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objClass7);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objClass78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(objClass91);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(jsonNode94);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer27.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        boolean boolean48 = stdKeySerializer45.isEmpty(serializerProvider46, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer45.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass66);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer45.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = stdKeySerializer27.isEmpty((java.lang.Object) wildcardClass66);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer27.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        boolean boolean78 = stdKeySerializer73.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass79 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer27.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass79);
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass79, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = null;
        boolean boolean88 = stdKeySerializer85.isEmpty(serializerProvider86, (java.lang.Object) (short) 1);
        boolean boolean90 = stdKeySerializer85.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer91 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer92 = stdKeySerializer85.unwrappingSerializer(nameTransformer91);
        java.lang.Class<java.lang.Object> objClass93 = stdKeySerializer85.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer0.getSchema(serializerProvider84, (java.lang.reflect.Type) objClass93);
        java.lang.Class<java.lang.Object> objClass95 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer92);
        org.junit.Assert.assertNotNull(objClass93);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertNotNull(objClass95);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        boolean boolean37 = stdKeySerializer32.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        boolean boolean44 = stdKeySerializer39.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass45 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass45, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = stdKeySerializer49.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer54.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer72.unwrappingSerializer(nameTransformer77);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer80 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer80.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider79, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer84.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer89 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer89.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer91 = stdKeySerializer89.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer92 = stdKeySerializer89.getDelegatee();
        java.lang.Class<?> wildcardClass93 = stdKeySerializer89.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode94 = stdKeySerializer84.getSchema(serializerProvider88, (java.lang.reflect.Type) wildcardClass93);
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer72.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass93);
        boolean boolean96 = stdKeySerializer54.isEmpty((java.lang.Object) wildcardClass93);
        com.fasterxml.jackson.databind.JsonNode jsonNode97 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass93);
        com.fasterxml.jackson.databind.JsonNode jsonNode98 = stdKeySerializer32.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass93);
        boolean boolean99 = stdKeySerializer7.isEmpty((java.lang.Object) stdKeySerializer32);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertNull(wildcardJsonSerializer91);
        org.junit.Assert.assertNull(wildcardJsonSerializer92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(jsonNode94);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(jsonNode97);
        org.junit.Assert.assertNotNull(jsonNode98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        boolean boolean38 = stdKeySerializer35.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass39 = stdKeySerializer35.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer7.getSchema(serializerProvider34, (java.lang.reflect.Type) objClass39);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer38.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = stdKeySerializer38.isEmpty((java.lang.Object) wildcardClass77);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer81 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = stdKeySerializer38.unwrappingSerializer(nameTransformer81);
        boolean boolean83 = stdKeySerializer26.isEmpty((java.lang.Object) stdKeySerializer38);
        boolean boolean84 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer38);
        boolean boolean85 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean15 = stdKeySerializer10.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean35 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer33);
        boolean boolean36 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper37 = null;
        com.fasterxml.jackson.databind.JavaType javaType38 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper37, javaType38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer17.unwrappingSerializer(nameTransformer19);
        java.lang.Class<java.lang.Object> objClass21 = stdKeySerializer17.handledType();
        boolean boolean22 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) objClass21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = objJsonSerializer29.isEmpty((java.lang.Object) stdKeySerializer30);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer0.replaceDelegatee(objJsonSerializer29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(objClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer41.unwrappingSerializer(nameTransformer52);
        boolean boolean54 = objJsonSerializer53.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer0.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        java.lang.Throwable throwable61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        boolean boolean76 = stdKeySerializer73.isEmpty(serializerProvider74, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        java.lang.Class<?> wildcardClass82 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer73.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass82, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass82, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer62.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass82);
        boolean boolean88 = stdKeySerializer62.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass89 = stdKeySerializer62.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider60, throwable61, (java.lang.Object) objClass89, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objClass89);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = stdKeySerializer7.usesObjectId();
        java.lang.Class<java.lang.Object> objClass19 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer7.unwrappingSerializer(nameTransformer20);
        boolean boolean22 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) nameTransformer20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objClass19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        boolean boolean20 = stdKeySerializer15.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        boolean boolean27 = stdKeySerializer22.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass28 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer15.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass28, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer15.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) serializerProvider14, jsonGenerator39, serializerProvider40, typeSerializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(jsonNode38);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer5.unwrappingSerializer(nameTransformer48);
        boolean boolean50 = stdKeySerializer5.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer5.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean65 = stdKeySerializer0.isEmpty(serializerProvider4, (java.lang.Object) stdKeySerializer5);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper66 = null;
        com.fasterxml.jackson.databind.JavaType javaType67 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper66, javaType67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Object obj1 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator2 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType(obj1, jsonGenerator2, serializerProvider3, typeSerializer4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = objJsonSerializer47.unwrappingSerializer(nameTransformer48);
        boolean boolean50 = objJsonSerializer47.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = objJsonSerializer47.unwrappingSerializer(nameTransformer51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        boolean boolean34 = stdKeySerializer7.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer13.handledType();
        boolean boolean21 = stdKeySerializer13.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer27.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer32.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer32.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = stdKeySerializer32.isEmpty((java.lang.Object) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer27.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<java.lang.Object> objClass76 = stdKeySerializer27.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer0.getSchema(serializerProvider26, (java.lang.reflect.Type) objClass76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer79.getDelegatee();
        boolean boolean84 = stdKeySerializer79.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer85.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer89 = stdKeySerializer85.getDelegatee();
        boolean boolean90 = stdKeySerializer85.isUnwrappingSerializer();
        boolean boolean91 = stdKeySerializer79.isEmpty((java.lang.Object) boolean90);
        java.lang.Class<?> wildcardClass92 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode93 = stdKeySerializer0.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNotNull(objClass76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
        org.junit.Assert.assertNull(wildcardJsonSerializer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(jsonNode93);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        boolean boolean20 = stdKeySerializer17.isEmpty(serializerProvider18, (java.lang.Object) (short) 1);
        boolean boolean22 = stdKeySerializer17.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass23 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<java.lang.Object> objClass25 = stdKeySerializer5.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        java.lang.Class<java.lang.Object> objClass32 = stdKeySerializer27.handledType();
        boolean boolean34 = stdKeySerializer27.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer27.unwrappingSerializer(nameTransformer35);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer5.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        java.lang.Class<java.lang.Object> objClass47 = stdKeySerializer42.handledType();
        boolean boolean49 = stdKeySerializer42.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer42.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer42.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer0.getSchema(serializerProvider41, (java.lang.reflect.Type) objClass52, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer55.getDelegatee();
        boolean boolean60 = stdKeySerializer55.isUnwrappingSerializer();
        boolean boolean61 = stdKeySerializer55.usesObjectId();
        boolean boolean62 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(objClass25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = stdKeySerializer56.usesObjectId();
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer56.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer69.unwrappingSerializer(nameTransformer75);
        boolean boolean77 = stdKeySerializer56.isEmpty((java.lang.Object) objJsonSerializer76);
        java.lang.Class<?> wildcardClass78 = objJsonSerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer12.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass78, false);
        boolean boolean81 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) wildcardClass78);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider82 = null;
        java.lang.Object obj83 = null;
        boolean boolean84 = stdKeySerializer0.isEmpty(serializerProvider82, obj83);
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objClass85);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean26 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Throwable throwable28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        boolean boolean34 = stdKeySerializer29.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        boolean boolean41 = stdKeySerializer36.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass42 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer29.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass42, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = stdKeySerializer46.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer46.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer46.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer46.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        boolean boolean67 = stdKeySerializer64.isEmpty(serializerProvider65, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = stdKeySerializer64.unwrappingSerializer(nameTransformer69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer76.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer76.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer76.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer81 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer81.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer81.getDelegatee();
        java.lang.Class<?> wildcardClass85 = stdKeySerializer81.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer76.getSchema(serializerProvider80, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer64.getSchema(serializerProvider75, (java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = stdKeySerializer46.isEmpty((java.lang.Object) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer29.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass85);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider27, throwable28, (java.lang.Object) jsonNode89, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(jsonNode89);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer9.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        boolean boolean21 = stdKeySerializer16.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass22 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass22, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer9.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper33 = null;
        com.fasterxml.jackson.databind.JavaType javaType34 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper33, javaType34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean8 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer9.getDelegatee();
        boolean boolean12 = stdKeySerializer9.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        boolean boolean31 = stdKeySerializer26.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass32 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<java.lang.Object> objClass34 = stdKeySerializer14.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        java.lang.Class<java.lang.Object> objClass41 = stdKeySerializer36.handledType();
        boolean boolean43 = stdKeySerializer36.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer36.unwrappingSerializer(nameTransformer44);
        java.lang.Class<?> wildcardClass46 = objJsonSerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer14.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer9.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass46, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        java.lang.Class<java.lang.Object> objClass56 = stdKeySerializer51.handledType();
        boolean boolean58 = stdKeySerializer51.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer51.unwrappingSerializer(nameTransformer59);
        java.lang.Class<java.lang.Object> objClass61 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer9.getSchema(serializerProvider50, (java.lang.reflect.Type) objClass61, true);
        boolean boolean64 = objJsonSerializer6.isEmpty((java.lang.Object) objClass61);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer69.getDelegatee();
        java.lang.Class<java.lang.Object> objClass74 = stdKeySerializer69.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer65.getSchema(serializerProvider68, (java.lang.reflect.Type) objClass74, true);
        boolean boolean77 = stdKeySerializer65.usesObjectId();
        boolean boolean78 = stdKeySerializer65.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = objJsonSerializer6.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer65);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objClass34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(objClass61);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(objClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer0.unwrappingSerializer(nameTransformer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer0.handledType();
        boolean boolean50 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator79 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer51, jsonGenerator79, serializerProvider80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = wildcardJsonSerializer11.isUnwrappingSerializer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer0.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer15.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass24 = stdKeySerializer23.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer15.getSchema(serializerProvider22, (java.lang.reflect.Type) wildcardClass24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer15.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer15.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        java.lang.Class<?> wildcardClass54 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer45.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass54);
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = stdKeySerializer15.isEmpty((java.lang.Object) wildcardClass54);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer15.unwrappingSerializer(nameTransformer58);
        boolean boolean60 = stdKeySerializer15.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer15.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = objJsonSerializer62.unwrappingSerializer(nameTransformer63);
        boolean boolean65 = objJsonSerializer62.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = objJsonSerializer62.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator68 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objJsonSerializer67, jsonGenerator68, serializerProvider69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        java.lang.Throwable throwable13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer14.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = stdKeySerializer14.usesObjectId();
        boolean boolean43 = stdKeySerializer14.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider12, throwable13, (java.lang.Object) stdKeySerializer14, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        boolean boolean21 = stdKeySerializer0.isEmpty(serializerProvider16, (java.lang.Object) stdKeySerializer17);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper22 = null;
        com.fasterxml.jackson.databind.JavaType javaType23 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer17.acceptJsonFormatVisitor(jsonFormatVisitorWrapper22, javaType23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<java.lang.Object> objClass1 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        java.lang.Throwable throwable3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer4.unwrappingSerializer(nameTransformer6);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer9.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer9.unwrappingSerializer(nameTransformer25);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        boolean boolean30 = stdKeySerializer27.isEmpty(serializerProvider28, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer27.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass36 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer27.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer27.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = stdKeySerializer9.isEmpty((java.lang.Object) wildcardClass48);
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer4.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer62.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer54.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass63);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer66 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer66.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer71.getDelegatee();
        java.lang.Class<?> wildcardClass75 = stdKeySerializer71.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer66.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer54.getSchema(serializerProvider65, (java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = stdKeySerializer4.isEmpty(serializerProvider53, (java.lang.Object) stdKeySerializer54);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer4.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider2, throwable3, (java.lang.Object) stdKeySerializer4, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objClass1);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer16.getDelegatee();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer6.getSchema(serializerProvider10, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer0.getSchema(serializerProvider5, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean26 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer29.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer29.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer29.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer29.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        java.lang.Class<?> wildcardClass68 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer59.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass68);
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = stdKeySerializer29.isEmpty((java.lang.Object) wildcardClass68);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = stdKeySerializer29.unwrappingSerializer(nameTransformer72);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer75 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        boolean boolean78 = stdKeySerializer75.isEmpty(serializerProvider76, (java.lang.Object) (short) 1);
        boolean boolean80 = stdKeySerializer75.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass81 = stdKeySerializer75.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer29.getSchema(serializerProvider74, (java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<java.lang.Object> objClass83 = stdKeySerializer29.handledType();
        boolean boolean84 = stdKeySerializer0.isEmpty(serializerProvider28, (java.lang.Object) objClass83);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(objClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        boolean boolean29 = stdKeySerializer0.usesObjectId();
        boolean boolean30 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        java.lang.Throwable throwable32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = objJsonSerializer50.unwrappingSerializer(nameTransformer51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = objJsonSerializer52.unwrappingSerializer(nameTransformer53);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider31, throwable32, (java.lang.Object) objJsonSerializer54, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = stdKeySerializer56.usesObjectId();
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer56.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer69.unwrappingSerializer(nameTransformer75);
        boolean boolean77 = stdKeySerializer56.isEmpty((java.lang.Object) objJsonSerializer76);
        java.lang.Class<?> wildcardClass78 = objJsonSerializer76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode80 = stdKeySerializer12.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass78, false);
        boolean boolean81 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) wildcardClass78);
        boolean boolean82 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(jsonNode80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer29.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer29.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer29.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer29.unwrappingSerializer(nameTransformer45);
        java.lang.Class<?> wildcardClass47 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer0.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass47, false);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass34);
        boolean boolean40 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Throwable throwable42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        boolean boolean46 = stdKeySerializer43.isEmpty(serializerProvider44, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer43.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        java.lang.Class<?> wildcardClass64 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer55.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer43.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass64);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer43.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer71.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer71.getDelegatee();
        java.lang.Class<java.lang.Object> objClass76 = stdKeySerializer71.handledType();
        boolean boolean78 = stdKeySerializer71.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = stdKeySerializer71.unwrappingSerializer(nameTransformer79);
        java.lang.Class<java.lang.Object> objClass81 = stdKeySerializer71.handledType();
        boolean boolean82 = stdKeySerializer43.isEmpty((java.lang.Object) stdKeySerializer71);
        java.lang.Class<?> wildcardClass83 = stdKeySerializer71.getClass();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider41, throwable42, (java.lang.Object) stdKeySerializer71, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNotNull(objClass76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(objClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer19.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer19.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer19.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = stdKeySerializer19.isEmpty((java.lang.Object) wildcardClass58);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer19.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass71 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer19.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass71, false);
        boolean boolean75 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer0.unwrappingSerializer(nameTransformer77);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = objJsonSerializer78.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer44.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass67 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass67, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer44.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        java.lang.reflect.Type type74 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer0.getSchema(serializerProvider73, type74, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer0.unwrappingSerializer(nameTransformer77);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = objJsonSerializer78.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = objJsonSerializer6.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer10.usesObjectId();
        java.lang.Class<java.lang.Object> objClass15 = stdKeySerializer10.handledType();
        java.lang.Class<java.lang.Object> objClass16 = stdKeySerializer10.handledType();
        boolean boolean17 = objJsonSerializer6.isEmpty(serializerProvider9, (java.lang.Object) stdKeySerializer10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objClass15);
        org.junit.Assert.assertNotNull(objClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass21 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode37 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer22.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        boolean boolean43 = stdKeySerializer40.isEmpty(serializerProvider41, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer45 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = stdKeySerializer40.unwrappingSerializer(nameTransformer45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer57.getDelegatee();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer57.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.JsonNode jsonNode63 = stdKeySerializer40.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = stdKeySerializer22.isEmpty((java.lang.Object) wildcardClass61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer22.unwrappingSerializer(nameTransformer65);
        boolean boolean67 = stdKeySerializer22.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer22.unwrappingSerializer(nameTransformer68);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = objJsonSerializer69.unwrappingSerializer(nameTransformer70);
        boolean boolean72 = objJsonSerializer69.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = objJsonSerializer69.unwrappingSerializer(nameTransformer73);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = stdKeySerializer0.replaceDelegatee(objJsonSerializer69);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objClass21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = stdKeySerializer0.unwrappingSerializer(nameTransformer90);
        boolean boolean92 = objJsonSerializer91.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        boolean boolean13 = stdKeySerializer8.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        boolean boolean20 = stdKeySerializer15.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass21 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass21, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        java.lang.Class<?> wildcardClass29 = stdKeySerializer25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer8.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer32.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer32.unwrappingSerializer(nameTransformer48);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = stdKeySerializer32.isEmpty((java.lang.Object) wildcardClass71);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer32.unwrappingSerializer(nameTransformer75);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer32.unwrappingSerializer(nameTransformer77);
        boolean boolean79 = objJsonSerializer78.isUnwrappingSerializer();
        boolean boolean80 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer78);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer7.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer43.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = stdKeySerializer35.usesObjectId();
        java.lang.Class<java.lang.Object> objClass47 = stdKeySerializer35.handledType();
        boolean boolean48 = stdKeySerializer35.isUnwrappingSerializer();
        boolean boolean50 = stdKeySerializer35.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer52.unwrappingSerializer(nameTransformer54);
        java.lang.Class<java.lang.Object> objClass56 = stdKeySerializer52.handledType();
        boolean boolean57 = stdKeySerializer35.isEmpty(serializerProvider51, (java.lang.Object) objClass56);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer7.getSchema(serializerProvider34, (java.lang.reflect.Type) objClass56, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer64.getDelegatee();
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer64.handledType();
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer64.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer61.getSchema(serializerProvider63, (java.lang.reflect.Type) objClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer7.getSchema(serializerProvider60, (java.lang.reflect.Type) objClass69);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper72 = null;
        com.fasterxml.jackson.databind.JavaType javaType73 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.acceptJsonFormatVisitor(jsonFormatVisitorWrapper72, javaType73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(objClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertNotNull(objClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(jsonNode71);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        boolean boolean22 = stdKeySerializer0.isEmpty((java.lang.Object) (-1.0d));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Throwable throwable24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        boolean boolean39 = stdKeySerializer34.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        boolean boolean44 = stdKeySerializer41.isEmpty(serializerProvider42, (java.lang.Object) (short) 1);
        boolean boolean46 = stdKeySerializer41.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass47 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass47, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer34.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer25.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<java.lang.Object> objClass58 = stdKeySerializer25.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider23, throwable24, (java.lang.Object) stdKeySerializer25, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objClass58);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer13.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass22 = stdKeySerializer21.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer13.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer13.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass40 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer31.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass40);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer43 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer43.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        java.lang.Class<?> wildcardClass52 = stdKeySerializer48.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer43.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer31.getSchema(serializerProvider42, (java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = stdKeySerializer13.isEmpty((java.lang.Object) wildcardClass52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer57.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer57.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass66 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer57.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = stdKeySerializer57.usesObjectId();
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer57.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        boolean boolean73 = stdKeySerializer70.isEmpty(serializerProvider71, (java.lang.Object) (short) 1);
        boolean boolean75 = stdKeySerializer70.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer70.unwrappingSerializer(nameTransformer76);
        boolean boolean78 = stdKeySerializer57.isEmpty((java.lang.Object) objJsonSerializer77);
        java.lang.Class<?> wildcardClass79 = objJsonSerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer13.getSchema(serializerProvider56, (java.lang.reflect.Type) wildcardClass79, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer13.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer0.getSchema(serializerProvider12, (java.lang.reflect.Type) objClass82);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper84 = null;
        com.fasterxml.jackson.databind.JavaType javaType85 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper84, javaType85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objClass69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        boolean boolean33 = stdKeySerializer7.isEmpty((java.lang.Object) (short) 1);
        java.lang.Class<java.lang.Object> objClass34 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        java.lang.Throwable throwable36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        boolean boolean42 = stdKeySerializer37.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer37.unwrappingSerializer(nameTransformer43);
        java.lang.Class<java.lang.Object> objClass45 = stdKeySerializer37.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        boolean boolean52 = stdKeySerializer47.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass60 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer47.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass60, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer37.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass60, true);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer7.wrapAndThrow(serializerProvider35, throwable36, (java.lang.Object) jsonNode64, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objClass34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(objClass45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(jsonNode64);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        boolean boolean22 = stdKeySerializer19.isEmpty(serializerProvider20, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer19.unwrappingSerializer(nameTransformer24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer19.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer19.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = stdKeySerializer19.isEmpty((java.lang.Object) wildcardClass58);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = stdKeySerializer19.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass71 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer19.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer0.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass71, false);
        boolean boolean75 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer0.unwrappingSerializer(nameTransformer77);
        java.lang.Class<?> wildcardClass79 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper11 = null;
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper11, javaType12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNotNull(objClass10);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Throwable throwable22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass36, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer23.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = objJsonSerializer40.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = objJsonSerializer42.unwrappingSerializer(nameTransformer43);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider21, throwable22, (java.lang.Object) objJsonSerializer44, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer7.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer25.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer25.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer25.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = stdKeySerializer7.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        boolean boolean56 = stdKeySerializer51.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer51.unwrappingSerializer(nameTransformer57);
        java.lang.Class<java.lang.Object> objClass59 = stdKeySerializer51.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        boolean boolean71 = stdKeySerializer68.isEmpty(serializerProvider69, (java.lang.Object) (short) 1);
        boolean boolean73 = stdKeySerializer68.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass74 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer61.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass74, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer51.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer7.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.JsonNode jsonNode81 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) wildcardClass74, false);
        java.lang.Class<java.lang.Object> objClass82 = stdKeySerializer0.handledType();
        boolean boolean83 = stdKeySerializer0.usesObjectId();
        boolean boolean84 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(objClass59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(jsonNode81);
        org.junit.Assert.assertNotNull(objClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer29.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer29.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = stdKeySerializer29.usesObjectId();
        java.lang.Class<java.lang.Object> objClass41 = stdKeySerializer29.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        boolean boolean47 = stdKeySerializer42.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer48 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = stdKeySerializer42.unwrappingSerializer(nameTransformer48);
        boolean boolean50 = stdKeySerializer29.isEmpty((java.lang.Object) objJsonSerializer49);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer29.getDelegatee();
        boolean boolean52 = stdKeySerializer0.isEmpty(serializerProvider28, (java.lang.Object) stdKeySerializer29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.reflect.Type type54 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer29.getSchema(serializerProvider53, type54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objClass41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jsonNode55);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer13.getDelegatee();
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer13.handledType();
        boolean boolean19 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) stdKeySerializer13);
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer0.handledType();
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper22 = null;
        com.fasterxml.jackson.databind.JavaType javaType23 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper22, javaType23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer29 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = stdKeySerializer24.unwrappingSerializer(nameTransformer29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer32.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer24.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass45);
        boolean boolean48 = stdKeySerializer6.isEmpty((java.lang.Object) wildcardClass45);
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer6.handledType();
        boolean boolean50 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer6);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Throwable throwable27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        boolean boolean33 = stdKeySerializer28.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer34.unwrappingSerializer(nameTransformer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        boolean boolean56 = stdKeySerializer53.isEmpty(serializerProvider54, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        java.lang.Class<?> wildcardClass62 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode64 = stdKeySerializer53.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass62, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer34.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass62, false);
        boolean boolean67 = stdKeySerializer28.isEmpty((java.lang.Object) wildcardClass62);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider26, throwable27, (java.lang.Object) wildcardClass62, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(jsonNode64);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        boolean boolean46 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass47 = stdKeySerializer0.handledType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objClass47);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        boolean boolean9 = stdKeySerializer6.isEmpty(serializerProvider7, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = stdKeySerializer6.unwrappingSerializer(nameTransformer11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass15 = stdKeySerializer14.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer6.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer6.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = stdKeySerializer6.unwrappingSerializer(nameTransformer22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        boolean boolean28 = stdKeySerializer25.isEmpty(serializerProvider26, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        java.lang.Class<?> wildcardClass34 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer6.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass34, false);
        boolean boolean39 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass34);
        boolean boolean40 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass41 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = null;
        java.lang.Throwable throwable43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        java.lang.Class<java.lang.Object> objClass49 = stdKeySerializer44.handledType();
        boolean boolean51 = stdKeySerializer44.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer44.unwrappingSerializer(nameTransformer52);
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer44.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider42, throwable43, (java.lang.Object) stdKeySerializer44, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objClass41);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objClass54);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        boolean boolean14 = stdKeySerializer11.isEmpty(serializerProvider12, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer11.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass20 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode21 = stdKeySerializer11.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = stdKeySerializer6.isEmpty((java.lang.Object) jsonNode21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        java.lang.Class<java.lang.Object> objClass28 = stdKeySerializer23.handledType();
        boolean boolean30 = stdKeySerializer23.isEmpty((java.lang.Object) 0);
        boolean boolean31 = stdKeySerializer6.isEmpty((java.lang.Object) boolean30);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer44.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer44.unwrappingSerializer(nameTransformer60);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer62.unwrappingSerializer(nameTransformer67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer74 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer74.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer79.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer79.getDelegatee();
        java.lang.Class<?> wildcardClass83 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer74.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass83);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer62.getSchema(serializerProvider73, (java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = stdKeySerializer44.isEmpty((java.lang.Object) wildcardClass83);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = stdKeySerializer44.unwrappingSerializer(nameTransformer87);
        boolean boolean89 = stdKeySerializer32.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean90 = stdKeySerializer6.isEmpty((java.lang.Object) stdKeySerializer44);
        boolean boolean91 = stdKeySerializer0.isEmpty(serializerProvider5, (java.lang.Object) stdKeySerializer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider92 = null;
        boolean boolean94 = stdKeySerializer0.isEmpty(serializerProvider92, (java.lang.Object) 100);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer95 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer96 = stdKeySerializer0.unwrappingSerializer(nameTransformer95);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = objJsonSerializer96.unwrappingSerializer(nameTransformer97);
        boolean boolean99 = objJsonSerializer96.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(jsonNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer96);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer24.isEmpty(serializerProvider25, (java.lang.Object) (short) 1);
        boolean boolean29 = stdKeySerializer24.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass30 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = objJsonSerializer10.isEmpty(serializerProvider11, (java.lang.Object) jsonNode31);
        java.lang.Class<?> wildcardClass33 = objJsonSerializer10.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer13.usesObjectId();
        boolean boolean18 = stdKeySerializer13.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer13.getDelegatee();
        boolean boolean20 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer19);
        boolean boolean21 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        boolean boolean25 = stdKeySerializer22.isUnwrappingSerializer();
        java.lang.Class<java.lang.Object> objClass26 = stdKeySerializer22.handledType();
        boolean boolean27 = stdKeySerializer22.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21, true);
        boolean boolean26 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) stdKeySerializer7);
        boolean boolean27 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode54 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = stdKeySerializer44.usesObjectId();
        java.lang.Class<java.lang.Object> objClass56 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer57 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        boolean boolean60 = stdKeySerializer57.isEmpty(serializerProvider58, (java.lang.Object) (short) 1);
        boolean boolean62 = stdKeySerializer57.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer57.unwrappingSerializer(nameTransformer63);
        boolean boolean65 = stdKeySerializer44.isEmpty((java.lang.Object) objJsonSerializer64);
        java.lang.Class<?> wildcardClass66 = objJsonSerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass66, false);
        java.lang.Class<java.lang.Object> objClass69 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper71 = null;
        com.fasterxml.jackson.databind.JavaType javaType72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper71, javaType72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objClass56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertNotNull(objClass69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        boolean boolean5 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode14 = stdKeySerializer0.getSchema(serializerProvider6, (java.lang.reflect.Type) objClass12, true);
        java.lang.Class<?> wildcardClass15 = jsonNode14.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertNotNull(jsonNode14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        java.lang.Class<java.lang.Object> objClass4 = stdKeySerializer0.handledType();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean6 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        boolean boolean6 = stdKeySerializer3.isEmpty(serializerProvider4, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer3.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer27 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer27.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer27.getDelegatee();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer27.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider26, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = objJsonSerializer9.isEmpty((java.lang.Object) stdKeySerializer10);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer10.unwrappingSerializer(nameTransformer35);
        boolean boolean37 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer36);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = objJsonSerializer36.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean5 = stdKeySerializer0.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = stdKeySerializer0.unwrappingSerializer(nameTransformer6);
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer9 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = stdKeySerializer0.unwrappingSerializer(nameTransformer9);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = objJsonSerializer10.unwrappingSerializer(nameTransformer11);
        boolean boolean13 = objJsonSerializer10.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = objJsonSerializer10.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = objJsonSerializer10.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer0.getDelegatee();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = wildcardJsonSerializer58.isUnwrappingSerializer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = stdKeySerializer37.unwrappingSerializer(nameTransformer42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer54.getDelegatee();
        java.lang.Class<?> wildcardClass58 = stdKeySerializer54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass58);
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = objJsonSerializer36.isEmpty((java.lang.Object) stdKeySerializer37);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer62 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = objJsonSerializer36.unwrappingSerializer(nameTransformer62);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider65 = null;
        boolean boolean67 = stdKeySerializer64.isEmpty(serializerProvider65, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer64.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = stdKeySerializer64.unwrappingSerializer(nameTransformer69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass73 = stdKeySerializer72.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer64.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass73);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer64.getSchema(serializerProvider75, (java.lang.reflect.Type) wildcardClass77, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer80 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = stdKeySerializer64.unwrappingSerializer(nameTransformer80);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer86 = stdKeySerializer82.getDelegatee();
        java.lang.Class<java.lang.Object> objClass87 = stdKeySerializer82.handledType();
        boolean boolean89 = stdKeySerializer82.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = stdKeySerializer82.getDelegatee();
        boolean boolean91 = stdKeySerializer64.isEmpty((java.lang.Object) stdKeySerializer82);
        boolean boolean92 = objJsonSerializer63.isEmpty((java.lang.Object) stdKeySerializer64);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer93 = objJsonSerializer63.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator94 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) wildcardJsonSerializer93, jsonGenerator94, serializerProvider95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNull(wildcardJsonSerializer86);
        org.junit.Assert.assertNotNull(objClass87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer93);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = stdKeySerializer0.unwrappingSerializer(nameTransformer90);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer92 = stdKeySerializer0.getDelegatee();
        java.lang.Class<?> wildcardClass93 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
        org.junit.Assert.assertNull(wildcardJsonSerializer92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        boolean boolean24 = stdKeySerializer22.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        boolean boolean27 = stdKeySerializer22.isEmpty(serializerProvider25, (java.lang.Object) 1L);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer34.getDelegatee();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer29.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer22.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer0.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass38);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        boolean boolean45 = stdKeySerializer42.isEmpty(serializerProvider43, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer47 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = stdKeySerializer42.unwrappingSerializer(nameTransformer47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer42.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass55, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = stdKeySerializer42.unwrappingSerializer(nameTransformer58);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = stdKeySerializer42.isEmpty((java.lang.Object) wildcardClass81);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer85 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = stdKeySerializer42.unwrappingSerializer(nameTransformer85);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer88 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider89 = null;
        boolean boolean91 = stdKeySerializer88.isEmpty(serializerProvider89, (java.lang.Object) (short) 1);
        boolean boolean93 = stdKeySerializer88.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass94 = stdKeySerializer88.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode95 = stdKeySerializer42.getSchema(serializerProvider87, (java.lang.reflect.Type) wildcardClass94);
        java.lang.Class<java.lang.Object> objClass96 = stdKeySerializer42.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = stdKeySerializer42.unwrappingSerializer(nameTransformer97);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer99 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(jsonNode95);
        org.junit.Assert.assertNotNull(objClass96);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer5.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer5.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = stdKeySerializer5.isEmpty((java.lang.Object) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        boolean boolean53 = stdKeySerializer50.isEmpty(serializerProvider51, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer50.unwrappingSerializer(nameTransformer55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer58.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider57, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer62.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer67 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer67.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer67.getDelegatee();
        java.lang.Class<?> wildcardClass71 = stdKeySerializer67.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer62.getSchema(serializerProvider66, (java.lang.reflect.Type) wildcardClass71);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer50.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider49, (java.lang.Object) stdKeySerializer50);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider75 = null;
        java.lang.Throwable throwable76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        boolean boolean80 = stdKeySerializer77.isEmpty(serializerProvider78, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer82 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer83 = stdKeySerializer77.unwrappingSerializer(nameTransformer82);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider84 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer85 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass86 = stdKeySerializer85.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer77.getSchema(serializerProvider84, (java.lang.reflect.Type) wildcardClass86);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider88 = null;
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer77.getSchema(serializerProvider88, (java.lang.reflect.Type) wildcardClass90, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer93 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer94 = stdKeySerializer77.unwrappingSerializer(nameTransformer93);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer95 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer96 = objJsonSerializer94.unwrappingSerializer(nameTransformer95);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer50.wrapAndThrow(serializerProvider75, throwable76, (java.lang.Object) nameTransformer95, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(objJsonSerializer83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertNotNull(objJsonSerializer94);
        org.junit.Assert.assertNotNull(objJsonSerializer96);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer17.getDelegatee();
        java.lang.Class<java.lang.Object> objClass22 = stdKeySerializer17.handledType();
        boolean boolean24 = stdKeySerializer17.isEmpty((java.lang.Object) 0);
        boolean boolean25 = stdKeySerializer0.isEmpty((java.lang.Object) boolean24);
        boolean boolean26 = stdKeySerializer0.usesObjectId();
        boolean boolean27 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        boolean boolean10 = stdKeySerializer7.isEmpty(serializerProvider8, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer7.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass16 = stdKeySerializer15.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode17 = stdKeySerializer7.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass16);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        java.lang.Class<?> wildcardClass28 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer19.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass28);
        com.fasterxml.jackson.databind.JsonNode jsonNode30 = stdKeySerializer7.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode77 = stdKeySerializer7.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass72, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = stdKeySerializer7.unwrappingSerializer(nameTransformer78);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer80 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = objJsonSerializer79.unwrappingSerializer(nameTransformer80);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        boolean boolean85 = stdKeySerializer82.isEmpty(serializerProvider83, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator86 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer79.serializeWithType((java.lang.Object) (short) 1, jsonGenerator86, serializerProvider87, typeSerializer88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jsonNode77);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer41.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = objJsonSerializer53.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = objJsonSerializer53.unwrappingSerializer(nameTransformer56);
        java.lang.Class<?> wildcardClass58 = objJsonSerializer57.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer7.getDelegatee();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer7.handledType();
        boolean boolean14 = stdKeySerializer7.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer7.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        boolean boolean25 = objJsonSerializer24.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        boolean boolean29 = stdKeySerializer26.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer55.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer55.getDelegatee();
        java.lang.Class<?> wildcardClass59 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode60 = stdKeySerializer50.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass59);
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = objJsonSerializer37.isEmpty((java.lang.Object) stdKeySerializer38);
        java.lang.Class<?> wildcardClass63 = objJsonSerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass63, true);
        boolean boolean66 = objJsonSerializer24.isEmpty((java.lang.Object) jsonNode65);
        boolean boolean67 = objJsonSerializer16.isEmpty(serializerProvider17, (java.lang.Object) boolean66);
        boolean boolean68 = objJsonSerializer6.isEmpty((java.lang.Object) objJsonSerializer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer69.getDelegatee();
        boolean boolean72 = stdKeySerializer69.isUnwrappingSerializer();
        boolean boolean73 = objJsonSerializer6.isEmpty((java.lang.Object) stdKeySerializer69);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer69.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer76 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer77 = stdKeySerializer76.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider79 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer69.serialize((java.lang.Object) stdKeySerializer76, jsonGenerator78, serializerProvider79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(jsonNode60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer77);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        boolean boolean13 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        boolean boolean18 = stdKeySerializer15.isEmpty(serializerProvider16, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer15.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = stdKeySerializer15.unwrappingSerializer(nameTransformer20);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer22.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass31 = stdKeySerializer30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer22.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer22.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = objJsonSerializer21.isEmpty((java.lang.Object) stdKeySerializer22);
        boolean boolean48 = stdKeySerializer22.isEmpty((java.lang.Object) (short) 1);
        java.lang.Class<?> wildcardClass49 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer0.getSchema(serializerProvider14, (java.lang.reflect.Type) wildcardClass49, true);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode51);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        boolean boolean9 = stdKeySerializer4.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer10.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        boolean boolean32 = stdKeySerializer29.isEmpty(serializerProvider30, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer34.getDelegatee();
        java.lang.Class<?> wildcardClass38 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer29.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass38, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer10.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass38, false);
        boolean boolean43 = stdKeySerializer4.isEmpty((java.lang.Object) wildcardClass38);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider3, (java.lang.Object) wildcardClass38);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer13.unwrappingSerializer(nameTransformer19);
        boolean boolean21 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        boolean boolean28 = stdKeySerializer0.isEmpty(serializerProvider22, (java.lang.Object) wildcardJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer21.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer21.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass34, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer37 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = stdKeySerializer21.unwrappingSerializer(nameTransformer37);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer39.unwrappingSerializer(nameTransformer44);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass48 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer39.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer57 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer56.getDelegatee();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer39.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = stdKeySerializer21.isEmpty((java.lang.Object) wildcardClass60);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = stdKeySerializer21.unwrappingSerializer(nameTransformer64);
        boolean boolean66 = stdKeySerializer21.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer67 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = stdKeySerializer21.unwrappingSerializer(nameTransformer67);
        boolean boolean69 = stdKeySerializer21.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator70 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) stdKeySerializer21, jsonGenerator70, serializerProvider71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = stdKeySerializer12.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer0.isEmpty((java.lang.Object) stdKeySerializer12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        java.lang.Throwable throwable59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        boolean boolean65 = stdKeySerializer60.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer60.unwrappingSerializer(nameTransformer66);
        java.lang.Class<java.lang.Object> objClass68 = stdKeySerializer60.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = stdKeySerializer60.unwrappingSerializer(nameTransformer69);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer12.wrapAndThrow(serializerProvider58, throwable59, (java.lang.Object) stdKeySerializer60, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(objClass68);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<java.lang.Object> objClass11 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(objClass11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        boolean boolean3 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer24.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer29.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer29.getDelegatee();
        java.lang.Class<?> wildcardClass33 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode34 = stdKeySerializer24.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass33);
        com.fasterxml.jackson.databind.JsonNode jsonNode35 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = objJsonSerializer11.isEmpty((java.lang.Object) stdKeySerializer12);
        java.lang.Class<?> wildcardClass37 = objJsonSerializer11.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode39 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass37, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer41.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer41.getDelegatee();
        java.lang.Class<java.lang.Object> objClass46 = stdKeySerializer41.handledType();
        boolean boolean48 = stdKeySerializer41.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer41.unwrappingSerializer(nameTransformer49);
        boolean boolean51 = stdKeySerializer0.isEmpty(serializerProvider40, (java.lang.Object) stdKeySerializer41);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer41.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = objJsonSerializer53.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = objJsonSerializer55.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = objJsonSerializer57.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(jsonNode34);
        org.junit.Assert.assertNotNull(jsonNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode39);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(objClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer7.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer7.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21, true);
        boolean boolean26 = stdKeySerializer0.isEmpty(serializerProvider6, (java.lang.Object) stdKeySerializer7);
        boolean boolean27 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = objJsonSerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = objJsonSerializer31.unwrappingSerializer(nameTransformer33);
        boolean boolean36 = objJsonSerializer31.isEmpty((java.lang.Object) true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        boolean boolean52 = stdKeySerializer49.isEmpty(serializerProvider50, (java.lang.Object) (short) 1);
        boolean boolean54 = stdKeySerializer49.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass55 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer37.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer58.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer63.unwrappingSerializer(nameTransformer68);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer71 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer71.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider70, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = stdKeySerializer58.isEmpty((java.lang.Object) jsonNode73);
        boolean boolean75 = stdKeySerializer37.isEmpty(serializerProvider57, (java.lang.Object) boolean74);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer37.unwrappingSerializer(nameTransformer76);
        boolean boolean78 = objJsonSerializer31.isEmpty((java.lang.Object) objJsonSerializer77);
        boolean boolean79 = stdKeySerializer0.isEmpty((java.lang.Object) boolean78);
        boolean boolean80 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        boolean boolean29 = stdKeySerializer26.isEmpty(serializerProvider27, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer31 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = stdKeySerializer26.unwrappingSerializer(nameTransformer31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer21.isEmpty((java.lang.Object) jsonNode36);
        boolean boolean38 = stdKeySerializer0.isEmpty(serializerProvider20, (java.lang.Object) boolean37);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer0.unwrappingSerializer(nameTransformer39);
        boolean boolean41 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper18 = null;
        com.fasterxml.jackson.databind.JavaType javaType19 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper18, javaType19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider2 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer3.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer3.getDelegatee();
        java.lang.Class<java.lang.Object> objClass7 = stdKeySerializer3.handledType();
        java.lang.Class<java.lang.Object> objClass8 = stdKeySerializer3.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode9 = stdKeySerializer0.getSchema(serializerProvider2, (java.lang.reflect.Type) objClass8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer11.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer24 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass25 = stdKeySerializer24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode26 = stdKeySerializer16.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer16.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass29, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = stdKeySerializer16.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer34 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        boolean boolean37 = stdKeySerializer34.isEmpty(serializerProvider35, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer34.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = stdKeySerializer34.unwrappingSerializer(nameTransformer39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass43 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer34.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer46.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer51.getDelegatee();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer51.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode56 = stdKeySerializer46.getSchema(serializerProvider50, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer34.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = stdKeySerializer16.isEmpty((java.lang.Object) wildcardClass55);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass55);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        java.lang.Class<?> wildcardClass82 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer73.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass82);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer61.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = stdKeySerializer11.isEmpty(serializerProvider60, (java.lang.Object) stdKeySerializer61);
        java.lang.Class<java.lang.Object> objClass86 = stdKeySerializer11.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer0.getSchema(serializerProvider10, (java.lang.reflect.Type) objClass86, false);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objClass7);
        org.junit.Assert.assertNotNull(objClass8);
        org.junit.Assert.assertNotNull(jsonNode9);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(jsonNode56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objClass86);
        org.junit.Assert.assertNotNull(jsonNode88);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer21.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer29 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer29.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider28, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer38.getDelegatee();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.JsonNode jsonNode44 = stdKeySerializer21.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = objJsonSerializer20.isEmpty((java.lang.Object) stdKeySerializer21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        boolean boolean50 = stdKeySerializer47.isEmpty(serializerProvider48, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer47.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer55 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer55.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider54, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = stdKeySerializer47.unwrappingSerializer(nameTransformer63);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = stdKeySerializer65.unwrappingSerializer(nameTransformer70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode75 = stdKeySerializer65.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass74);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer85 = stdKeySerializer82.getDelegatee();
        java.lang.Class<?> wildcardClass86 = stdKeySerializer82.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer77.getSchema(serializerProvider81, (java.lang.reflect.Type) wildcardClass86);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer65.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass86);
        boolean boolean89 = stdKeySerializer47.isEmpty((java.lang.Object) wildcardClass86);
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer21.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass86, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer92 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer21.unwrappingSerializer(nameTransformer92);
        java.lang.Class<java.lang.Object> objClass94 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode96 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) objClass94, false);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = stdKeySerializer0.unwrappingSerializer(nameTransformer97);
        boolean boolean99 = objJsonSerializer98.isUnwrappingSerializer();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(jsonNode44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertNull(wildcardJsonSerializer85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(objClass94);
        org.junit.Assert.assertNotNull(jsonNode96);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass12 = stdKeySerializer0.handledType();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        boolean boolean15 = stdKeySerializer0.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        boolean boolean18 = stdKeySerializer0.isUnwrappingSerializer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer25.unwrappingSerializer(nameTransformer27);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = objJsonSerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = objJsonSerializer28.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer32 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = objJsonSerializer31.unwrappingSerializer(nameTransformer32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer41 = stdKeySerializer35.unwrappingSerializer(nameTransformer40);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer42 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = objJsonSerializer41.unwrappingSerializer(nameTransformer42);
        boolean boolean44 = objJsonSerializer31.isEmpty(serializerProvider34, (java.lang.Object) objJsonSerializer41);
        boolean boolean45 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) objJsonSerializer41);
        boolean boolean46 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        java.lang.Class<?> wildcardClass56 = stdKeySerializer52.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer47.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        boolean boolean62 = stdKeySerializer59.isEmpty(serializerProvider60, (java.lang.Object) (short) 1);
        boolean boolean64 = stdKeySerializer59.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass65 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer47.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer47.getDelegatee();
        boolean boolean69 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNotNull(objJsonSerializer41);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        boolean boolean13 = stdKeySerializer0.isUnwrappingSerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer0.getClass();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider3 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer5 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer4.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer4.getDelegatee();
        java.lang.Class<java.lang.Object> objClass9 = stdKeySerializer4.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider3, (java.lang.reflect.Type) objClass9, true);
        boolean boolean12 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer13.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer13.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = objJsonSerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer16.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer20.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer20.getDelegatee();
        java.lang.Class<java.lang.Object> objClass25 = stdKeySerializer20.handledType();
        boolean boolean27 = stdKeySerializer20.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer20.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer36 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = stdKeySerializer31.unwrappingSerializer(nameTransformer36);
        boolean boolean38 = objJsonSerializer37.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        boolean boolean42 = stdKeySerializer39.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = objJsonSerializer50.isEmpty((java.lang.Object) stdKeySerializer51);
        java.lang.Class<?> wildcardClass76 = objJsonSerializer50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass76, true);
        boolean boolean79 = objJsonSerializer37.isEmpty((java.lang.Object) jsonNode78);
        boolean boolean80 = objJsonSerializer29.isEmpty(serializerProvider30, (java.lang.Object) boolean79);
        boolean boolean81 = objJsonSerializer19.isEmpty((java.lang.Object) objJsonSerializer29);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer82 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = stdKeySerializer82.getDelegatee();
        boolean boolean85 = stdKeySerializer82.isUnwrappingSerializer();
        boolean boolean86 = objJsonSerializer19.isEmpty((java.lang.Object) stdKeySerializer82);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer88 = stdKeySerializer82.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator89 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider90 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) wildcardJsonSerializer88, jsonGenerator89, serializerProvider90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer5);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(objClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNotNull(objClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer83);
        org.junit.Assert.assertNull(wildcardJsonSerializer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNull(wildcardJsonSerializer88);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        java.lang.Class<java.lang.Object> objClass18 = stdKeySerializer0.handledType();
        java.lang.Object obj19 = null;
        boolean boolean20 = stdKeySerializer0.isEmpty(obj19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.reflect.Type type22 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider21, type22);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(jsonNode23);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        boolean boolean49 = stdKeySerializer44.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer50 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = stdKeySerializer44.unwrappingSerializer(nameTransformer50);
        java.lang.Class<java.lang.Object> objClass52 = stdKeySerializer44.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        boolean boolean59 = stdKeySerializer54.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        boolean boolean66 = stdKeySerializer61.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass67 = stdKeySerializer61.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode69 = stdKeySerializer54.getSchema(serializerProvider60, (java.lang.reflect.Type) wildcardClass67, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer44.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass67, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer0.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass67);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        java.lang.reflect.Type type74 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer0.getSchema(serializerProvider73, type74, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = stdKeySerializer0.unwrappingSerializer(nameTransformer77);
        boolean boolean80 = objJsonSerializer78.isEmpty((java.lang.Object) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(objClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(jsonNode69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNotNull(jsonNode72);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.reflect.Type type25 = null;
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, type25, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer28.handledType();
        boolean boolean35 = stdKeySerializer28.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer38.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer38.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass47 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer38.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer38.getSchema(serializerProvider49, (java.lang.reflect.Type) wildcardClass51, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = stdKeySerializer38.unwrappingSerializer(nameTransformer54);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer56.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer64 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass65 = stdKeySerializer64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode66 = stdKeySerializer56.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        java.lang.Class<?> wildcardClass77 = stdKeySerializer73.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer68.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass77);
        com.fasterxml.jackson.databind.JsonNode jsonNode79 = stdKeySerializer56.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = stdKeySerializer38.isEmpty((java.lang.Object) wildcardClass77);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer81 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = stdKeySerializer38.unwrappingSerializer(nameTransformer81);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider83 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer84 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider85 = null;
        boolean boolean87 = stdKeySerializer84.isEmpty(serializerProvider85, (java.lang.Object) (short) 1);
        boolean boolean89 = stdKeySerializer84.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass90 = stdKeySerializer84.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode91 = stdKeySerializer38.getSchema(serializerProvider83, (java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = stdKeySerializer28.isEmpty(serializerProvider37, (java.lang.Object) serializerProvider83);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(jsonNode78);
        org.junit.Assert.assertNotNull(jsonNode79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(jsonNode91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = objJsonSerializer3.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = objJsonSerializer3.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = objJsonSerializer6.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = objJsonSerializer6.isEmpty(serializerProvider9, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = stdKeySerializer12.unwrappingSerializer(nameTransformer17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer12.getSchema(serializerProvider23, (java.lang.reflect.Type) wildcardClass25, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer12.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer47 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer47.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer47.getDelegatee();
        java.lang.Class<?> wildcardClass51 = stdKeySerializer47.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer42.getSchema(serializerProvider46, (java.lang.reflect.Type) wildcardClass51);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass51);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        boolean boolean59 = stdKeySerializer56.isEmpty(serializerProvider57, (java.lang.Object) (short) 1);
        boolean boolean61 = stdKeySerializer56.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        boolean boolean66 = stdKeySerializer63.isEmpty(serializerProvider64, (java.lang.Object) (short) 1);
        boolean boolean68 = stdKeySerializer63.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass69 = stdKeySerializer63.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer56.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass69, false);
        boolean boolean72 = stdKeySerializer12.isEmpty(serializerProvider55, (java.lang.Object) stdKeySerializer56);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = stdKeySerializer56.unwrappingSerializer(nameTransformer73);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer56.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer78 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer6.serializeWithType((java.lang.Object) stdKeySerializer56, jsonGenerator76, serializerProvider77, typeSerializer78);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.isUnwrappingSerializer();
        boolean boolean8 = objJsonSerializer6.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer9.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer14 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = stdKeySerializer9.unwrappingSerializer(nameTransformer14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass18 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer9.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer21.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer21.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer9.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer9.getSchema(serializerProvider33, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer9.usesObjectId();
        boolean boolean38 = stdKeySerializer9.usesObjectId();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer6.serializeWithType((java.lang.Object) boolean38, jsonGenerator39, serializerProvider40, typeSerializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        boolean boolean46 = stdKeySerializer0.usesObjectId();
        boolean boolean47 = stdKeySerializer0.usesObjectId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = null;
        boolean boolean24 = stdKeySerializer21.isEmpty(serializerProvider22, (java.lang.Object) (short) 1);
        boolean boolean26 = stdKeySerializer21.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = stdKeySerializer21.unwrappingSerializer(nameTransformer27);
        java.lang.Class<java.lang.Object> objClass29 = stdKeySerializer21.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        boolean boolean34 = stdKeySerializer31.isEmpty(serializerProvider32, (java.lang.Object) (short) 1);
        boolean boolean36 = stdKeySerializer31.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        boolean boolean41 = stdKeySerializer38.isEmpty(serializerProvider39, (java.lang.Object) (short) 1);
        boolean boolean43 = stdKeySerializer38.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass44 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer31.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer21.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass44, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer0.getSchema(serializerProvider20, (java.lang.reflect.Type) wildcardClass44, false);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        boolean boolean58 = objJsonSerializer57.usesObjectId();
        boolean boolean59 = stdKeySerializer0.isEmpty((java.lang.Object) objJsonSerializer57);
        java.lang.Class<java.lang.Object> objClass60 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = stdKeySerializer0.unwrappingSerializer(nameTransformer61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        java.lang.Throwable throwable64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        boolean boolean70 = stdKeySerializer65.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = stdKeySerializer65.unwrappingSerializer(nameTransformer71);
        java.lang.Class<java.lang.Object> objClass73 = stdKeySerializer65.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider63, throwable64, (java.lang.Object) objClass73, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer28);
        org.junit.Assert.assertNotNull(objClass29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objClass60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNotNull(objClass73);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer5.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer13.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer5.getSchema(serializerProvider12, (java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = stdKeySerializer0.isEmpty((java.lang.Object) jsonNode15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        boolean boolean39 = stdKeySerializer36.isEmpty(serializerProvider37, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer36.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer41 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = stdKeySerializer36.unwrappingSerializer(nameTransformer41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass45 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer36.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass45);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer49 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer53 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer53.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer53.getDelegatee();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer53.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider52, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.JsonNode jsonNode59 = stdKeySerializer36.getSchema(serializerProvider47, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = stdKeySerializer18.isEmpty((java.lang.Object) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer62 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        boolean boolean65 = stdKeySerializer62.isEmpty(serializerProvider63, (java.lang.Object) (short) 1);
        boolean boolean67 = stdKeySerializer62.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer68 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer69 = stdKeySerializer62.unwrappingSerializer(nameTransformer68);
        java.lang.Class<java.lang.Object> objClass70 = stdKeySerializer62.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = null;
        boolean boolean75 = stdKeySerializer72.isEmpty(serializerProvider73, (java.lang.Object) (short) 1);
        boolean boolean77 = stdKeySerializer72.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode87 = stdKeySerializer72.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer62.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass85, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode90 = stdKeySerializer18.getSchema(serializerProvider61, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode92 = stdKeySerializer0.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass85, true);
        boolean boolean93 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer94 = stdKeySerializer0.getDelegatee();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertNull(wildcardJsonSerializer49);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNotNull(jsonNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer69);
        org.junit.Assert.assertNotNull(objClass70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode87);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(jsonNode90);
        org.junit.Assert.assertNotNull(jsonNode92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer94);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider8 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer9 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        boolean boolean12 = stdKeySerializer9.isEmpty(serializerProvider10, (java.lang.Object) (short) 1);
        boolean boolean14 = stdKeySerializer9.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        boolean boolean21 = stdKeySerializer16.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass22 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer9.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass22, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        java.lang.Class<?> wildcardClass30 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode31 = stdKeySerializer9.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass30);
        com.fasterxml.jackson.databind.JsonNode jsonNode32 = stdKeySerializer0.getSchema(serializerProvider8, (java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<java.lang.Object> objClass33 = stdKeySerializer0.handledType();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer0.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        boolean boolean39 = stdKeySerializer37.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        boolean boolean41 = objJsonSerializer35.isEmpty(serializerProvider36, (java.lang.Object) stdKeySerializer37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonNode32);
        org.junit.Assert.assertNotNull(objClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = stdKeySerializer5.isEmpty((java.lang.Object) jsonNode20);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer23 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer22.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer22.getDelegatee();
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer22.handledType();
        boolean boolean29 = stdKeySerializer22.isEmpty((java.lang.Object) 0);
        boolean boolean30 = stdKeySerializer5.isEmpty((java.lang.Object) boolean29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer35 = stdKeySerializer32.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer39 = stdKeySerializer37.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer37.getDelegatee();
        java.lang.Class<?> wildcardClass41 = stdKeySerializer37.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer32.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer44.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer44.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        boolean boolean55 = stdKeySerializer52.isEmpty(serializerProvider53, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = stdKeySerializer52.unwrappingSerializer(nameTransformer57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass61 = stdKeySerializer60.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode62 = stdKeySerializer52.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass61);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider63 = null;
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer52.getSchema(serializerProvider63, (java.lang.reflect.Type) wildcardClass65, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode68 = stdKeySerializer44.getSchema(serializerProvider51, (java.lang.reflect.Type) wildcardClass65);
        boolean boolean69 = stdKeySerializer32.isEmpty(serializerProvider43, (java.lang.Object) stdKeySerializer44);
        java.lang.Class<?> wildcardClass70 = stdKeySerializer44.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode72 = stdKeySerializer5.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass70, true);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator73 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider74 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            objJsonSerializer4.serializeWithType((java.lang.Object) stdKeySerializer5, jsonGenerator73, serializerProvider74, typeSerializer75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer23);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNull(wildcardJsonSerializer35);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer39);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(jsonNode62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertNotNull(jsonNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode72);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer12.getDelegatee();
        boolean boolean17 = stdKeySerializer12.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass31, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = stdKeySerializer18.unwrappingSerializer(nameTransformer34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer37 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        boolean boolean40 = stdKeySerializer37.isEmpty(serializerProvider38, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer42 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = stdKeySerializer42.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = stdKeySerializer42.getDelegatee();
        java.lang.Class<?> wildcardClass46 = stdKeySerializer42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer37.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer18.getSchema(serializerProvider36, (java.lang.reflect.Type) wildcardClass46, false);
        boolean boolean51 = stdKeySerializer12.isEmpty((java.lang.Object) wildcardClass46);
        com.fasterxml.jackson.databind.JsonNode jsonNode52 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass46);
        boolean boolean53 = stdKeySerializer0.usesObjectId();
        java.lang.Class<java.lang.Object> objClass54 = stdKeySerializer0.handledType();
        java.lang.Class<?> wildcardClass55 = stdKeySerializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jsonNode52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer25 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer25.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer25.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39, true);
        boolean boolean44 = stdKeySerializer0.isEmpty(serializerProvider24, (java.lang.Object) stdKeySerializer25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean50 = stdKeySerializer46.usesObjectId();
        boolean boolean51 = stdKeySerializer46.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer46.getDelegatee();
        java.lang.Class<java.lang.Object> objClass53 = stdKeySerializer46.handledType();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer25.getSchema(serializerProvider45, (java.lang.reflect.Type) objClass53, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        java.lang.Throwable throwable57 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer58 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        boolean boolean61 = stdKeySerializer58.isEmpty(serializerProvider59, (java.lang.Object) (short) 1);
        boolean boolean62 = stdKeySerializer58.usesObjectId();
        boolean boolean63 = stdKeySerializer58.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer58.getDelegatee();
        java.lang.Class<java.lang.Object> objClass65 = stdKeySerializer58.handledType();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer25.wrapAndThrow(serializerProvider56, throwable57, (java.lang.Object) stdKeySerializer58, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objClass65);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = objJsonSerializer17.unwrappingSerializer(nameTransformer18);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = objJsonSerializer19.unwrappingSerializer(nameTransformer20);
        boolean boolean22 = objJsonSerializer19.usesObjectId();
        java.lang.Class<?> wildcardClass23 = objJsonSerializer19.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider6 = null;
        boolean boolean8 = stdKeySerializer5.isEmpty(serializerProvider6, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer11 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer10.getDelegatee();
        java.lang.Class<?> wildcardClass14 = stdKeySerializer10.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode16 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass14, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer0.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = null;
        boolean boolean25 = stdKeySerializer22.isEmpty(serializerProvider23, (java.lang.Object) (short) 1);
        boolean boolean27 = stdKeySerializer22.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer22.unwrappingSerializer(nameTransformer28);
        java.lang.Class<java.lang.Object> objClass30 = stdKeySerializer22.handledType();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer32 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = null;
        boolean boolean35 = stdKeySerializer32.isEmpty(serializerProvider33, (java.lang.Object) (short) 1);
        boolean boolean37 = stdKeySerializer32.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        boolean boolean42 = stdKeySerializer39.isEmpty(serializerProvider40, (java.lang.Object) (short) 1);
        boolean boolean44 = stdKeySerializer39.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass45 = stdKeySerializer39.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode47 = stdKeySerializer32.getSchema(serializerProvider38, (java.lang.reflect.Type) wildcardClass45, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode49 = stdKeySerializer22.getSchema(serializerProvider31, (java.lang.reflect.Type) wildcardClass45, true);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer50 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer50.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = stdKeySerializer50.unwrappingSerializer(nameTransformer52);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = objJsonSerializer53.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer55 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = objJsonSerializer53.unwrappingSerializer(nameTransformer55);
        boolean boolean57 = stdKeySerializer22.isEmpty((java.lang.Object) nameTransformer55);
        boolean boolean58 = stdKeySerializer22.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider61 = null;
        boolean boolean63 = stdKeySerializer60.isEmpty(serializerProvider61, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = stdKeySerializer60.unwrappingSerializer(nameTransformer65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider71 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer72 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer72.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer77 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer77.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer77.getDelegatee();
        java.lang.Class<?> wildcardClass81 = stdKeySerializer77.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode82 = stdKeySerializer72.getSchema(serializerProvider76, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer60.getSchema(serializerProvider71, (java.lang.reflect.Type) wildcardClass81);
        com.fasterxml.jackson.databind.JsonNode jsonNode85 = stdKeySerializer22.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass81, true);
        boolean boolean86 = objJsonSerializer20.isEmpty(serializerProvider21, (java.lang.Object) serializerProvider59);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(jsonNode16);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objClass30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(jsonNode47);
        org.junit.Assert.assertNotNull(jsonNode49);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer78);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(jsonNode82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = stdKeySerializer5.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = objJsonSerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = objJsonSerializer8.unwrappingSerializer(nameTransformer10);
        boolean boolean13 = objJsonSerializer11.isEmpty((java.lang.Object) (short) -1);
        boolean boolean14 = objJsonSerializer4.isEmpty((java.lang.Object) boolean13);
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        boolean boolean4 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer5.getDelegatee();
        java.lang.Class<java.lang.Object> objClass10 = stdKeySerializer5.handledType();
        boolean boolean12 = stdKeySerializer5.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer5.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = objJsonSerializer14.getDelegatee();
        boolean boolean16 = objJsonSerializer14.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer17 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer18 = objJsonSerializer14.unwrappingSerializer(nameTransformer17);
        boolean boolean19 = stdKeySerializer0.isEmpty((java.lang.Object) nameTransformer17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objClass10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        boolean boolean29 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper30 = null;
        com.fasterxml.jackson.databind.JavaType javaType31 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper30, javaType31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer13 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = null;
        boolean boolean16 = stdKeySerializer13.isEmpty(serializerProvider14, (java.lang.Object) (short) 1);
        boolean boolean18 = stdKeySerializer13.isEmpty((java.lang.Object) (-1L));
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        boolean boolean23 = stdKeySerializer20.isEmpty(serializerProvider21, (java.lang.Object) (short) 1);
        boolean boolean25 = stdKeySerializer20.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass26 = stdKeySerializer20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer13.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass26, false);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer30.isEmpty(serializerProvider31, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = stdKeySerializer30.unwrappingSerializer(nameTransformer35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer38 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer38.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider37, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = null;
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer30.getSchema(serializerProvider41, (java.lang.reflect.Type) wildcardClass43, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer30.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer48 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = null;
        boolean boolean51 = stdKeySerializer48.isEmpty(serializerProvider49, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer48.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer53 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = stdKeySerializer48.unwrappingSerializer(nameTransformer53);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer56 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass57 = stdKeySerializer56.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode58 = stdKeySerializer48.getSchema(serializerProvider55, (java.lang.reflect.Type) wildcardClass57);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer60 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer63 = stdKeySerializer60.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer67 = stdKeySerializer65.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer68 = stdKeySerializer65.getDelegatee();
        java.lang.Class<?> wildcardClass69 = stdKeySerializer65.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode70 = stdKeySerializer60.getSchema(serializerProvider64, (java.lang.reflect.Type) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer48.getSchema(serializerProvider59, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = stdKeySerializer30.isEmpty((java.lang.Object) wildcardClass69);
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer13.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass69);
        boolean boolean74 = stdKeySerializer0.isEmpty(serializerProvider12, (java.lang.Object) serializerProvider29);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = stdKeySerializer0.unwrappingSerializer(nameTransformer75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(jsonNode58);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNull(wildcardJsonSerializer63);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer67);
        org.junit.Assert.assertNull(wildcardJsonSerializer68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(jsonNode70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        boolean boolean15 = stdKeySerializer12.isEmpty(serializerProvider13, (java.lang.Object) (short) 1);
        boolean boolean17 = stdKeySerializer12.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass18 = stdKeySerializer12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode19 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer0.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer24 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer26 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer30 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer28.getDelegatee();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer28.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider27, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null;
        boolean boolean38 = stdKeySerializer35.isEmpty(serializerProvider36, (java.lang.Object) (short) 1);
        boolean boolean40 = stdKeySerializer35.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass41 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode42 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = stdKeySerializer23.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer44 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = stdKeySerializer23.unwrappingSerializer(nameTransformer44);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator46 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serialize((java.lang.Object) objJsonSerializer45, jsonGenerator46, serializerProvider47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(jsonNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertNull(wildcardJsonSerializer24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer26);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer30);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(jsonNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        boolean boolean7 = objJsonSerializer6.usesObjectId();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = stdKeySerializer8.usesObjectId();
        java.lang.Class<java.lang.Object> objClass20 = stdKeySerializer8.handledType();
        boolean boolean21 = stdKeySerializer8.isUnwrappingSerializer();
        boolean boolean23 = stdKeySerializer8.isEmpty((java.lang.Object) 1.0d);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer24 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = stdKeySerializer8.unwrappingSerializer(nameTransformer24);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = objJsonSerializer6.replaceDelegatee(objJsonSerializer25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        java.lang.Class<java.lang.Object> objClass5 = stdKeySerializer0.handledType();
        boolean boolean7 = stdKeySerializer0.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer8 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer9 = stdKeySerializer0.unwrappingSerializer(nameTransformer8);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider10 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer11.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer11.getDelegatee();
        boolean boolean14 = stdKeySerializer11.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        boolean boolean19 = stdKeySerializer16.isEmpty(serializerProvider17, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer16.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = stdKeySerializer16.unwrappingSerializer(nameTransformer21);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer23 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        boolean boolean26 = stdKeySerializer23.isEmpty(serializerProvider24, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer23.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer28 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = stdKeySerializer23.unwrappingSerializer(nameTransformer28);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass32 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode33 = stdKeySerializer23.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass32);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        java.lang.Class<?> wildcardClass44 = stdKeySerializer40.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode45 = stdKeySerializer35.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass44);
        com.fasterxml.jackson.databind.JsonNode jsonNode46 = stdKeySerializer23.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = objJsonSerializer22.isEmpty((java.lang.Object) stdKeySerializer23);
        java.lang.Class<?> wildcardClass48 = objJsonSerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer11.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass48, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer52 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer54 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer52.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer56 = stdKeySerializer52.getDelegatee();
        java.lang.Class<java.lang.Object> objClass57 = stdKeySerializer52.handledType();
        boolean boolean59 = stdKeySerializer52.isEmpty((java.lang.Object) 0);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = stdKeySerializer52.unwrappingSerializer(nameTransformer60);
        boolean boolean62 = stdKeySerializer11.isEmpty(serializerProvider51, (java.lang.Object) stdKeySerializer52);
        java.lang.Class<java.lang.Object> objClass63 = stdKeySerializer11.handledType();
        boolean boolean64 = stdKeySerializer0.isEmpty(serializerProvider10, (java.lang.Object) stdKeySerializer11);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer65 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = null;
        boolean boolean68 = stdKeySerializer65.isEmpty(serializerProvider66, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider69 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer70 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = stdKeySerializer70.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = stdKeySerializer70.getDelegatee();
        java.lang.Class<?> wildcardClass74 = stdKeySerializer70.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer65.getSchema(serializerProvider69, (java.lang.reflect.Type) wildcardClass74, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = stdKeySerializer78.getDelegatee();
        java.lang.Class<java.lang.Object> objClass83 = stdKeySerializer78.handledType();
        boolean boolean84 = stdKeySerializer65.isEmpty(serializerProvider77, (java.lang.Object) stdKeySerializer78);
        java.lang.Class<java.lang.Object> objClass85 = stdKeySerializer78.handledType();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator86 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider87 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer11.serialize((java.lang.Object) objClass85, jsonGenerator86, serializerProvider87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(jsonNode33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(jsonNode45);
        org.junit.Assert.assertNotNull(jsonNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNull(wildcardJsonSerializer54);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNull(wildcardJsonSerializer56);
        org.junit.Assert.assertNotNull(objClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNull(wildcardJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(objClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objClass85);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        boolean boolean2 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = stdKeySerializer0.unwrappingSerializer(nameTransformer3);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer7 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = stdKeySerializer5.unwrappingSerializer(nameTransformer7);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer10 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        boolean boolean13 = stdKeySerializer10.isEmpty(serializerProvider11, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer10.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = stdKeySerializer10.unwrappingSerializer(nameTransformer15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass19 = stdKeySerializer18.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode20 = stdKeySerializer10.getSchema(serializerProvider17, (java.lang.reflect.Type) wildcardClass19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode25 = stdKeySerializer10.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer26 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = stdKeySerializer10.unwrappingSerializer(nameTransformer26);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        boolean boolean31 = stdKeySerializer28.isEmpty(serializerProvider29, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer28.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = stdKeySerializer28.unwrappingSerializer(nameTransformer33);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer36 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass37 = stdKeySerializer36.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode38 = stdKeySerializer28.getSchema(serializerProvider35, (java.lang.reflect.Type) wildcardClass37);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer40 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer43 = stdKeySerializer40.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer45 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer46 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = stdKeySerializer45.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = stdKeySerializer45.getDelegatee();
        java.lang.Class<?> wildcardClass49 = stdKeySerializer45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode50 = stdKeySerializer40.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode51 = stdKeySerializer28.getSchema(serializerProvider39, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = stdKeySerializer10.isEmpty((java.lang.Object) wildcardClass49);
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer5.getSchema(serializerProvider9, (java.lang.reflect.Type) wildcardClass49);
        boolean boolean54 = stdKeySerializer5.usesObjectId();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator56 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) wildcardJsonSerializer55, jsonGenerator56, serializerProvider57, typeSerializer58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(jsonNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(jsonNode38);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNull(wildcardJsonSerializer43);
        org.junit.Assert.assertNull(wildcardJsonSerializer46);
        org.junit.Assert.assertNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(jsonNode50);
        org.junit.Assert.assertNotNull(jsonNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null;
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode27 = stdKeySerializer0.getSchema(serializerProvider24, (java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        java.lang.Throwable throwable30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        boolean boolean33 = stdKeySerializer31.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer31.isEmpty(serializerProvider34, (java.lang.Object) 1L);
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider29, throwable30, (java.lang.Object) boolean36, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(jsonNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer12.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer17 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = stdKeySerializer17.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer17.getDelegatee();
        java.lang.Class<?> wildcardClass21 = stdKeySerializer17.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode22 = stdKeySerializer12.getSchema(serializerProvider16, (java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = stdKeySerializer0.isEmpty(serializerProvider11, (java.lang.Object) jsonNode22);
        boolean boolean24 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer25 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = stdKeySerializer0.unwrappingSerializer(nameTransformer25);
        java.lang.Class<java.lang.Object> objClass27 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(objClass27);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer46 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = null;
        boolean boolean49 = stdKeySerializer46.isEmpty(serializerProvider47, (java.lang.Object) (short) 1);
        boolean boolean51 = stdKeySerializer46.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass52 = stdKeySerializer46.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode53 = stdKeySerializer0.getSchema(serializerProvider45, (java.lang.reflect.Type) wildcardClass52);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer58 = stdKeySerializer54.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer54.unwrappingSerializer(nameTransformer59);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer61 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        boolean boolean64 = stdKeySerializer61.isEmpty(serializerProvider62, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer61.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = stdKeySerializer61.unwrappingSerializer(nameTransformer66);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass70 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode71 = stdKeySerializer61.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass70);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider72 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer73 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer75 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = stdKeySerializer73.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer78 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer79 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = stdKeySerializer78.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = stdKeySerializer78.getDelegatee();
        java.lang.Class<?> wildcardClass82 = stdKeySerializer78.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode83 = stdKeySerializer73.getSchema(serializerProvider77, (java.lang.reflect.Type) wildcardClass82);
        com.fasterxml.jackson.databind.JsonNode jsonNode84 = stdKeySerializer61.getSchema(serializerProvider72, (java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = objJsonSerializer60.isEmpty((java.lang.Object) stdKeySerializer61);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer86 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer87 = objJsonSerializer60.unwrappingSerializer(nameTransformer86);
        boolean boolean88 = objJsonSerializer87.isUnwrappingSerializer();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator89 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider90 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.serializeWithType((java.lang.Object) boolean88, jsonGenerator89, serializerProvider90, typeSerializer91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Type id handling not implemented for type java.lang.Object");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(jsonNode53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer58);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(jsonNode71);
        org.junit.Assert.assertNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNull(wildcardJsonSerializer75);
        org.junit.Assert.assertNull(wildcardJsonSerializer76);
        org.junit.Assert.assertNull(wildcardJsonSerializer79);
        org.junit.Assert.assertNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(jsonNode83);
        org.junit.Assert.assertNotNull(jsonNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer8.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode10 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass9);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode15 = stdKeySerializer0.getSchema(serializerProvider11, (java.lang.reflect.Type) wildcardClass13, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = stdKeySerializer0.unwrappingSerializer(nameTransformer16);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        boolean boolean21 = stdKeySerializer18.isEmpty(serializerProvider19, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer18.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer23 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = stdKeySerializer18.unwrappingSerializer(nameTransformer23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass27 = stdKeySerializer26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode28 = stdKeySerializer18.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer30 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer31 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer30.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer35 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer35.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer38 = stdKeySerializer35.getDelegatee();
        java.lang.Class<?> wildcardClass39 = stdKeySerializer35.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode40 = stdKeySerializer30.getSchema(serializerProvider34, (java.lang.reflect.Type) wildcardClass39);
        com.fasterxml.jackson.databind.JsonNode jsonNode41 = stdKeySerializer18.getSchema(serializerProvider29, (java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = stdKeySerializer0.isEmpty((java.lang.Object) wildcardClass39);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = stdKeySerializer0.unwrappingSerializer(nameTransformer43);
        boolean boolean45 = stdKeySerializer0.usesObjectId();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = stdKeySerializer0.unwrappingSerializer(nameTransformer46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider53 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer54 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider55 = null;
        boolean boolean57 = stdKeySerializer54.isEmpty(serializerProvider55, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer61 = stdKeySerializer59.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer62 = stdKeySerializer59.getDelegatee();
        java.lang.Class<?> wildcardClass63 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode65 = stdKeySerializer54.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode67 = stdKeySerializer49.getSchema(serializerProvider53, (java.lang.reflect.Type) wildcardClass63, true);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider68 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer69 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider70 = null;
        boolean boolean72 = stdKeySerializer69.isEmpty(serializerProvider70, (java.lang.Object) (short) 1);
        boolean boolean74 = stdKeySerializer69.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass75 = stdKeySerializer69.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode76 = stdKeySerializer49.getSchema(serializerProvider68, (java.lang.reflect.Type) wildcardClass75);
        com.fasterxml.jackson.databind.JsonNode jsonNode78 = stdKeySerializer0.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass75, true);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper79 = null;
        com.fasterxml.jackson.databind.JavaType javaType80 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper79, javaType80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(jsonNode15);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNull(wildcardJsonSerializer31);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNull(wildcardJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(jsonNode40);
        org.junit.Assert.assertNotNull(jsonNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNull(wildcardJsonSerializer61);
        org.junit.Assert.assertNull(wildcardJsonSerializer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(jsonNode65);
        org.junit.Assert.assertNotNull(jsonNode67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(jsonNode76);
        org.junit.Assert.assertNotNull(jsonNode78);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer5 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = stdKeySerializer0.unwrappingSerializer(nameTransformer5);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider7 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider9 = null;
        boolean boolean11 = stdKeySerializer8.isEmpty(serializerProvider9, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = stdKeySerializer8.unwrappingSerializer(nameTransformer13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer16 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass17 = stdKeySerializer16.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = stdKeySerializer8.getSchema(serializerProvider15, (java.lang.reflect.Type) wildcardClass17);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider19 = null;
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode23 = stdKeySerializer8.getSchema(serializerProvider19, (java.lang.reflect.Type) wildcardClass21, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer0.getSchema(serializerProvider7, (java.lang.reflect.Type) wildcardClass21);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer25 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = null;
        java.lang.Throwable throwable27 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer28 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer28.getDelegatee();
        boolean boolean30 = stdKeySerializer28.usesObjectId();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = null;
        boolean boolean33 = stdKeySerializer28.isEmpty(serializerProvider31, (java.lang.Object) 1L);
        boolean boolean34 = stdKeySerializer28.usesObjectId();
        // The following exception was thrown during execution in test generation
        try {
            stdKeySerializer0.wrapAndThrow(serializerProvider26, throwable27, (java.lang.Object) boolean34, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertNotNull(objJsonSerializer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(jsonNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(jsonNode23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer25);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider1 = null;
        boolean boolean3 = stdKeySerializer0.isEmpty(serializerProvider1, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider4 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer5 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer6 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer5.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer5.getDelegatee();
        java.lang.Class<?> wildcardClass9 = stdKeySerializer5.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode11 = stdKeySerializer0.getSchema(serializerProvider4, (java.lang.reflect.Type) wildcardClass9, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = stdKeySerializer0.unwrappingSerializer(nameTransformer12);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider18 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer20 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = stdKeySerializer19.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer22 = stdKeySerializer19.getDelegatee();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer19.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider18, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer26 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer27 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = stdKeySerializer26.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider30 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer31 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer32 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer33 = stdKeySerializer31.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = stdKeySerializer31.getDelegatee();
        java.lang.Class<?> wildcardClass35 = stdKeySerializer31.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode36 = stdKeySerializer26.getSchema(serializerProvider30, (java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = stdKeySerializer14.isEmpty(serializerProvider25, (java.lang.Object) jsonNode36);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer39 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = stdKeySerializer39.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer44 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = null;
        boolean boolean47 = stdKeySerializer44.isEmpty(serializerProvider45, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer49 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer50 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer51 = stdKeySerializer49.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer52 = stdKeySerializer49.getDelegatee();
        java.lang.Class<?> wildcardClass53 = stdKeySerializer49.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode55 = stdKeySerializer44.getSchema(serializerProvider48, (java.lang.reflect.Type) wildcardClass53, true);
        com.fasterxml.jackson.databind.JsonNode jsonNode57 = stdKeySerializer39.getSchema(serializerProvider43, (java.lang.reflect.Type) wildcardClass53, true);
        boolean boolean58 = stdKeySerializer14.isEmpty(serializerProvider38, (java.lang.Object) stdKeySerializer39);
        boolean boolean59 = stdKeySerializer39.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = stdKeySerializer0.replaceDelegatee((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) stdKeySerializer39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer6);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(jsonNode11);
        org.junit.Assert.assertNotNull(objJsonSerializer13);
        org.junit.Assert.assertNull(wildcardJsonSerializer15);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNull(wildcardJsonSerializer20);
        org.junit.Assert.assertNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNull(wildcardJsonSerializer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNull(wildcardJsonSerializer27);
        org.junit.Assert.assertNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNull(wildcardJsonSerializer32);
        org.junit.Assert.assertNull(wildcardJsonSerializer33);
        org.junit.Assert.assertNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(jsonNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNull(wildcardJsonSerializer42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer50);
        org.junit.Assert.assertNull(wildcardJsonSerializer51);
        org.junit.Assert.assertNull(wildcardJsonSerializer52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(jsonNode55);
        org.junit.Assert.assertNotNull(jsonNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer2 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = stdKeySerializer0.unwrappingSerializer(nameTransformer2);
        boolean boolean4 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null;
        java.lang.Object obj6 = null;
        boolean boolean7 = stdKeySerializer0.isEmpty(serializerProvider5, obj6);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer8.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer10 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = stdKeySerializer8.unwrappingSerializer(nameTransformer10);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = objJsonSerializer11.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = objJsonSerializer11.unwrappingSerializer(nameTransformer13);
        boolean boolean16 = objJsonSerializer11.isEmpty((java.lang.Object) true);
        boolean boolean17 = objJsonSerializer11.isUnwrappingSerializer();
        boolean boolean18 = objJsonSerializer11.isUnwrappingSerializer();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = stdKeySerializer0.replaceDelegatee(objJsonSerializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNull(wildcardJsonSerializer12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer1 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer2 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer3 = stdKeySerializer0.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer4 = stdKeySerializer0.getDelegatee();
        boolean boolean5 = stdKeySerializer0.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer8 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer9 = stdKeySerializer6.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer10 = stdKeySerializer6.getDelegatee();
        boolean boolean11 = stdKeySerializer6.isUnwrappingSerializer();
        boolean boolean12 = stdKeySerializer0.isEmpty((java.lang.Object) boolean11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer14 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = null;
        boolean boolean17 = stdKeySerializer14.isEmpty(serializerProvider15, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer18 = stdKeySerializer14.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = stdKeySerializer14.unwrappingSerializer(nameTransformer19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer22 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass23 = stdKeySerializer22.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = stdKeySerializer14.getSchema(serializerProvider21, (java.lang.reflect.Type) wildcardClass23);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = null;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode29 = stdKeySerializer14.getSchema(serializerProvider25, (java.lang.reflect.Type) wildcardClass27, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = stdKeySerializer14.unwrappingSerializer(nameTransformer30);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer33 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = null;
        boolean boolean36 = stdKeySerializer33.isEmpty(serializerProvider34, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer37 = stdKeySerializer33.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = stdKeySerializer33.unwrappingSerializer(nameTransformer38);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer41 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass42 = stdKeySerializer41.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode43 = stdKeySerializer33.getSchema(serializerProvider40, (java.lang.reflect.Type) wildcardClass42);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = null;
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode48 = stdKeySerializer33.getSchema(serializerProvider44, (java.lang.reflect.Type) wildcardClass46, true);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer49 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = stdKeySerializer33.unwrappingSerializer(nameTransformer49);
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer51 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider52 = null;
        boolean boolean54 = stdKeySerializer51.isEmpty(serializerProvider52, (java.lang.Object) (short) 1);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer55 = stdKeySerializer51.getDelegatee();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer56 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = stdKeySerializer51.unwrappingSerializer(nameTransformer56);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider58 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer59 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        java.lang.Class<?> wildcardClass60 = stdKeySerializer59.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode61 = stdKeySerializer51.getSchema(serializerProvider58, (java.lang.reflect.Type) wildcardClass60);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider62 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer63 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer64 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer65 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = stdKeySerializer63.getDelegatee();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer68 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer69 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer70 = stdKeySerializer68.getDelegatee();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = stdKeySerializer68.getDelegatee();
        java.lang.Class<?> wildcardClass72 = stdKeySerializer68.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode73 = stdKeySerializer63.getSchema(serializerProvider67, (java.lang.reflect.Type) wildcardClass72);
        com.fasterxml.jackson.databind.JsonNode jsonNode74 = stdKeySerializer51.getSchema(serializerProvider62, (java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = stdKeySerializer33.isEmpty((java.lang.Object) wildcardClass72);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = stdKeySerializer33.unwrappingSerializer(nameTransformer76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.std.StdKeySerializer stdKeySerializer79 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider80 = null;
        boolean boolean82 = stdKeySerializer79.isEmpty(serializerProvider80, (java.lang.Object) (short) 1);
        boolean boolean84 = stdKeySerializer79.isEmpty((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass85 = stdKeySerializer79.getClass();
        com.fasterxml.jackson.databind.JsonNode jsonNode86 = stdKeySerializer33.getSchema(serializerProvider78, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.JsonNode jsonNode88 = stdKeySerializer14.getSchema(serializerProvider32, (java.lang.reflect.Type) wildcardClass85, false);
        com.fasterxml.jackson.databind.JsonNode jsonNode89 = stdKeySerializer0.getSchema(serializerProvider13, (java.lang.reflect.Type) wildcardClass85);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = stdKeySerializer0.unwrappingSerializer(nameTransformer90);
        java.lang.Class<java.lang.Object> objClass92 = stdKeySerializer0.handledType();
        org.junit.Assert.assertNull(wildcardJsonSerializer1);
        org.junit.Assert.assertNull(wildcardJsonSerializer2);
        org.junit.Assert.assertNull(wildcardJsonSerializer3);
        org.junit.Assert.assertNull(wildcardJsonSerializer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardJsonSerializer8);
        org.junit.Assert.assertNull(wildcardJsonSerializer9);
        org.junit.Assert.assertNull(wildcardJsonSerializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer18);
        org.junit.Assert.assertNotNull(objJsonSerializer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(jsonNode43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(jsonNode48);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardJsonSerializer55);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(jsonNode61);
        org.junit.Assert.assertNull(wildcardJsonSerializer64);
        org.junit.Assert.assertNull(wildcardJsonSerializer65);
        org.junit.Assert.assertNull(wildcardJsonSerializer66);
        org.junit.Assert.assertNull(wildcardJsonSerializer69);
        org.junit.Assert.assertNull(wildcardJsonSerializer70);
        org.junit.Assert.assertNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(jsonNode73);
        org.junit.Assert.assertNotNull(jsonNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(jsonNode86);
        org.junit.Assert.assertNotNull(jsonNode88);
        org.junit.Assert.assertNotNull(jsonNode89);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
        org.junit.Assert.assertNotNull(objClass92);
    }
}

