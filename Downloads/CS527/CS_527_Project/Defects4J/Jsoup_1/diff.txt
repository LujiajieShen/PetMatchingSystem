diff --git a/CHANGES b/CHANGES
index a5594d5..9b58958 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,5 +1,10 @@
 jsoup changelog
 
+*** Release 1.1.2 (pending)
+ * Fix an issue where text order was incorrect when parsing pre-document
+    HTML.
+      <http://github.com/jhy/jsoup/issues/issue/23>
+
 *** Release 1.1.1
  * Added selector support for :eq, :lt, and :gt
  	<http://github.com/jhy/jsoup/issues/issue/16>
diff --git a/src/main/java/org/jsoup/nodes/Document.java b/src/main/java/org/jsoup/nodes/Document.java
index aae5a34..6ed4c12 100644
--- a/src/main/java/org/jsoup/nodes/Document.java
+++ b/src/main/java/org/jsoup/nodes/Document.java
@@ -100,14 +100,16 @@ public class Document extends Element {
         if (body() == null)
             select("html").first().appendElement("body");
 
-        normalise(this);
-        normalise(select("html").first());
+        // pull text nodes out of root, html, and head els, and push into body. non-text nodes are already taken care
+        // of. do in inverse order to maintain text order.
         normalise(head());
+        normalise(select("html").first());
+        normalise(this);        
 
         return this;
     }
 
-    // does not recurse. the result order isn't great here (not intuitive); they are in the body though.
+    // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node: element.childNodes) {
@@ -120,8 +122,8 @@ public class Document extends Element {
 
         for (Node node: toMove) {
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            body().prependChild(node);
+            body().prependChild(new TextNode(" ", ""));
         }
     }
 
diff --git a/src/test/java/org/jsoup/parser/ParserTest.java b/src/test/java/org/jsoup/parser/ParserTest.java
index aef466b..293f692 100644
--- a/src/test/java/org/jsoup/parser/ParserTest.java
+++ b/src/test/java/org/jsoup/parser/ParserTest.java
@@ -102,6 +102,15 @@ public class ParserTest {
         assertEquals("Hello world", body.children().get(0).text());
     }
 
+    @Test public void createsStructureFromBodySnippet() {
+        // the bar baz stuff naturally goes into the body, but the 'foo' goes into root, and the normalisation routine
+        // needs to move into the start of the body
+        String html = "foo <b>bar</b> baz";
+        Document doc = Jsoup.parse(html);
+        assertEquals ("foo bar baz", doc.text());
+
+    }
+
     @Test public void handlesEscapedData() {
         String html = "<div title='Surf &amp; Turf'>Reef &amp; Beef</div>";
         Document doc = Jsoup.parse(html);
