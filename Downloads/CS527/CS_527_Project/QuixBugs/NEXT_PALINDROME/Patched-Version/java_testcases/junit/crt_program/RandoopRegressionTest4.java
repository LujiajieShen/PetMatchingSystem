import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RandoopRegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2001");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2002");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass29 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[27, 123]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2003");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass25 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2004");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2005");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass23 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2006");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass23 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2007");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass64 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2008");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2009");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass76 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2010");
        int[] intArray6 = new int[] { (short) 0, '#', 0, ' ', 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass50 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 1, 33, 100, 10]" + "'", str7, "[0, 35, 1, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 2, 34, 100, 10]" + "'", str8, "[0, 35, 2, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 3, 35, 100, 10]" + "'", str9, "[0, 35, 3, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 4, 36, 100, 10]" + "'", str10, "[0, 35, 4, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 5, 37, 100, 10]" + "'", str11, "[0, 35, 5, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 6, 38, 100, 10]" + "'", str12, "[0, 35, 6, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 7, 39, 100, 10]" + "'", str13, "[0, 35, 7, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 8, 40, 100, 10]" + "'", str14, "[0, 35, 8, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 9, 41, 100, 10]" + "'", str15, "[0, 35, 9, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 10, 42, 100, 10]" + "'", str16, "[0, 35, 10, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 11, 43, 100, 10]" + "'", str17, "[0, 35, 11, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 12, 44, 100, 10]" + "'", str18, "[0, 35, 12, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 13, 45, 100, 10]" + "'", str19, "[0, 35, 13, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 14, 46, 100, 10]" + "'", str20, "[0, 35, 14, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 15, 47, 100, 10]" + "'", str21, "[0, 35, 15, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 16, 48, 100, 10]" + "'", str22, "[0, 35, 16, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 17, 49, 100, 10]" + "'", str23, "[0, 35, 17, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 18, 50, 100, 10]" + "'", str24, "[0, 35, 18, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 19, 51, 100, 10]" + "'", str25, "[0, 35, 19, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 20, 52, 100, 10]" + "'", str26, "[0, 35, 20, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 21, 53, 100, 10]" + "'", str27, "[0, 35, 21, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 22, 54, 100, 10]" + "'", str28, "[0, 35, 22, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 23, 55, 100, 10]" + "'", str29, "[0, 35, 23, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 24, 56, 100, 10]" + "'", str30, "[0, 35, 24, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 25, 57, 100, 10]" + "'", str31, "[0, 35, 25, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 26, 58, 100, 10]" + "'", str32, "[0, 35, 26, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 27, 59, 100, 10]" + "'", str33, "[0, 35, 27, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 28, 60, 100, 10]" + "'", str34, "[0, 35, 28, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 29, 61, 100, 10]" + "'", str35, "[0, 35, 29, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 30, 62, 100, 10]" + "'", str36, "[0, 35, 30, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 31, 63, 100, 10]" + "'", str37, "[0, 35, 31, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 32, 64, 100, 10]" + "'", str38, "[0, 35, 32, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 33, 65, 100, 10]" + "'", str39, "[0, 35, 33, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 34, 66, 100, 10]" + "'", str40, "[0, 35, 34, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 35, 67, 100, 10]" + "'", str41, "[0, 35, 35, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 36, 68, 100, 10]" + "'", str42, "[0, 35, 36, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 37, 69, 100, 10]" + "'", str43, "[0, 35, 37, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 38, 70, 100, 10]" + "'", str44, "[0, 35, 38, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 39, 71, 100, 10]" + "'", str45, "[0, 35, 39, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 40, 72, 100, 10]" + "'", str46, "[0, 35, 40, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 41, 73, 100, 10]" + "'", str47, "[0, 35, 41, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 42, 74, 100, 10]" + "'", str48, "[0, 35, 42, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 43, 75, 100, 10]" + "'", str49, "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2011");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2012");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2013");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass11 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2014");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass75 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2015");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass51 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2016");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass27 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[25, 34]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2017");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass61 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2018");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass27 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2019");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2020");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str98 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str99 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[109, 4, 4, 9]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 0, 0, 0]" + "'", str5, "[100, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 1, 1, 0]" + "'", str6, "[100, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 2, 2, 0]" + "'", str7, "[100, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 3, 3, 0]" + "'", str8, "[100, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 4, 4, 0]" + "'", str9, "[100, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 5, 5, 0]" + "'", str10, "[100, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 6, 6, 0]" + "'", str11, "[100, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 7, 7, 0]" + "'", str12, "[100, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 8, 8, 0]" + "'", str13, "[100, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 9, 9, 0]" + "'", str14, "[100, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 0, 0, 1]" + "'", str15, "[101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 1, 1, 1]" + "'", str16, "[101, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 2, 2, 1]" + "'", str17, "[101, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 3, 3, 1]" + "'", str18, "[101, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 4, 4, 1]" + "'", str19, "[101, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 5, 5, 1]" + "'", str20, "[101, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 6, 6, 1]" + "'", str21, "[101, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[101, 7, 7, 1]" + "'", str22, "[101, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[101, 8, 8, 1]" + "'", str23, "[101, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[101, 9, 9, 1]" + "'", str24, "[101, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 0, 0, 2]" + "'", str25, "[102, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 1, 1, 2]" + "'", str26, "[102, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 2, 2, 2]" + "'", str27, "[102, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 3, 3, 2]" + "'", str28, "[102, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 4, 4, 2]" + "'", str29, "[102, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 5, 5, 2]" + "'", str30, "[102, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 6, 6, 2]" + "'", str31, "[102, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[102, 7, 7, 2]" + "'", str32, "[102, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[102, 8, 8, 2]" + "'", str33, "[102, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[102, 9, 9, 2]" + "'", str34, "[102, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[103, 0, 0, 3]" + "'", str35, "[103, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[103, 1, 1, 3]" + "'", str36, "[103, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[103, 2, 2, 3]" + "'", str37, "[103, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[103, 3, 3, 3]" + "'", str38, "[103, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[103, 4, 4, 3]" + "'", str39, "[103, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[103, 5, 5, 3]" + "'", str40, "[103, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[103, 6, 6, 3]" + "'", str41, "[103, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[103, 7, 7, 3]" + "'", str42, "[103, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[103, 8, 8, 3]" + "'", str43, "[103, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[103, 9, 9, 3]" + "'", str44, "[103, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[104, 0, 0, 4]" + "'", str45, "[104, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[104, 1, 1, 4]" + "'", str46, "[104, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[104, 2, 2, 4]" + "'", str47, "[104, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[104, 3, 3, 4]" + "'", str48, "[104, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[104, 4, 4, 4]" + "'", str49, "[104, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[104, 5, 5, 4]" + "'", str50, "[104, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[104, 6, 6, 4]" + "'", str51, "[104, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[104, 7, 7, 4]" + "'", str52, "[104, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[104, 8, 8, 4]" + "'", str53, "[104, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[104, 9, 9, 4]" + "'", str54, "[104, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[105, 0, 0, 5]" + "'", str55, "[105, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[105, 1, 1, 5]" + "'", str56, "[105, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[105, 2, 2, 5]" + "'", str57, "[105, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[105, 3, 3, 5]" + "'", str58, "[105, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[105, 4, 4, 5]" + "'", str59, "[105, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[105, 5, 5, 5]" + "'", str60, "[105, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[105, 6, 6, 5]" + "'", str61, "[105, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[105, 7, 7, 5]" + "'", str62, "[105, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[105, 8, 8, 5]" + "'", str63, "[105, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[105, 9, 9, 5]" + "'", str64, "[105, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[106, 0, 0, 6]" + "'", str65, "[106, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[106, 1, 1, 6]" + "'", str66, "[106, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[106, 2, 2, 6]" + "'", str67, "[106, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[106, 3, 3, 6]" + "'", str68, "[106, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[106, 4, 4, 6]" + "'", str69, "[106, 4, 4, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[106, 5, 5, 6]" + "'", str70, "[106, 5, 5, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[106, 6, 6, 6]" + "'", str71, "[106, 6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[106, 7, 7, 6]" + "'", str72, "[106, 7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[106, 8, 8, 6]" + "'", str73, "[106, 8, 8, 6]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[106, 9, 9, 6]" + "'", str74, "[106, 9, 9, 6]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[107, 0, 0, 7]" + "'", str75, "[107, 0, 0, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[107, 1, 1, 7]" + "'", str76, "[107, 1, 1, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[107, 2, 2, 7]" + "'", str77, "[107, 2, 2, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[107, 3, 3, 7]" + "'", str78, "[107, 3, 3, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[107, 4, 4, 7]" + "'", str79, "[107, 4, 4, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[107, 5, 5, 7]" + "'", str80, "[107, 5, 5, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[107, 6, 6, 7]" + "'", str81, "[107, 6, 6, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[107, 7, 7, 7]" + "'", str82, "[107, 7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[107, 8, 8, 7]" + "'", str83, "[107, 8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[107, 9, 9, 7]" + "'", str84, "[107, 9, 9, 7]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[108, 0, 0, 8]" + "'", str85, "[108, 0, 0, 8]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[108, 1, 1, 8]" + "'", str86, "[108, 1, 1, 8]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[108, 2, 2, 8]" + "'", str87, "[108, 2, 2, 8]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[108, 3, 3, 8]" + "'", str88, "[108, 3, 3, 8]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[108, 4, 4, 8]" + "'", str89, "[108, 4, 4, 8]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[108, 5, 5, 8]" + "'", str90, "[108, 5, 5, 8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[108, 6, 6, 8]" + "'", str91, "[108, 6, 6, 8]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[108, 7, 7, 8]" + "'", str92, "[108, 7, 7, 8]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[108, 8, 8, 8]" + "'", str93, "[108, 8, 8, 8]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[108, 9, 9, 8]" + "'", str94, "[108, 9, 9, 8]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[109, 0, 0, 9]" + "'", str95, "[109, 0, 0, 9]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[109, 1, 1, 9]" + "'", str96, "[109, 1, 1, 9]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[109, 2, 2, 9]" + "'", str97, "[109, 2, 2, 9]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[109, 3, 3, 9]" + "'", str98, "[109, 3, 3, 9]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[109, 4, 4, 9]" + "'", str99, "[109, 4, 4, 9]");
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2021");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass50 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2022");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass77 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2023");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2024");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass30 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[28, 124]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2025");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass28 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[26, 122]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2026");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass13 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2027");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[81, 126]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2028");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass66 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2029");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass78 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2030");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass67 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2031");
        int[] intArray1 = new int[] { (-1) };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass51 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2032");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass26 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2033");
        int[] intArray6 = new int[] { (short) 0, '#', 0, ' ', 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass51 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 35, 44, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 1, 33, 100, 10]" + "'", str7, "[0, 35, 1, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 2, 34, 100, 10]" + "'", str8, "[0, 35, 2, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 3, 35, 100, 10]" + "'", str9, "[0, 35, 3, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 4, 36, 100, 10]" + "'", str10, "[0, 35, 4, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 5, 37, 100, 10]" + "'", str11, "[0, 35, 5, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 6, 38, 100, 10]" + "'", str12, "[0, 35, 6, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 7, 39, 100, 10]" + "'", str13, "[0, 35, 7, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 8, 40, 100, 10]" + "'", str14, "[0, 35, 8, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 9, 41, 100, 10]" + "'", str15, "[0, 35, 9, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 10, 42, 100, 10]" + "'", str16, "[0, 35, 10, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 11, 43, 100, 10]" + "'", str17, "[0, 35, 11, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 12, 44, 100, 10]" + "'", str18, "[0, 35, 12, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 13, 45, 100, 10]" + "'", str19, "[0, 35, 13, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 14, 46, 100, 10]" + "'", str20, "[0, 35, 14, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 15, 47, 100, 10]" + "'", str21, "[0, 35, 15, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 16, 48, 100, 10]" + "'", str22, "[0, 35, 16, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 17, 49, 100, 10]" + "'", str23, "[0, 35, 17, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 18, 50, 100, 10]" + "'", str24, "[0, 35, 18, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 19, 51, 100, 10]" + "'", str25, "[0, 35, 19, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 20, 52, 100, 10]" + "'", str26, "[0, 35, 20, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 21, 53, 100, 10]" + "'", str27, "[0, 35, 21, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 22, 54, 100, 10]" + "'", str28, "[0, 35, 22, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 23, 55, 100, 10]" + "'", str29, "[0, 35, 23, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 24, 56, 100, 10]" + "'", str30, "[0, 35, 24, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 25, 57, 100, 10]" + "'", str31, "[0, 35, 25, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 26, 58, 100, 10]" + "'", str32, "[0, 35, 26, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 27, 59, 100, 10]" + "'", str33, "[0, 35, 27, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 28, 60, 100, 10]" + "'", str34, "[0, 35, 28, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 29, 61, 100, 10]" + "'", str35, "[0, 35, 29, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 30, 62, 100, 10]" + "'", str36, "[0, 35, 30, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 31, 63, 100, 10]" + "'", str37, "[0, 35, 31, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 32, 64, 100, 10]" + "'", str38, "[0, 35, 32, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 33, 65, 100, 10]" + "'", str39, "[0, 35, 33, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 34, 66, 100, 10]" + "'", str40, "[0, 35, 34, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 35, 67, 100, 10]" + "'", str41, "[0, 35, 35, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 36, 68, 100, 10]" + "'", str42, "[0, 35, 36, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 37, 69, 100, 10]" + "'", str43, "[0, 35, 37, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 38, 70, 100, 10]" + "'", str44, "[0, 35, 38, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 39, 71, 100, 10]" + "'", str45, "[0, 35, 39, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 40, 72, 100, 10]" + "'", str46, "[0, 35, 40, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 41, 73, 100, 10]" + "'", str47, "[0, 35, 41, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 42, 74, 100, 10]" + "'", str48, "[0, 35, 42, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 43, 75, 100, 10]" + "'", str49, "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 44, 76, 100, 10]" + "'", str50, "[0, 35, 44, 76, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2034");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass76 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2035");
        int[] intArray3 = new int[] { 1, (-1), '4' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass86 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 1, 60]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 52]" + "'", str4, "[1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 52]" + "'", str5, "[1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 52]" + "'", str6, "[1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 52]" + "'", str7, "[1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 52]" + "'", str8, "[1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 52]" + "'", str9, "[1, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 52]" + "'", str10, "[1, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 52]" + "'", str11, "[1, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 52]" + "'", str12, "[1, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 52]" + "'", str13, "[1, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 53]" + "'", str14, "[2, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 53]" + "'", str15, "[2, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 53]" + "'", str16, "[2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 53]" + "'", str17, "[2, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 53]" + "'", str18, "[2, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 53]" + "'", str19, "[2, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 53]" + "'", str20, "[2, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 53]" + "'", str21, "[2, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 53]" + "'", str22, "[2, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 53]" + "'", str23, "[2, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 54]" + "'", str24, "[3, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 54]" + "'", str25, "[3, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 54]" + "'", str26, "[3, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 54]" + "'", str27, "[3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 54]" + "'", str28, "[3, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 54]" + "'", str29, "[3, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 54]" + "'", str30, "[3, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 54]" + "'", str31, "[3, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 54]" + "'", str32, "[3, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 54]" + "'", str33, "[3, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 55]" + "'", str34, "[4, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 55]" + "'", str35, "[4, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 55]" + "'", str36, "[4, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 55]" + "'", str37, "[4, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 55]" + "'", str38, "[4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 55]" + "'", str39, "[4, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 55]" + "'", str40, "[4, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 55]" + "'", str41, "[4, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 55]" + "'", str42, "[4, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 55]" + "'", str43, "[4, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 56]" + "'", str44, "[5, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 56]" + "'", str45, "[5, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 56]" + "'", str46, "[5, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 56]" + "'", str47, "[5, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 56]" + "'", str48, "[5, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 56]" + "'", str49, "[5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 56]" + "'", str50, "[5, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 56]" + "'", str51, "[5, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 56]" + "'", str52, "[5, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 56]" + "'", str53, "[5, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 57]" + "'", str54, "[6, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 57]" + "'", str55, "[6, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 57]" + "'", str56, "[6, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 57]" + "'", str57, "[6, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 57]" + "'", str58, "[6, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 57]" + "'", str59, "[6, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 57]" + "'", str60, "[6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 57]" + "'", str61, "[6, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 57]" + "'", str62, "[6, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 9, 57]" + "'", str63, "[6, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 0, 58]" + "'", str64, "[7, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 1, 58]" + "'", str65, "[7, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 2, 58]" + "'", str66, "[7, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 3, 58]" + "'", str67, "[7, 3, 58]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 4, 58]" + "'", str68, "[7, 4, 58]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 5, 58]" + "'", str69, "[7, 5, 58]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 6, 58]" + "'", str70, "[7, 6, 58]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 7, 58]" + "'", str71, "[7, 7, 58]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 8, 58]" + "'", str72, "[7, 8, 58]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 9, 58]" + "'", str73, "[7, 9, 58]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 0, 59]" + "'", str74, "[8, 0, 59]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 1, 59]" + "'", str75, "[8, 1, 59]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 2, 59]" + "'", str76, "[8, 2, 59]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 3, 59]" + "'", str77, "[8, 3, 59]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 4, 59]" + "'", str78, "[8, 4, 59]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 5, 59]" + "'", str79, "[8, 5, 59]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 6, 59]" + "'", str80, "[8, 6, 59]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 7, 59]" + "'", str81, "[8, 7, 59]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 8, 59]" + "'", str82, "[8, 8, 59]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 9, 59]" + "'", str83, "[8, 9, 59]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 0, 60]" + "'", str84, "[9, 0, 60]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 1, 60]" + "'", str85, "[9, 1, 60]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2036");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[80, 125]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2037");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass11 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2038");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2039");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass40 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2040");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass33 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2041");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass65 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2042");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[65]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2043");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2044");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2045");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass14 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2046");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass12 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2047");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass28 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[26, 35]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2048");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass32 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[30, 126]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2049");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass24 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2050");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass38 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2051");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass69 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2052");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass29 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[27, 36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2053");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass39 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2054");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2055");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass80 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2056");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass53 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2057");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass45 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[140]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2058");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2059");
        int[] intArray6 = new int[] { (short) 0, '#', 0, ' ', 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass52 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 35, 45, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 1, 33, 100, 10]" + "'", str7, "[0, 35, 1, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 2, 34, 100, 10]" + "'", str8, "[0, 35, 2, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 3, 35, 100, 10]" + "'", str9, "[0, 35, 3, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 4, 36, 100, 10]" + "'", str10, "[0, 35, 4, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 5, 37, 100, 10]" + "'", str11, "[0, 35, 5, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 6, 38, 100, 10]" + "'", str12, "[0, 35, 6, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 7, 39, 100, 10]" + "'", str13, "[0, 35, 7, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 8, 40, 100, 10]" + "'", str14, "[0, 35, 8, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 9, 41, 100, 10]" + "'", str15, "[0, 35, 9, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 10, 42, 100, 10]" + "'", str16, "[0, 35, 10, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 11, 43, 100, 10]" + "'", str17, "[0, 35, 11, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 12, 44, 100, 10]" + "'", str18, "[0, 35, 12, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 13, 45, 100, 10]" + "'", str19, "[0, 35, 13, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 14, 46, 100, 10]" + "'", str20, "[0, 35, 14, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 15, 47, 100, 10]" + "'", str21, "[0, 35, 15, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 16, 48, 100, 10]" + "'", str22, "[0, 35, 16, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 17, 49, 100, 10]" + "'", str23, "[0, 35, 17, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 18, 50, 100, 10]" + "'", str24, "[0, 35, 18, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 19, 51, 100, 10]" + "'", str25, "[0, 35, 19, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 20, 52, 100, 10]" + "'", str26, "[0, 35, 20, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 21, 53, 100, 10]" + "'", str27, "[0, 35, 21, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 22, 54, 100, 10]" + "'", str28, "[0, 35, 22, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 23, 55, 100, 10]" + "'", str29, "[0, 35, 23, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 24, 56, 100, 10]" + "'", str30, "[0, 35, 24, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 25, 57, 100, 10]" + "'", str31, "[0, 35, 25, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 26, 58, 100, 10]" + "'", str32, "[0, 35, 26, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 27, 59, 100, 10]" + "'", str33, "[0, 35, 27, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 28, 60, 100, 10]" + "'", str34, "[0, 35, 28, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 29, 61, 100, 10]" + "'", str35, "[0, 35, 29, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 30, 62, 100, 10]" + "'", str36, "[0, 35, 30, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 31, 63, 100, 10]" + "'", str37, "[0, 35, 31, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 32, 64, 100, 10]" + "'", str38, "[0, 35, 32, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 33, 65, 100, 10]" + "'", str39, "[0, 35, 33, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 34, 66, 100, 10]" + "'", str40, "[0, 35, 34, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 35, 67, 100, 10]" + "'", str41, "[0, 35, 35, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 36, 68, 100, 10]" + "'", str42, "[0, 35, 36, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 37, 69, 100, 10]" + "'", str43, "[0, 35, 37, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 38, 70, 100, 10]" + "'", str44, "[0, 35, 38, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 39, 71, 100, 10]" + "'", str45, "[0, 35, 39, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 40, 72, 100, 10]" + "'", str46, "[0, 35, 40, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 41, 73, 100, 10]" + "'", str47, "[0, 35, 41, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 42, 74, 100, 10]" + "'", str48, "[0, 35, 42, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 43, 75, 100, 10]" + "'", str49, "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 44, 76, 100, 10]" + "'", str50, "[0, 35, 44, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 45, 77, 100, 10]" + "'", str51, "[0, 35, 45, 77, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2060");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2061");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass39 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2062");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass26 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2063");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass12 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2064");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2065");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass70 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2066");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2067");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass57 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2068");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass63 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2069");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass14 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2070");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass15 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2071");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2072");
        int[] intArray1 = new int[] { (-1) };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2073");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass55 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2074");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass58 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2075");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[29, 125]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2076");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass78 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2077");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass46 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[141]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2078");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2079");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass28 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2080");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass44 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[139]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2081");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass81 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 1, 106, 106, 10, -1]" + "'", str80, "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2082");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass33 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[31, 127]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2083");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass21 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2084");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass27 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2085");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2086");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass79 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2087");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[28, 37]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 37]" + "'", str29, "[28, 37]");
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2088");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass79 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2089");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2090");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass52 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 7, 3]" + "'", str51, "[5, 7, 7, 3]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2091");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass54 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2092");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2093");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2094");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass41 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2095");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass48 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2096");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass22 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2097");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass62 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2098");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2099");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2100");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2101");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2102");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2103");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass53 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[61]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2104");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass15 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2105");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass71 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2106");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2107");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2108");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2109");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2110");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2111");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass59 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2112");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2113");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2114");
        int[] intArray3 = new int[] { 1, (-1), '4' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass87 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 2, 60]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 52]" + "'", str4, "[1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 52]" + "'", str5, "[1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 52]" + "'", str6, "[1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 52]" + "'", str7, "[1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 52]" + "'", str8, "[1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 52]" + "'", str9, "[1, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 52]" + "'", str10, "[1, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 52]" + "'", str11, "[1, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 52]" + "'", str12, "[1, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 52]" + "'", str13, "[1, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 53]" + "'", str14, "[2, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 53]" + "'", str15, "[2, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 53]" + "'", str16, "[2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 53]" + "'", str17, "[2, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 53]" + "'", str18, "[2, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 53]" + "'", str19, "[2, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 53]" + "'", str20, "[2, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 53]" + "'", str21, "[2, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 53]" + "'", str22, "[2, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 53]" + "'", str23, "[2, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 54]" + "'", str24, "[3, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 54]" + "'", str25, "[3, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 54]" + "'", str26, "[3, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 54]" + "'", str27, "[3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 54]" + "'", str28, "[3, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 54]" + "'", str29, "[3, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 54]" + "'", str30, "[3, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 54]" + "'", str31, "[3, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 54]" + "'", str32, "[3, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 54]" + "'", str33, "[3, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 55]" + "'", str34, "[4, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 55]" + "'", str35, "[4, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 55]" + "'", str36, "[4, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 55]" + "'", str37, "[4, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 55]" + "'", str38, "[4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 55]" + "'", str39, "[4, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 55]" + "'", str40, "[4, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 55]" + "'", str41, "[4, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 55]" + "'", str42, "[4, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 55]" + "'", str43, "[4, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 56]" + "'", str44, "[5, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 56]" + "'", str45, "[5, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 56]" + "'", str46, "[5, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 56]" + "'", str47, "[5, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 56]" + "'", str48, "[5, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 56]" + "'", str49, "[5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 56]" + "'", str50, "[5, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 56]" + "'", str51, "[5, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 56]" + "'", str52, "[5, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 56]" + "'", str53, "[5, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 57]" + "'", str54, "[6, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 57]" + "'", str55, "[6, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 57]" + "'", str56, "[6, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 57]" + "'", str57, "[6, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 57]" + "'", str58, "[6, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 57]" + "'", str59, "[6, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 57]" + "'", str60, "[6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 57]" + "'", str61, "[6, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 57]" + "'", str62, "[6, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 9, 57]" + "'", str63, "[6, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 0, 58]" + "'", str64, "[7, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 1, 58]" + "'", str65, "[7, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 2, 58]" + "'", str66, "[7, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 3, 58]" + "'", str67, "[7, 3, 58]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 4, 58]" + "'", str68, "[7, 4, 58]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 5, 58]" + "'", str69, "[7, 5, 58]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 6, 58]" + "'", str70, "[7, 6, 58]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 7, 58]" + "'", str71, "[7, 7, 58]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 8, 58]" + "'", str72, "[7, 8, 58]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 9, 58]" + "'", str73, "[7, 9, 58]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 0, 59]" + "'", str74, "[8, 0, 59]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 1, 59]" + "'", str75, "[8, 1, 59]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 2, 59]" + "'", str76, "[8, 2, 59]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 3, 59]" + "'", str77, "[8, 3, 59]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 4, 59]" + "'", str78, "[8, 4, 59]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 5, 59]" + "'", str79, "[8, 5, 59]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 6, 59]" + "'", str80, "[8, 6, 59]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 7, 59]" + "'", str81, "[8, 7, 59]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 8, 59]" + "'", str82, "[8, 8, 59]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 9, 59]" + "'", str83, "[8, 9, 59]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 0, 60]" + "'", str84, "[9, 0, 60]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 1, 60]" + "'", str85, "[9, 1, 60]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 2, 60]" + "'", str86, "[9, 2, 60]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2115");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass27 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2116");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2117");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass23 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2118");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[67]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2119");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass40 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2120");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2121");
        int[] intArray6 = new int[] { (short) 0, '#', 0, ' ', 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 35, 46, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 1, 33, 100, 10]" + "'", str7, "[0, 35, 1, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 2, 34, 100, 10]" + "'", str8, "[0, 35, 2, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 3, 35, 100, 10]" + "'", str9, "[0, 35, 3, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 4, 36, 100, 10]" + "'", str10, "[0, 35, 4, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 5, 37, 100, 10]" + "'", str11, "[0, 35, 5, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 6, 38, 100, 10]" + "'", str12, "[0, 35, 6, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 7, 39, 100, 10]" + "'", str13, "[0, 35, 7, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 8, 40, 100, 10]" + "'", str14, "[0, 35, 8, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 9, 41, 100, 10]" + "'", str15, "[0, 35, 9, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 10, 42, 100, 10]" + "'", str16, "[0, 35, 10, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 11, 43, 100, 10]" + "'", str17, "[0, 35, 11, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 12, 44, 100, 10]" + "'", str18, "[0, 35, 12, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 13, 45, 100, 10]" + "'", str19, "[0, 35, 13, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 14, 46, 100, 10]" + "'", str20, "[0, 35, 14, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 15, 47, 100, 10]" + "'", str21, "[0, 35, 15, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 16, 48, 100, 10]" + "'", str22, "[0, 35, 16, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 17, 49, 100, 10]" + "'", str23, "[0, 35, 17, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 18, 50, 100, 10]" + "'", str24, "[0, 35, 18, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 19, 51, 100, 10]" + "'", str25, "[0, 35, 19, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 20, 52, 100, 10]" + "'", str26, "[0, 35, 20, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 21, 53, 100, 10]" + "'", str27, "[0, 35, 21, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 22, 54, 100, 10]" + "'", str28, "[0, 35, 22, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 23, 55, 100, 10]" + "'", str29, "[0, 35, 23, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 24, 56, 100, 10]" + "'", str30, "[0, 35, 24, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 25, 57, 100, 10]" + "'", str31, "[0, 35, 25, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 26, 58, 100, 10]" + "'", str32, "[0, 35, 26, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 27, 59, 100, 10]" + "'", str33, "[0, 35, 27, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 28, 60, 100, 10]" + "'", str34, "[0, 35, 28, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 29, 61, 100, 10]" + "'", str35, "[0, 35, 29, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 30, 62, 100, 10]" + "'", str36, "[0, 35, 30, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 31, 63, 100, 10]" + "'", str37, "[0, 35, 31, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 32, 64, 100, 10]" + "'", str38, "[0, 35, 32, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 33, 65, 100, 10]" + "'", str39, "[0, 35, 33, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 34, 66, 100, 10]" + "'", str40, "[0, 35, 34, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 35, 67, 100, 10]" + "'", str41, "[0, 35, 35, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 36, 68, 100, 10]" + "'", str42, "[0, 35, 36, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 37, 69, 100, 10]" + "'", str43, "[0, 35, 37, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 38, 70, 100, 10]" + "'", str44, "[0, 35, 38, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 39, 71, 100, 10]" + "'", str45, "[0, 35, 39, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 40, 72, 100, 10]" + "'", str46, "[0, 35, 40, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 41, 73, 100, 10]" + "'", str47, "[0, 35, 41, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 42, 74, 100, 10]" + "'", str48, "[0, 35, 42, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 43, 75, 100, 10]" + "'", str49, "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 44, 76, 100, 10]" + "'", str50, "[0, 35, 44, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 45, 77, 100, 10]" + "'", str51, "[0, 35, 45, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 46, 78, 100, 10]" + "'", str52, "[0, 35, 46, 78, 100, 10]");
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2122");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass31 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2123");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2124");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2125");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass42 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2126");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass68 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2127");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass38 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2128");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2129");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2130");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2131");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass32 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2132");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[62]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2133");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass69 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2134");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass47 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[142]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2135");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass82 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 107, 107, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 1, 106, 106, 10, -1]" + "'", str80, "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 1, 107, 107, 10, -1]" + "'", str81, "[1, 1, 107, 107, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2136");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass56 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2137");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2138");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass24 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2139");
        int[] intArray1 = new int[] { (byte) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass62 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2140");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass77 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2141");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass35 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[33, 129]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2142");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass80 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2143");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass70 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2144");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass64 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 157, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 157, 100]" + "'", str63, "[1, 157, 100]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2145");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2146");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest4.test2147");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass67 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }
}

