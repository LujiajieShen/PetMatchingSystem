/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 04 21:17:34 GMT 2024
 */

package correct_java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import correct_java_programs.POSSIBLE_CHANGE;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class POSSIBLE_CHANGE_ESTest extends POSSIBLE_CHANGE_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = null;
      int int0 = 3379;
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 3379);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[6];
      intArray0[0] = (-1388);
      intArray0[1] = (-1);
      intArray0[2] = (-1251);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = 0;
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-930));
      int[] intArray1 = new int[7];
      intArray1[0] = (-1);
      intArray1[1] = (-4537);
      intArray1[2] = (-1);
      intArray1[3] = 0;
      intArray1[4] = (-930);
      intArray1[5] = (-1388);
      intArray1[6] = 0;
      int int1 = POSSIBLE_CHANGE.possible_change(intArray1, 0);
      assertFalse(int1 == int0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[3];
      intArray0[0] = 1839;
      intArray0[1] = 276;
      intArray0[2] = 1772;
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 276);
      assertEquals(1, int0);
      
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, 1772);
      assertEquals(1, int1);
  }
}
